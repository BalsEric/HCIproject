{"version":3,"sources":["webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/shared/components/add-scene/add-scene.component.html","webpack:///src/app/shared/components/participanti/participanti.component.html","webpack:///src/app/app-angular-material.module.ts","webpack:///src/app/shared/services/participant.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/shared/components/login/login.component.ts","webpack:///src/app/shared/services/formular.service.ts","webpack:///src/app/shared/components/view-formular/view-formular.component.html","webpack:///src/app/shared/services/login.service.ts","webpack:///src/app/pages/formular-dashboard/formular-dashboard.component.html","webpack:///src/app/shared/components/formular/formular.component.html","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/app/shared/components/edit-scene/edit-scene.component.ts","webpack:///src/app/shared/services/scene.service.ts","webpack:///src/app/shared/components/edit-scene/edit-scene.component.html","webpack:///src/app/shared/components/success/success.component.html","webpack:///src/app/shared/components/empty-list-message/empty-list-message.component.html","webpack:///src/app/shared/components/empty-list-message/empty-list-message.component.ts","webpack:///src/app/shared/components/participanti/participanti.component.ts","webpack:///src/app/shared/components/add-formular/add-formular.component.ts","webpack:///src/app/shared/components/add-formular/add-formular.component.html","webpack:///src/app/shared/services/error.service.ts","webpack:///src/app/shared/components/edit-formular/edit-formular.component.html","webpack:///src/app/shared/components/register/register.component.ts","webpack:///src/app/shared/services/register.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/pages/configurations/configurations.component.ts","webpack:///src/app/shared/components/register/register.component.html","webpack:///src/app/shared/components/edit-formular/edit-formular.component.ts","webpack:///src/app/shared/components/delete-formular/delete-formular.component.html","webpack:///src/app/shared/components/link/link.component.ts","webpack:///src/app/shared/components/scene/scene.component.ts","webpack:///src/app/shared/components/scenarii/scenarii.component.ts","webpack:///src/app/shared/components/submit-form/submit-form.component.ts","webpack:///src/app/shared/components/submit-form/submit-form.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/shared/components/delete-scene/delete-scene.component.ts","webpack:///src/app/shared/components/success/success.component.ts","webpack:///src/app/shared/components/qtype/qtype.component.ts","webpack:///src/app/pages/configurations/configurations.component.html","webpack:///src/app/shared/components/qtype/qtype.component.html","webpack:///src/app/shared/components/link/link.component.html","webpack:///src/app/shared/components/scenarii/scenarii.component.html","webpack:///src/app/shared/components/view-scene/view-scene.component.ts","webpack:///src/app/shared/components/scene/scene.component.html","webpack:///src/app/shared/components/view-formular/view-formular.component.ts","webpack:///src/app/util/auth.guard.ts","webpack:///src/app/shared/services/api.service.ts","webpack:///src/app/shared/components/login/login.component.html","webpack:///src/app/pages/formular-dashboard/formular-dashboard.component.ts","webpack:///src/app/shared/constants.ts","webpack:///src/app/shared/components/delete-formular/delete-formular.component.ts","webpack:///src/app/shared/components/formular/formular.component.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/shared/components/view-scene/view-scene.component.html","webpack:///src/app/shared/components/add-scene/add-scene.component.ts","webpack:///src/app/shared/components/delete-scene/delete-scene.component.html","webpack:///src/app/app.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["HomeComponent","router","navigate","MD_COMPONENT_MODULES","AppAngularMaterialModule","ParticipantService","http","apiService","request","method","url","participant","answers","brochure","payload","environment","production","apiEndpoint","LoginComponent","loginService","user","username","password","loginUser","subscribe","next","response","token","sessionStorage","setItem","error","err","console","FormularService","formular","id","_id","LoginService","AuthService","endpointURL","getItem","authHeaders","set","EditSceneComponent","dialogRef","formularService","errorService","sceneService","snackBar","data","questionsList","scene","buttonDisabler","close","putScene","open","duration","valid","modifyErrorMessage","status","i","alert","scenes","splice","SceneService","EmptyListMessageComponent","ParticipantiComponent","participantService","dialog","displayedColumns","participants","getParticipants","log","downloadScene","AddFormularComponent","questionNr","qtypes","questions","type","asObservable","newValue","setValue","postFormular","result","push","text","ErrorService","element","RegisterComponent","registerService","email","registerUser","RegisterService","AppComponent","authService","events","val","isLoggedIn","getLoginStatus","clear","ConfigurationsComponent","EditFormularComponent","editedFormular","putFormular","LinkComponent","link","SceneComponent","handleDelete","handleUpdate","handleDeleteS","dialogConfig","afterClosed","emit","state","postLink","ScenariiComponent","getScenes","$event","sceneEdited","checkIdFunction","entity","res","findIndex","SubmitFormComponent","route","personalInfo","snapshot","paramMap","get","getFormById","length","j","personalCode","firstLetterOfTheTownBornIn","firstLetterOfTheRegionBornIn","sumOfDayAndMonth","toString","sumOfTheLast2DigitsOfBirthYear","addParticipant","AppModule","DeleteSceneComponent","sceneId","deleteScene","deleteErrorMessage","SuccessComponent","QtypeComponent","handleDeleteQ","ViewSceneComponent","editedScene","history","ViewFormularComponent","AuthGuard","ApiService","requestParams","body","params","headers","getAuthHeaders","FormularDashboardComponent","formulars","getFormulars","formularEdited","messageDuration","DeleteFormularComponent","formularId","deleteFormular","FormularComponent","appRoutes","path","pathMatch","component","canActivate","AppRoutingModule","AddSceneComponent","checked","title","postScene","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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A,U,EAAA,iN,GACE,gH,GAAA,yN,EAAA,yN,GACA,gH,GAAA,mN,EAAA,6M,GAIF,2H,GAAA,0K,EAAA;AAAA;AAAA,gB,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAA,iN,GACE,gH,GAAA,yN,EAAA,yN,GACA,gH,GAAA,mN,EAAA,6M,GAIF,2H,GAAA,0K,EAAA;AAAA;AAAA,gB,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAA,iN,GACE,gH,GAAA,yN,EAAA,0N,GACA,gH,GAAA,mN,EAAA,8M,GAIF,2H,GAAA,0K,EAAA;AAAA;AAAA,gB,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAA,iN,GACI,gH,GAAA,yN,EAAA,0N,GACF,gH,GAAA,mN,EAAA,8M,GAGF,2H,GAAA,0K,EAAA;AAAA;AAAA,gB,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAA,iN,GACE,gH,GAAA,yN,EAAA,0N,GACA,iH,GAAA,mN,EAAA,8M,GAGF,2H,GAAA,0K,EAAA;AAAA;AAAA,gB,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAA,iN,GACE,iH,GAAA,yN,EAAA,0N,GACA,iH,GAAA,mN,EAAA,8M,GAIF,2H,GAAA,0K,EAAA;AAAA;AAAA,gB,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAA,iN,GACE,iH,GAAA,yN,EAAA,0N,GACA,iH,GAAA,oN,EAAA,8M,GAGF,4H,GAAA,0K,EAAA;AAAA;AAAA,gB,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAA,iN,GACE,iH,GAAA,0N,EAAA,0N,GACA,iH,GAAA,oN,EAAA,8M,GAGF,4H,GAAA,0K,EAAA;AAAA;AAAA,gB,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAA;AAAA;AAAA,U,EAAA,iN,GACE,iH,GAAA,0N,EAAA,0N,GACA,iH,GAAA,oN,EAAA,8M,GAGF,4H,GAAA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;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AASJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AASJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAWJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AASJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAUJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAUJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAUJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAUJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAUJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAEI;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AASJ;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;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","file":"main-es5.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {ErrorService} from '../../shared/services/error.service';\r\nimport {Formular} from '../../shared/interfaces/formular';\r\nimport {Router} from '@angular/router';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n  providers: [ErrorService]\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openBrosuri() {\r\n    this.router.navigate(['home/brochure']);\r\n  }\r\n\r\n  openScenarii() {\r\n    this.router.navigate(['home/formular']);\r\n  }\r\n\r\n  openParticipanti() {\r\n    this.router.navigate(['home/participanti']);\r\n  }\r\n}\r\n","<div class=\"top-container dashboard\">\r\n  <h1>Dashboard</h1>\r\n\r\n</div>\r\n<div class=\"container\">\r\n    <button (click)=\"openScenarii()\" mat-flat-button onclick=\"this.blur()\">Scenarii</button>\r\n    <button (click)=\"openBrosuri()\" mat-flat-button onclick=\"this.blur()\">Brosuri</button>\r\n    <button (click)=\"openParticipanti()\" mat-flat-button onclick=\"this.blur()\">Participanti</button>\r\n</div>\r\n","<h1 mat-dialog-title> Adaugati o brosura noua</h1>\n\n<form>\n  <div mat-dialog-content class=\"field-container\">\n\n    <mat-form-field class=\"field\">\n      <mat-label>Titlu</mat-label>\n      <label>\n        <input matInput placeholder=\"title\" [(ngModel)]=\"scene.title\" name=\"title\">\n      </label>\n    </mat-form-field>\n\n    <h2>Scenarii</h2>\n\n    <div class=\"container quest\">\n    <mat-checkbox *ngFor=\"let formular of formulars;let i = index;\" [checked]=\"checked[i]\"\n                  (change)=\"onToggle($event, i)\" >\n      <mat-card>\n        <p>{{formular.title}}</p>\n      </mat-card>\n    </mat-checkbox>\n    </div>\n\n    <div mat-dialog-actions>\n      <button type=\"submit\" *ngIf=\"(getValue() | async) == false\" mat-button (click)=\"addScene()\"\n              [disabled]=\"!scene.title\">\n        Confirm\n      </button>\n      <button type=\"button\" mat-button (click)=\"onNoClick()\">Cancel</button>\n    </div>\n  </div>\n</form>\n\n","<div class=\"top-container dashboard\">\n  <h1>Participanti</h1>\n</div>\n<button (click)=\"Download()\" class=\"download\">Download Data</button>\n\n<table mat-table [dataSource]=\"participants\" class=\"mat-elevation-z8\">\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.id}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"Code\">\n    <th mat-header-cell *matHeaderCellDef> Code </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.personalCode}}</td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"FLOTTB\">\n    <th mat-header-cell *matHeaderCellDef> FLOTTB </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.firstLetterOfTheTownBornIn}}</td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"FLOTRB\">\n      <th mat-header-cell *matHeaderCellDef> FLOTRB </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.firstLetterOfTheRegionBornIn}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"SOTL2DOBY\">\n    <th mat-header-cell *matHeaderCellDef> SOTL2DOBY </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.sumOfTheLast2DigitsOfBirthYear}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"SODAM\">\n    <th mat-header-cell *matHeaderCellDef> SODAM </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.sumOfDayAndMonth}}</td>\n  </ng-container>\n\n\n  <ng-container matColumnDef=\"age\">\n    <th mat-header-cell *matHeaderCellDef> Age </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.age}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"type\">\n    <th mat-header-cell *matHeaderCellDef> Type </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.type}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"PT\">\n    <th mat-header-cell *matHeaderCellDef> PT </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.personalType}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"MG\">\n    <th mat-header-cell *matHeaderCellDef> MG </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.militaryGrade}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"WF\">\n    <th mat-header-cell *matHeaderCellDef> WF </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.workedFor}}</td>\n  </ng-container>\n\n\n  <ng-container matColumnDef=\"WINTMUF\">\n    <th mat-header-cell *matHeaderCellDef> WINTMUF </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.workedInThisMilitaryUnityFor}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"HPD\">\n    <th mat-header-cell *matHeaderCellDef> HPD </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.hoursPerDay}}</td>\n  </ng-container>\n\n\n  <ng-container matColumnDef=\"WIT\">\n    <th mat-header-cell *matHeaderCellDef> workingInTours </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.workingInTours}}</td>\n  </ng-container>\n\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {NgModule} from '@angular/core';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\n\r\nconst MD_COMPONENT_MODULES = [\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatInputModule,\r\n  MatTabsModule,\r\n  MatFormFieldModule,\r\n  MatDialogModule,\r\n  MatTooltipModule,\r\n  MatIconModule,\r\n  MatSelectModule,\r\n  MatCheckboxModule,\r\n  MatSnackBarModule,\r\n  MatExpansionModule,\r\n  MatProgressBarModule,\r\n  MatTableModule,\r\n  MatPaginatorModule\r\n];\r\n\r\n@NgModule({\r\n  imports: MD_COMPONENT_MODULES,\r\n  exports: MD_COMPONENT_MODULES\r\n})\r\nexport class AppAngularMaterialModule {\r\n}\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Formular} from '../interfaces/formular';\r\nimport {Participant} from '../interfaces/participants';\r\nimport {Scene} from '../interfaces/scene';\r\nimport {User} from '../interfaces/user';\r\nimport {ApiService} from './api.service';\r\n\r\n\r\n@Injectable()\r\nexport class ParticipantService {\r\n  constructor(private http: HttpClient, private apiService: ApiService) {\r\n  }\r\n  getParticipants(): Observable<any> {\r\n    return this.apiService.request({\r\n        method: 'GET',\r\n        url: 'api/participant/all'\r\n      }\r\n    );\r\n  }\r\n\r\n  addParticipant(participant: Participant, answers: string[][], brochure: Scene): Observable<any> {\r\n    return this.apiService.request({\r\n        method: 'POST',\r\n        url: 'api/participant/add',\r\n        payload: {participant, answers, brochure}\r\n      }\r\n    );\r\n  }\r\n\r\n  downloadScene(): Observable<any>{\r\n    return this.apiService.request({\r\n      method: 'GET',\r\n      url: 'api/participant/download'\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiEndpoint: 'http://localhost:8080/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, Input, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {User} from '../../interfaces/user';\r\nimport {LoginService} from '../../services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  providers: [LoginService]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  @Input() user: User = { username: null, password: null};\r\n\r\n  constructor(private router: Router,\r\n              private loginService: LoginService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  login(): void {\r\n    this.loginService.loginUser(this.user).subscribe({\r\n      next: (response) => {\r\n        if (response.token) {\r\n          sessionStorage.setItem('userToken', response.token);\r\n          this.router.navigate(['home']);\r\n        }\r\n      },\r\n      error: err => {\r\n        console.error('Error ' + err);\r\n      }\r\n    });\r\n  }\r\n\r\n  changeToRegister(): void {\r\n    this.router.navigate(['register']);\r\n  }\r\n\r\n}\r\n\r\n\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Formular} from '../interfaces/formular';\r\nimport {User} from '../interfaces/user';\r\nimport {ApiService} from './api.service';\r\n\r\n\r\n@Injectable()\r\nexport class FormularService {\r\n  constructor(private http: HttpClient, private apiService: ApiService) {\r\n  }\r\n  getFormulars(): Observable<any> {\r\n    return this.apiService.request({\r\n        method: 'GET',\r\n        url: 'api/formular/all'\r\n      }\r\n    );\r\n  }\r\n  postFormular(formular: Formular): Observable<any>{\r\n    return this.apiService.request({\r\n      method: 'POST',\r\n      url: 'api/formular/add',\r\n      payload: {formular}\r\n    });\r\n  }\r\n\r\n\r\n  deleteFormular(id: number): Observable<any> {\r\n    return this.apiService.request({\r\n      method: 'DELETE',\r\n      url: 'api/formular/' + id\r\n    });\r\n  }\r\n\r\n  putFormular(formular: Formular): Observable<Formular> {\r\n    return this.apiService.request({\r\n      method: 'PUT',\r\n      url: 'api/formular/update/' + formular._id,\r\n      payload: {formular}\r\n    });\r\n  }\r\n}\r\n","\n<div class=\"top-container dashboard\">\n  <h1>{{editedFormular.title}}</h1>\n</div>\n<div class=\"top-container dashboard desc\">\n  <h3>{{editedFormular.description}}</h3>\n</div>\n\n<div class=\"elements-container\">\n  <h1>Intrebari</h1>\n  <div class=\"container quest\">\n    <app-qtype *ngFor=\"let question of editedFormular.questions; let index = index\" [type]=\"'view'\" [question]=\"question\" [index]=\"index\"></app-qtype>\n\n  </div>\n\n</div>\n","import {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {User} from '../interfaces/user';\r\nimport {ApiService} from './api.service';\r\n\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n  constructor(private http: HttpClient, private apiService: ApiService) {\r\n  }\r\n  loginUser(user: User): Observable<any> {\r\n    return this.apiService.request({\r\n        method: 'POST',\r\n        url: 'api/users/login',\r\n        payload: {user}\r\n      }\r\n    );\r\n  }\r\n}\r\n","\n<div class=\"top-container dashboard\">\n  <h1> Situații Conflictuale</h1>\n  <button id=\"addButton\" mat-icon-button\n          (click)=\"openAddDialog()\"\n          matTooltip=\"Add a new scene\"\n          matTooltipPosition=\"right\"\n          onclick=\"this.blur()\"> Adaugati Scene\n    <mat-icon class=\"addshit\"> add_circle_outline </mat-icon>\n  </button>\n</div>\n<hr>\n<div class=\"elements-container\">\n  <div *ngIf=\"formulars.length === 0\">\n    <app-empty-list-message></app-empty-list-message>\n  </div>\n    <ng-container *ngFor=\"let formular of formulars;let i = index;\">\n        <app-formular class=\"indiv\" [formular]=\"formular\"\n                        (handleDelete)=\"onDelete(i)\"\n                        (handleUpdate)=\"onUpdate($event)\">\n        </app-formular>\n    </ng-container>\n\n</div>\n","<mat-card>\n  <mat-card-title>{{formular.title}}</mat-card-title>\n  <mat-card-actions *ngIf=\"type !== 'add'\">\n    <button (click)=\"openView(formular)\" mat-flat-button onclick=\"this.blur()\">Vizionati</button>\n    <button (click)=\"openEditDialog(formular)\"  mat-flat-button onclick=\"this.blur()\">Editare</button>\n    <button (click)=\"openDeleteDialog(formular._id)\" mat-button onclick=\"this.blur()\">Stergere</button>\n  </mat-card-actions>\n</mat-card>\n\n","import {HttpHeaders} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n  private endpointURL: string;\r\n  private authHeaders: HttpHeaders;\r\n\r\n  constructor() {\r\n    this.endpointURL = environment.apiEndpoint;\r\n  }\r\n\r\n  getLoginStatus(): boolean {\r\n    return sessionStorage.getItem('userToken') !== null;\r\n  }\r\n\r\n  getAuthHeaders() {\r\n    this.authHeaders = new HttpHeaders();\r\n\r\n    if (sessionStorage.getItem('userToken') === null) {\r\n      // It must not be null, otherwise an error is thrown\r\n      sessionStorage.setItem('userToken', ' ');\r\n    }\r\n\r\n    this.authHeaders = this.authHeaders\r\n     // .set('Authorization', sessionStorage.getItem('userToken'))\r\n      .set('Authorization', 'Bearer ' + sessionStorage.getItem('userToken'))\r\n      .set('Content-Type', 'application/json');\r\n    return this.authHeaders;\r\n  }\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {BehaviorSubject} from 'rxjs';\nimport {messageDuration} from '../../constants';\nimport {Formular} from '../../interfaces/formular';\nimport {Question} from '../../interfaces/question';\nimport {Scene} from '../../interfaces/scene';\nimport {ErrorService} from '../../services/error.service';\nimport {FormularService} from '../../services/formular.service';\nimport {SceneService} from '../../services/scene.service';\n\n@Component({\n  selector: 'app-edit-scene',\n  templateUrl: './edit-scene.component.html',\n  styleUrls: ['./edit-scene.component.scss'],\n  providers: [FormularService, ErrorService, SceneService]\n})\nexport class EditSceneComponent implements OnInit {\n\n  private buttonDisabler: BehaviorSubject<boolean>;\n  questionsList: Question[] = [];\n  scene: Scene;\n  constructor(public dialogRef: MatDialogRef<EditSceneComponent>,\n              private formularService: FormularService,\n              private errorService: ErrorService,\n              private sceneService: SceneService,\n              private snackBar: MatSnackBar,\n              @Inject(MAT_DIALOG_DATA) data) {\n    this.scene = {...data.scene};\n    this.buttonDisabler = new BehaviorSubject<boolean>(false);\n  }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  onYesClick() {\n    this.sceneService.putScene(this.scene).subscribe({\n      next: (response) => {\n        this.dialogRef.close(response);\n        this.snackBar.open('Brosura updatata.', 'Ok', {\n          duration: messageDuration.valid\n        });\n      },\n      error: error => {\n        this.snackBar.open(this.errorService.modifyErrorMessage(error.status, 'brosura'), 'Ok', {\n          duration: messageDuration.error\n        });\n      }\n    });\n  }\n\n  onDelete(i: number) {\n    if (i === null || i < 0) {\n      alert('Error! Index from delete is invalid.');\n    } else {\n      this.scene.scenes.splice(i, 1);\n    }\n  }\n\n}\n\n","import {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Formular} from '../interfaces/formular';\r\nimport {Scene} from '../interfaces/scene';\r\nimport {User} from '../interfaces/user';\r\nimport {ApiService} from './api.service';\r\n\r\n\r\n@Injectable()\r\nexport class SceneService {\r\n  constructor(private http: HttpClient, private apiService: ApiService) {\r\n  }\r\n  getScenes(): Observable<any> {\r\n    return this.apiService.request({\r\n        method: 'GET',\r\n        url: 'api/scene/all'\r\n      }\r\n    );\r\n  }\r\n\r\n  postScene(scene: Scene): Observable<any>{\r\n    return this.apiService.request({\r\n      method: 'POST',\r\n      url: 'api/scene/add',\r\n      payload: {scene}\r\n    });\r\n  }\r\n\r\n\r\n  deleteScene(id: string): Observable<any> {\r\n    return this.apiService.request({\r\n      method: 'DELETE',\r\n      url: 'api/scene/' + id\r\n    });\r\n  }\r\n\r\n  putScene(scene: Scene): Observable<Scene> {\r\n    return this.apiService.request({\r\n      method: 'PUT',\r\n      url: 'api/scene/update/' + scene._id,\r\n      payload: {scene}\r\n    });\r\n  }\r\n\r\n  postLink(id: string): Observable<string> {\r\n    return this.apiService.request({\r\n      method: 'POST',\r\n      url: 'api/scene/generate/' + id,\r\n    });\r\n  }\r\n\r\n  getFormById(id: string): Observable<any> {\r\n    return this.apiService.request({\r\n      method: 'POST',\r\n      url: 'api/scene/getForm/' + id,\r\n    });\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Editare Brosura</h1>\n<form>\n  <div mat-dialog-content class=\"field-container\">\n    <mat-form-field class=\"field\">\n      <mat-label>Titlu nou</mat-label>\n      <label>\n        <input matInput name=\"Title\" required\n               [(ngModel)]=\"scene.title\">\n      </label>\n    </mat-form-field>\n  </div>\n\n  <div class=\"elements-container\">\n    <h2>Schimbare Scene</h2>\n    <div class=\"container quest\">\n        <app-scene class=\"indiv\" *ngFor=\"let scene of scene.scenes;let i = index;\" [type]=\"'edit'\" [scene]=\"scene\" (handleDeleteS)=\"onDelete(i)\"></app-scene>\n    </div>\n  </div>\n\n  <div mat-dialog-actions>\n    <button type=\"submit\" mat-button (click)=\"onYesClick()\">Confirm</button>\n    <button type=\"button\" mat-button (click)=\"onNoClick()\">Cancel</button>\n  </div>\n</form>\n\n","<h1>Formular submited !</h1>\n","<div>\r\n  <p>There is nothing to display</p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-empty-list-message',\r\n  templateUrl: './empty-list-message.component.html',\r\n  styleUrls: ['./empty-list-message.component.scss']\r\n})\r\nexport class EmptyListMessageComponent {}\r\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {Formular} from '../../interfaces/formular';\nimport {Participant} from '../../interfaces/participants';\nimport {FormularService} from '../../services/formular.service';\nimport {ParticipantService} from '../../services/participant.service';\n\n\n@Component({\n  selector: 'app-participanti',\n  templateUrl: './participanti.component.html',\n  styleUrls: ['./participanti.component.scss'],\n  providers: [ParticipantService]\n})\nexport class ParticipantiComponent implements OnInit {\n  displayedColumns: string[] = ['position', 'Code', 'FLOTTB', 'FLOTRB', 'SOTL2DOBY', 'SODAM', 'age', 'type', 'PT', 'MG', 'WF', 'WINTMUF', 'WIT'];\n  participants: Participant[] = [];\n  constructor(private participantService: ParticipantService,\n              public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.participantService.getParticipants().subscribe(\n      (response) => {\n        this.participants = response.participants;\n        console.log(this.participants);\n      },\n      error => {\n        console.log(error);\n        this.participants = [];\n      });\n  }\n\n  Download() {\n    this.participantService.downloadScene().subscribe(\n      (response) => {\n        console.log(response);\n      },\n      error => {\n        console.log(error);\n      });\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {messageDuration} from '../../constants';\nimport {Formular} from '../../interfaces/formular';\nimport {Question} from '../../interfaces/question';\nimport {ErrorService} from '../../services/error.service';\nimport {FormularService} from '../../services/formular.service';\n\n@Component({\n  selector: 'app-add-formular',\n  templateUrl: './add-formular.component.html',\n  styleUrls: ['./add-formular.component.scss'],\n  providers: [FormularService, ErrorService]\n})\nexport class AddFormularComponent implements OnInit {\n  formular: Formular = {};\n  questionNr = 0;\n  qtypes = ['short-answer', 'check-answer', 'grade-answer'];\n  questions: Question[] = [];\n  type = 'short-answer';\n\n  private buttonDisabler: BehaviorSubject<boolean>;\n\n  constructor(public dialogRef: MatDialogRef<AddFormularComponent>,\n              private formularService: FormularService,\n              private errorService: ErrorService,\n              private snackBar: MatSnackBar) {\n    this.buttonDisabler = new BehaviorSubject<boolean>(false);\n  }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  getValue(): Observable<boolean> {\n    return this.buttonDisabler.asObservable();\n  }\n\n  setValue(newValue): void {\n    this.buttonDisabler.next(newValue);\n  }\n\n  addFormular() {\n    this.setValue(true);\n    this.formular.questions = this.questions;\n    this.formularService.postFormular(this.formular).subscribe({\n      next: (result: Formular) => {\n        this.dialogRef.close(result);\n        this.snackBar.open('Formular added.', 'Ok', {\n          duration: messageDuration.valid\n        });\n      },\n      error: error => {\n        this.setValue(false);\n        this.snackBar.open(this.errorService.modifyErrorMessage(error.status, 'formular'), 'Ok', {\n          duration: messageDuration.error\n        });\n      }\n    });\n  }\n\n  addQuestion() {\n    this.questions.push( { text: null, type: this.type, answers: null });\n    this.questionNr++;\n    this.type = 'short-answer';\n  }\n}\n","<h1 mat-dialog-title> Adaugati o scena noua</h1>\n<form>\n  <div mat-dialog-content class=\"field-container\">\n    <mat-form-field class=\"field\">\n      <mat-label>Titlu</mat-label>\n      <label>\n        <input matInput placeholder=\"title\" [(ngModel)]=\"formular.title\" name=\"title\">\n      </label>\n    </mat-form-field>\n\n    <mat-form-field class=\"field\">\n      <mat-label>Descriere</mat-label>\n      <label>\n        <input matInput placeholder=\"description\" [(ngModel)]=\"formular.description\" name=\"description\">\n      </label>\n    </mat-form-field>\n\n    <h2>Adaugati Intrebari</h2>\n    <div class=\"container quest\">\n      <app-qtype *ngFor=\"let question of questions; let index = index\" [question]=\"question\" [type]=\"'add'\" [index]=\"index\"></app-qtype>\n    </div>\n    <div class=\"card\">\n      <h5 class=\"card-header\">Q {{questionNr}}</h5>\n      <div class=\"card-body\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <mat-select [(value)]=\"type\">\n                  <mat-option  *ngFor=\"let otype of qtypes\" [value]=\"otype\">\n                    {{otype}}\n                  </mat-option>\n                </mat-select>\n            </div>\n          <div class=\"row\">\n            <button class=\"btn btn-warning\" (click)=\"addQuestion()\">Add question</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n    <div mat-dialog-actions>\n      <button type=\"submit\" *ngIf=\"(getValue() | async) == false\" mat-button (click)=\"addFormular()\"\n              [disabled]=\"!formular.title || !formular.description\">\n        Confirm\n      </button>\n      <button type=\"button\" mat-button (click)=\"onNoClick()\">Cancel</button>\n    </div>\n  </div>\n</form>\n\n","import {Injectable} from '@angular/core';\r\n\r\n\r\n@Injectable()\r\nexport class ErrorService {\r\n\r\n  deleteErrorMessage(status, element: string) {\r\n    return 'Something went wrong - could not delete ' + element;\r\n  }\r\n\r\n  modifyErrorMessage(status, element: string) {\r\n    switch (status) {\r\n      case 409:\r\n        return 'A ' + element + ' with this name already exists';\r\n      case 400:\r\n        return 'Wrong input - fields do not match criteria';\r\n      case 401:\r\n        return 'Unauthorized';\r\n      default:\r\n        return 'Something went wrong, sorry';\r\n    }\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Editare Scena</h1>\n<form>\n  <div mat-dialog-content class=\"field-container\">\n    <mat-form-field class=\"field\">\n      <mat-label>Titlu nou</mat-label>\n      <label>\n        <input matInput name=\"Title\" required [(ngModel)]=\"editedFormular.title\">\n      </label>\n    </mat-form-field>\n\n    <mat-form-field class=\"field\">\n      <mat-label>Descriere noua</mat-label>\n      <label>\n        <input matInput name=\"Description\" required\n               [(ngModel)]=\"editedFormular.description\">\n      </label>\n    </mat-form-field>\n  </div>\n\n  <div class=\"elements-container\">\n    <h2>Schimbare Intrebari</h2>\n    <div class=\"container quest\">\n      <app-qtype *ngFor=\"let question of editedFormular.questions; let index = index\" [type]=\"'edit'\" [question]=\"question\" [index]=\"index\"  (handleDeleteQ)=\"onDelete(index)\"></app-qtype>\n    </div>\n  </div>\n\n  <div mat-dialog-actions>\n    <button type=\"submit\" mat-button (click)=\"onYesClick()\">Confirm</button>\n    <button type=\"button\" mat-button (click)=\"onNoClick()\">Cancel</button>\n  </div>\n</form>\n\n","import {Component, Input, OnInit, ViewEncapsulation} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {User} from '../../interfaces/user';\nimport {LoginService} from '../../services/login.service';\nimport {RegisterService} from '../../services/register.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n  providers: [RegisterService]\n})\nexport class RegisterComponent implements OnInit {\n  @Input() user: User = { username: null, email: null, password: null};\n\n  constructor(private router: Router,\n              private registerService: RegisterService) {\n  }\n\n  ngOnInit(): void {\n  }\n  register(): void {\n    this.registerService.registerUser(this.user).subscribe({\n      next: (response) => {\n        if (response.token) {\n          sessionStorage.setItem('userToken', response.token);\n          this.router.navigate(['home']);\n        }\n      },\n      error: err => {\n        console.error('Error' + err);\n      }\n    });\n  }\n\n  changeToLogin(): void {\n    this.router.navigate(['login']);\n  }\n}\n","import {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {User} from '../interfaces/user';\r\nimport {ApiService} from './api.service';\r\n\r\n\r\n@Injectable()\r\nexport class RegisterService {\r\n  constructor(private http: HttpClient, private apiService: ApiService) {\r\n  }\r\n  registerUser(user: User): Observable<any> {\r\n    return this.apiService.request({\r\n        method: 'POST',\r\n        url: 'api/users',\r\n        payload: {user}\r\n      }\r\n    );\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {AuthService} from './shared/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  isLoggedIn: boolean;\r\n  constructor(private authService: AuthService,\r\n              private router: Router) {\r\n    router.events.subscribe(val => {\r\n      this.isLoggedIn = authService.getLoginStatus();\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    sessionStorage.clear();\r\n    this.router.navigate(['']);\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-configurations',\r\n  templateUrl: './configurations.component.html',\r\n  styleUrls: ['./configurations.component.scss']\r\n})\r\nexport class ConfigurationsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-card class=\"login_card\">\n  <mat-card-header>\n    <mat-card-title>\n      Register\n    </mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <form class=\"login_form\">\n      <table class=\"full-width\">\n        <tr>\n        <td>\n          <mat-form-field class=\"full-width\" *ngIf=\"user\">\n            <label>\n              <input matInput placeholder=\"Username\" [(ngModel)]=\"user.username\" name=\"username\" required>\n            </label>\n          </mat-form-field>\n        </td>\n      </tr>\n        <tr>\n          <td>\n            <mat-form-field class=\"full-width\" *ngIf=\"user\">\n              <label>\n                <input matInput placeholder=\"Email\" [(ngModel)]=\"user.email\" name=\"email\" required>\n              </label>\n            </mat-form-field>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <mat-form-field class=\"full-width\" *ngIf=\"user\">\n              <label>\n                <input matInput placeholder=\"Password\" [(ngModel)]=\"user.password\" type=\"password\" name=\"password\" required>\n              </label>\n            </mat-form-field>\n          </td>\n        </tr>\n      </table>\n      <mat-card-actions align=\"middle\">\n        <button mat-flat-button (click)=\"register()\" >Register</button>\n        <button mat-raised-button (click)=\"changeToLogin()\" >Change to Login</button>\n      </mat-card-actions>\n    </form>\n  </mat-card-content>\n\n</mat-card>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {messageDuration} from '../../constants';\nimport {Formular} from '../../interfaces/formular';\nimport {Question} from '../../interfaces/question';\nimport {ErrorService} from '../../services/error.service';\nimport {FormularService} from '../../services/formular.service';\n\n@Component({\n  selector: 'app-edit-formular',\n  templateUrl: './edit-formular.component.html',\n  styleUrls: ['./edit-formular.component.scss'],\n  providers: [FormularService, ErrorService]\n})\nexport class EditFormularComponent implements OnInit {\n\n  private buttonDisabler: BehaviorSubject<boolean>;\n  questionsList: Question[] = [];\n  editedFormular: Formular;\n  constructor(public dialogRef: MatDialogRef<EditFormularComponent>,\n              private formularService: FormularService,\n              private errorService: ErrorService,\n              private snackBar: MatSnackBar,\n              @Inject(MAT_DIALOG_DATA) data) {\n    this.editedFormular = {...data.formular};\n    this.buttonDisabler = new BehaviorSubject<boolean>(false);\n  }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  onYesClick() {\n    this.formularService.putFormular(this.editedFormular).subscribe({\n      next: (response) => {\n        this.dialogRef.close(response);\n        this.snackBar.open('Formular updated.', 'Ok', {\n          duration: messageDuration.valid\n        });\n      },\n      error: error => {\n        this.snackBar.open(this.errorService.modifyErrorMessage(error.status, 'formular'), 'Ok', {\n          duration: messageDuration.error\n        });\n      }\n    });\n  }\n  onDelete(i: number) {\n    if (i === null || i < 0) {\n      alert('Error! Index from delete is invalid.');\n    } else {\n      this.editedFormular.questions.splice(i, 1);\n    }\n  }\n\n}\n","<h1 mat-dialog-title> Delete this scene?</h1>\n<div mat-dialog-actions class=\"delete\">\n  <button mat-button onclick=\"this.blur()\" (click)=\"onYesClick()\">Confirm</button>\n  <button mat-button onclick=\"this.blur()\" (click)=\"onNoClick()\">Cancel</button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-link',\n  templateUrl: './link.component.html',\n  styleUrls: ['./link.component.css']\n})\nexport class LinkComponent implements OnInit {\n  link: string;\n  constructor( @Inject(MAT_DIALOG_DATA) data) {\n    console.log(data);\n    this.link = data.response.token;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {Router} from '@angular/router';\nimport {Formular} from '../../interfaces/formular';\nimport {Scene} from '../../interfaces/scene';\nimport {SceneService} from '../../services/scene.service';\nimport {DeleteFormularComponent} from '../delete-formular/delete-formular.component';\nimport {DeleteSceneComponent} from '../delete-scene/delete-scene.component';\nimport {EditFormularComponent} from '../edit-formular/edit-formular.component';\nimport {EditSceneComponent} from '../edit-scene/edit-scene.component';\nimport {LinkComponent} from '../link/link.component';\n\n@Component({\n  selector: 'app-scene',\n  templateUrl: './scene.component.html',\n  styleUrls: ['./scene.component.scss'],\n  providers: [SceneService]\n})\nexport class SceneComponent implements OnInit {\n  @Input() type: string;\n  @Input() scene: Scene;\n  @Output() handleDelete = new EventEmitter<void>();\n  @Output() handleUpdate = new EventEmitter<any>();\n  @Output() handleDeleteS = new EventEmitter<void>();\n  constructor(public dialog: MatDialog,\n              public router: Router,\n              private sceneService: SceneService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  openEditDialog(scene: Scene) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      scene\n    };\n\n    this.dialog.open(EditSceneComponent, dialogConfig).afterClosed()\n      .subscribe((result: Scene) => {\n        if (result) {\n          this.handleUpdate.emit({scene: result});\n        }\n      });\n  }\n\n  openDeleteDialog(id: string) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      id\n    };\n\n    this.dialog.open(DeleteSceneComponent, dialogConfig).afterClosed()\n      .subscribe((result: boolean) => {\n        if (result) {\n          // Update the frontend list instead of refreshing the page.\n          this.handleDelete.emit();\n        }\n      });\n  }\n\n  openView(scene: Scene) {\n    this.router.navigate(['home/brochure/view'], {state: {data: {scene}}});\n    // history.state.data\n  }\n\n  generateLink( id: string) {\n    this.sceneService.postLink(id).subscribe( (response) => {\n      if (response) {\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.data = {\n          response\n        };\n        this.dialog.open(LinkComponent, dialogConfig);\n      }\n    },\n    error => {\n      console.log(error);\n    });\n\n  }\n\n  openDeleteEdit() {\n    this.handleDeleteS.emit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {Formular} from '../../interfaces/formular';\nimport {Scene} from '../../interfaces/scene';\nimport {FormularService} from '../../services/formular.service';\nimport {SceneService} from '../../services/scene.service';\nimport {AddFormularComponent} from '../add-formular/add-formular.component';\nimport {AddSceneComponent} from '../add-scene/add-scene.component';\n\n@Component({\n  selector: 'app-scenarii',\n  templateUrl: './scenarii.component.html',\n  styleUrls: ['./scenarii.component.scss'],\n  providers: [SceneService]\n})\nexport class ScenariiComponent implements OnInit {\n\n  scenes: Scene[] = [];\n  constructor(private sceneService: SceneService,\n              public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.sceneService.getScenes().subscribe(\n      (response) => {\n        this.scenes = response.scenes;\n      },\n      error => {\n        console.log(error);\n        this.scenes = [];\n      });\n  }\n\n  openAddDialog() {\n    this.dialog.open(AddSceneComponent).afterClosed().subscribe((result: any) => {\n      if (result) {\n        this.scenes.push(result.scene);\n      }\n    });\n  }\n\n  /**\n   * Delete one element on index i from the departments list.\n   * (handleDelete) Output from DepartmentComponent can call this function.\n   * @param i - index of the list\n   */\n  onDelete(i: number) {\n    if (i === null || i < 0) {\n      alert('Error! Index from delete is invalid.');\n    } else {\n      this.scenes.splice(i, 1);\n    }\n  }\n\n  /**\n   * Updates an element from the list with a new object passed by $event.\n   * (handleUpdate) Output from DepartmentComponent can call this function.\n   * @param $event contains the new updated object\n   */\n  onUpdate($event: any) {\n    const sceneEdited = $event.scene.scene[0];\n    const checkIdFunction = (entity) => entity._id === sceneEdited._id;\n    const res = this.scenes.findIndex(checkIdFunction);\n    this.scenes[res] = sceneEdited;\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {messageDuration} from '../../constants';\nimport {Participant} from '../../interfaces/participants';\nimport {Scene} from '../../interfaces/scene';\nimport {ErrorService} from '../../services/error.service';\nimport {ParticipantService} from '../../services/participant.service';\nimport {SceneService} from '../../services/scene.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-submit-form',\n  templateUrl: './submit-form.component.html',\n  styleUrls: ['./submit-form.component.scss'],\n  providers: [SceneService, ErrorService, ParticipantService]\n})\nexport class SubmitFormComponent implements OnInit {\n  id: string;\n  brochure: Scene = {};\n  personalInfo: Participant = {};\n  answers: string[][];\n  constructor( public router: Router,\n               private route: ActivatedRoute,\n               private participantService: ParticipantService,\n               private errorService: ErrorService,\n               private sceneService: SceneService,\n               private snackBar: MatSnackBar) {\n    this.id = this.route.snapshot.paramMap.get('id');\n    console.log(this.id);\n    this.sceneService.getFormById(this.id).subscribe(\n      (response) => {\n        this.brochure = response.brochure;\n        this.answers = [];\n        for(let i = 0; i < this.brochure.scenes.length; i++) {\n          this.answers[i] = [];\n          for(let j = 0; j < this.brochure.scenes[i].questions.length; j++) {\n            this.answers[i][j] = '';\n          }\n        }\n        console.log(this.brochure);\n      },\n      error => {\n        console.log(error);\n      });\n  }\n\n  ngOnInit(): void {\n  }\n\n  sendData(personalInfo: Participant, answers: string[][], brochure: Scene) {\n    personalInfo.personalCode = personalInfo.firstLetterOfTheTownBornIn + personalInfo.firstLetterOfTheRegionBornIn + personalInfo.sumOfDayAndMonth.toString() + personalInfo.sumOfTheLast2DigitsOfBirthYear.toString();\n\n    console.log(this.personalInfo);\n    this.participantService.addParticipant(this.personalInfo, answers, brochure).subscribe({\n      next: (response) => {\n        if (response){\n          console.log(response);\n        }\n        this.snackBar.open('Participant adaugat', 'Ok', {\n          duration: messageDuration.valid\n        });\n        this.router.navigate(['submit/success']);\n      },\n      error: error => {\n        this.snackBar.open(this.errorService.modifyErrorMessage(error.status, 'participant'), 'Ok', {\n          duration: messageDuration.error\n        });\n      }\n    });\n  }\n}\n","\n\n<form>\n  <p>Studiul este derulat de către Centrul de Cercetare în Psihologia Muncii și Organizațională din cadrul Universității Babeș-Bolyai, de către doctorand Maria Telecan. Acest studiu vizează modul în care angajații percep situațiile existente de la locul de muncă. Bifaţi DA, dacă sunteţi de acord să participaţi la acest studiu</p>\n  <mat-radio-group aria-label=\"Select an option\">\n    <mat-radio-button class=\"rdn\" name=\"yesOrNo\" [(ngModel)]=\"personalInfo.agree\" value=\"{{true}}\">Da</mat-radio-button>\n    <mat-radio-button class=\"rdn\" name=\"yesOrNo\" [(ngModel)]=\"personalInfo.agree\" value=\"{{false}}\">Nu</mat-radio-button>\n  </mat-radio-group>\n\n\n  <p>În acest instrument, sunt prezentate o serie de scenarii care descriu situații de muncă. Fiecare scenariu descrie o situație de muncă și vă solicită să faceți parte din situația de muncă descrisă. Citiți cu atenție fiecare scenariu și imaginați-vă cât mai bine în situația respectivă. Fiecare scenariu este urmat de o serie de enunțuri de evaluat. Astfel că, pornind de la descrierea situației din fiecare scenariu, vă rugăm să evaluați fiecare enunț completând spațiile libere sau, atunci când este cazul, să încercuiți varianta de răspuns care corespunde cel mai bine opiniei Dumneavoastră. Este important să știți că nu există răspuns corect sau greșit, iar răspunsurile oferite la evaluarea acestor scenarii sunt anonime și confidențiale. Opinia dumneavoastră onestă ne va ajuta să înțelegem mai bine modul în care angajații percep situațiile existente de la locul de muncă.\n  </p>\n\n  <div mat-dialog-content class=\"field-container\">\n    <p>Vă rugăm să completați codul personal răspunzând întrebărilor de mai jos conform exemplului</p>\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Prima literă a orașului în care v-ați născut </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.firstLetterOfTheTownBornIn\" name=\"1\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Prima literă a județului în care v-ați născut </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.firstLetterOfTheRegionBornIn\" name=\"2\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Suma ultimelor două cifre ale anului nașterii </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.sumOfTheLast2DigitsOfBirthYear\" name=\"3\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Suma dintre ziua și luna nașterii </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.sumOfDayAndMonth\" name=\"4\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n<hr>\n    <h1>Despre dumneavoastră:</h1>\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Vârsta: </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.age\" name=\"5\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Genul: </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.type\" name=\"6\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Tip de personal: </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.personalType\" name=\"7\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Deţin gradul militar: </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.militaryGrade\" name=\"8\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Lucrez în această funcție de: </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.workedFor\" name=\"9\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Lucrez în cadrul unității militare actuale de: </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.workedInThisMilitaryUnityFor\" name=\"10\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Lucrez în medie X ore pe zi:</h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.hoursPerDay\" name=\"11\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Lucrez în ture: (da/nu)</h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.workingInTours\" name=\"12\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"card\" *ngIf=\"personalInfo.workingInTours === 'da'\" >\n      <h2 class=\"card-header\">Care este programul turelor:</h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.program\" name=\"13\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n\n  </div>\n\n  <h1>{{brochure.title}}</h1>\n\n  <div class=\"scenes\" *ngFor=\"let scene of brochure.scenes;let i = index\">\n    <hr>\n    <h2>{{scene.title}}</h2>\n    <h3>{{scene.description}}</h3>\n    <p>Pornind de la scenariul prezentat:\n    </p>\n    <div  mat-dialog-content class=\"field-container questions\" *ngFor=\"let question of scene.questions; let j=index\">\n        <div mat-dialog-content class=\"field-container\" [ngSwitch]=\"question.type\">\n\n\n          <div class=\"card\" *ngSwitchCase=\"'short-answer'\">\n            <h2 class=\"card-header\">{{question.text}}</h2>\n            <div class=\"card-body\">\n              <mat-form-field class=\"field\">\n                <label>\n                  <input matInput [(ngModel)]=\"answers[i][j]\" name=\"title\" maxlength=\"200\">\n                </label>\n              </mat-form-field>\n            </div>\n          </div>\n\n\n          <div class=\"card\" *ngSwitchCase=\"'check-answer'\">\n            <h2 class=\"card-header\">{{question.text}}</h2>\n            <div class=\"card-body\">\n                <h3>Options</h3>\n                  <mat-radio-group aria-label=\"Select an option\">\n                    <mat-radio-button class=\"rdn\" [(ngModel)]=\"answers[i][j]\" name=\"optionC\" *ngFor=\"let option of question.answers.split(';')\" value=\"{{option}}\">{{option}}</mat-radio-button>\n                  </mat-radio-group>\n            </div>\n          </div>\n\n          <div class=\"card\" *ngSwitchCase=\"'grade-answer'\">\n            <h2 class=\"card-header\">{{question.text}}</h2>\n            <div class=\"card-body\">\n              <h3>Grades</h3>\n              <mat-radio-group aria-label=\"Select an option\">\n                <mat-radio-button class=\"rdn\" name=\"optionG\" [(ngModel)]=\"answers[i][j]\"  *ngFor=\"let option of ['1=Deloc',2,3,4,5,6,'7=In mare masura']\" value=\"{{option}}\">{{option}}</mat-radio-button>\n              </mat-radio-group>\n            </div>\n          </div>\n        </div>\n\n    </div>\n  </div>\n  <button (click)=\"sendData(personalInfo, answers, brochure)\" class=\"btn btn-danger btn-lg btn-block\">Trimiteti!</button>\n</form>\n","import {HttpClientModule} from '@angular/common/http';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {AppAngularMaterialModule} from './app-angular-material.module';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {ConfigurationsComponent} from './pages/configurations/configurations.component';\r\nimport {HomeComponent} from './pages/home/home.component';\r\nimport {EmptyListMessageComponent} from './shared/components/empty-list-message/empty-list-message.component';\r\nimport {LoginComponent} from './shared/components/login/login.component';\r\nimport {AuthGuard} from './util/auth.guard';\r\nimport { RegisterComponent } from './shared/components/register/register.component';\r\nimport { FormularDashboardComponent } from './pages/formular-dashboard/formular-dashboard.component';\r\nimport { ImportDashboardComponent } from './pages/import-dashboard/import-dashboard.component';\r\nimport { AddFormularComponent } from './shared/components/add-formular/add-formular.component';\r\nimport { EditFormularComponent } from './shared/components/edit-formular/edit-formular.component';\r\nimport { DeleteFormularComponent } from './shared/components/delete-formular/delete-formular.component';\r\nimport { FormularComponent } from './shared/components/formular/formular.component';\r\nimport { QtypeComponent } from './shared/components/qtype/qtype.component';\r\nimport { ParticipantiComponent } from './shared/components/participanti/participanti.component';\r\nimport { ScenariiComponent } from './shared/components/scenarii/scenarii.component';\r\nimport { ViewFormularComponent } from './shared/components/view-formular/view-formular.component';\r\nimport { SceneComponent } from './shared/components/scene/scene.component';\r\nimport { DeleteSceneComponent } from './shared/components/delete-scene/delete-scene.component';\r\nimport { EditSceneComponent } from './shared/components/edit-scene/edit-scene.component';\r\nimport { ViewSceneComponent } from './shared/components/view-scene/view-scene.component';\r\nimport { AddSceneComponent } from './shared/components/add-scene/add-scene.component';\r\nimport { LinkComponent } from './shared/components/link/link.component';\r\nimport { SubmitFormComponent } from './shared/components/submit-form/submit-form.component';\nimport { SuccessComponent } from './shared/components/success/success.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ConfigurationsComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    EmptyListMessageComponent,\r\n    RegisterComponent,\r\n    FormularDashboardComponent,\r\n    ImportDashboardComponent,\r\n    AddFormularComponent,\r\n    EditFormularComponent,\r\n    DeleteFormularComponent,\r\n    FormularComponent,\r\n    QtypeComponent,\r\n    ParticipantiComponent,\r\n    ScenariiComponent,\r\n    ViewFormularComponent,\r\n    SceneComponent,\r\n    DeleteSceneComponent,\r\n    EditSceneComponent,\r\n    ViewSceneComponent,\r\n    AddSceneComponent,\r\n    LinkComponent,\r\n    SubmitFormComponent,\r\n    SuccessComponent\r\n  ],\r\n  entryComponents: [\r\n    AddFormularComponent,\r\n    EditFormularComponent,\r\n    DeleteFormularComponent,\r\n    AddSceneComponent,\r\n    DeleteSceneComponent,\r\n    EditSceneComponent,\r\n    LinkComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    AppAngularMaterialModule,\r\n    MatRadioModule\r\n  ],\r\n  exports: [\r\n    AppAngularMaterialModule,\r\n  ],\r\n  providers: [AuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {messageDuration} from '../../constants';\nimport {ErrorService} from '../../services/error.service';\nimport {FormularService} from '../../services/formular.service';\nimport {SceneService} from '../../services/scene.service';\n\n@Component({\n  selector: 'app-delete-scene',\n  templateUrl: './delete-scene.component.html',\n  styleUrls: ['./delete-scene.component.css'],\n  providers: [FormularService, ErrorService, SceneService]\n})\nexport class DeleteSceneComponent implements OnInit {\n\n  sceneId: string;\n\n  constructor(public dialogRef:\n                MatDialogRef<DeleteSceneComponent>,\n              private sceneService: SceneService,\n              private errorService: ErrorService,\n              private snackBar: MatSnackBar,\n              @Inject(MAT_DIALOG_DATA) data) {\n    this.sceneId = data.id;\n  }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  onYesClick() {\n    this.sceneService.deleteScene(this.sceneId).subscribe({\n      next: () => {\n        this.dialogRef.close(true);\n        this.snackBar.open('Brochure deleted.', 'Ok', {\n          duration: messageDuration.valid,\n        });\n      },\n      error: error => {\n        this.dialogRef.close();\n        this.snackBar.open(this.errorService.deleteErrorMessage(error.status, 'brochure'), 'Ok', {\n          duration: messageDuration.error,\n        });\n      }\n    });\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.css']\n})\nexport class SuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {Question} from '../../interfaces/question';\n\n@Component({\n  selector: 'app-qtype',\n  templateUrl: './qtype.component.html',\n  styleUrls: ['./qtype.component.scss']\n})\nexport class QtypeComponent implements OnInit {\n  @Input() question: Question;\n  @Input() index: number;\n  @Input() type: string;\n  @Output() handleDeleteQ = new EventEmitter<void>();\n  constructor() { }\n  ngOnInit(): void {\n  }\n\n  openEditDialog() {\n  }\n\n  openDeleteDialog() {\n    this.handleDeleteQ.emit();\n  }\n}\n","<p>Config works</p>\r\n","<form>\n  <div mat-dialog-content class=\"field-container\" [ngSwitch]=\"question.type\">\n\n    <div class=\"card\" *ngSwitchCase=\"'short-answer'\">\n      <h5 class=\"card-header\">Tip intrebare: {{question.type}}</h5>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <input matInput [(ngModel)]=\"question.text\" name=\"title\" maxlength=\"400\">\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"card\" *ngSwitchCase=\"'check-answer'\">\n      <h5 class=\"card-header\">Tip intrebare: {{question.type}}</h5>\n      <div class=\"card-body\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <mat-form-field class=\"field\">\n              <mat-label></mat-label>\n\n                <input matInput [(ngModel)]=\"question.text\" name=\"title\" maxlength=\"400\">\n\n            </mat-form-field>\n          </div>\n          <h3>Options</h3>\n          <div class=\"container\">\n            <div class=\"row\">\n              <mat-form-field class=\"field\">\n                <mat-label></mat-label>\n\n                  <input matInput [(ngModel)]=\"question.answers\" name=\"answers\" maxlength=\"400\">\n\n              </mat-form-field>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"card\" *ngSwitchCase=\"'grade-answer'\">\n      <h5 class=\"card-header\">Tip intrebare: {{question.type}}</h5>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n\n            <input matInput [(ngModel)]=\"question.text\" name=\"title\" maxlength=\"400\">\n\n        </mat-form-field>\n      </div>\n    </div>\n    <div *ngIf=\"type == 'edit'\">\n      <mat-card>\n        <mat-card-actions>\n          <button (click)=\"openDeleteDialog()\" mat-button onclick=\"this.blur()\">Stergere</button>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n\n  </div>\n</form>\n","<div>\n  {{link}}\n</div>\n","\n<div class=\"top-container dashboard\">\n  <h1>Brosuri</h1>\n  <button id=\"addButton\" mat-icon-button\n          (click)=\"openAddDialog()\"\n          matTooltip=\"Add a new brochure\"\n          matTooltipPosition=\"right\"\n          onclick=\"this.blur()\"> Adaugati brosura\n    <mat-icon class=\"addshit\"> add_circle_outline </mat-icon>\n  </button>\n</div>\n<hr>\n<div class=\"elements-container\">\n  <ng-container *ngFor=\"let scene of scenes;let i = index;\">\n    <app-scene class=\"indiv\" [scene]=\"scene\"\n                  (handleDelete)=\"onDelete(i)\"\n                  (handleUpdate)=\"onUpdate($event)\">\n    </app-scene>\n  </ng-container>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Formular} from '../../interfaces/formular';\nimport {Scene} from '../../interfaces/scene';\nimport {ErrorService} from '../../services/error.service';\nimport {FormularService} from '../../services/formular.service';\n\n@Component({\n  selector: 'app-view-scene',\n  templateUrl: './view-scene.component.html',\n  styleUrls: ['./view-scene.component.scss'],\n  providers: [FormularService, ErrorService]\n})\nexport class ViewSceneComponent implements OnInit {\n  editedScene: Scene = {};\n  constructor() {\n    this.editedScene = {...history.state.data.scene};\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n  <mat-card-title>{{scene.title}}</mat-card-title>\n  <mat-card-actions *ngIf=\"type !== 'edit'; else elseBlock\">\n    <button (click)=\"generateLink(scene._id)\" mat-flat-button onclick=\"this.blur()\">Generate Link</button>\n    <button (click)=\"openView(scene)\" mat-flat-button onclick=\"this.blur()\">Vizionati</button>\n    <button (click)=\"openEditDialog(scene)\" mat-flat-button onclick=\"this.blur()\">Editare</button>\n    <button (click)=\"openDeleteDialog(scene._id)\" mat-button onclick=\"this.blur()\">Stergere</button>\n  </mat-card-actions>\n  <ng-template #elseBlock>\n    <button (click)=\"openDeleteEdit()\" mat-button onclick=\"this.blur()\">Stergere</button>\n  </ng-template>\n</mat-card>\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {Formular} from '../../interfaces/formular';\nimport {ErrorService} from '../../services/error.service';\nimport {FormularService} from '../../services/formular.service';\n\n@Component({\n  selector: 'app-view-formular',\n  templateUrl: './view-formular.component.html',\n  styleUrls: ['./view-formular.component.scss'],\n  providers: [FormularService, ErrorService]\n})\nexport class ViewFormularComponent implements OnInit {\n  editedFormular: Formular;\n  constructor() {\n    this.editedFormular = {...history.state.data.formular};\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {AuthService} from '../shared/services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService,\r\n              private router: Router) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const isLoggedIn = this.authService.getLoginStatus();\r\n    if (isLoggedIn === false) {\r\n      this.router.navigate(['']);\r\n    }\r\n    return isLoggedIn;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {environment} from '../../../environments/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {IRequestParams} from '../interfaces/IRequestParams';\r\nimport {AuthService} from './auth.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ApiService {\r\n  private endpointURL: string;\r\n\r\n  constructor(private http: HttpClient, private authService: AuthService) {\r\n    this.endpointURL = environment.apiEndpoint;\r\n  }\r\n\r\n  request<TResponse>(requestParams: IRequestParams): Observable<any> {\r\n    return this.http.request(\r\n      requestParams.method,\r\n      this.endpointURL + requestParams.url,\r\n      {\r\n        body: requestParams.payload,\r\n        params: requestParams.params,\r\n        headers: this.authService.getAuthHeaders()\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-card class=\"login_card\">\r\n  <mat-card-header>\r\n    <mat-card-title>\r\n      Login\r\n    </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form class=\"login_form\">\r\n      <table class=\"full-width\">\r\n        <tr>\r\n          <td>\r\n            <mat-form-field class=\"full-width\" *ngIf=\"user\">\r\n              <label>\r\n                <input matInput placeholder=\"Username\" [(ngModel)]=\"user.username\" name=\"username\" required>\r\n              </label>\r\n            </mat-form-field>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <mat-form-field class=\"full-width\" *ngIf=\"user\">\r\n              <label>\r\n                <input matInput placeholder=\"Password\" [(ngModel)]=\"user.password\" type=\"password\" name=\"password\" required>\r\n              </label>\r\n            </mat-form-field>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n      <mat-card-actions align=\"middle\">\r\n        <button mat-flat-button (click)=\"login()\">Login</button>\r\n        <button mat-raised-button (click)=\"changeToRegister()\" >Change to Register</button>\r\n      </mat-card-actions>\r\n    </form>\r\n  </mat-card-content>\r\n\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {AddFormularComponent} from '../../shared/components/add-formular/add-formular.component';\nimport {FormularComponent} from '../../shared/components/formular/formular.component';\nimport {Formular} from '../../shared/interfaces/formular';\nimport {FormularService} from '../../shared/services/formular.service';\n\n@Component({\n  selector: 'app-formular-dashboard',\n  templateUrl: './formular-dashboard.component.html',\n  styleUrls: ['./formular-dashboard.component.scss'],\n  providers: [FormularService]\n})\nexport class FormularDashboardComponent implements OnInit {\n  formulars: Formular[] = [];\n  constructor(private formularService: FormularService,\n              public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.formularService.getFormulars().subscribe(\n      (response) => {\n          this.formulars = response.formulars;\n      },\n      error => {\n        this.formulars = [];\n      });\n  }\n\n  openAddDialog() {\n    this.dialog.open(AddFormularComponent).afterClosed().subscribe((result: any) => {\n      if (result) {\n        this.formulars.push(result.formular);\n      }\n    });\n  }\n\n  /**\n   * Delete one element on index i from the departments list.\n   * (handleDelete) Output from DepartmentComponent can call this function.\n   * @param i - index of the list\n   */\n  onDelete(i: number) {\n    if (i === null || i < 0) {\n      alert('Error! Index from delete is invalid.');\n    } else {\n      this.formulars.splice(i, 1);\n    }\n  }\n\n  /**\n   * Updates an element from the list with a new object passed by $event.\n   * (handleUpdate) Output from DepartmentComponent can call this function.\n   * @param $event contains the new updated object\n   */\n  onUpdate($event: any) {\n    const formularEdited = $event.formular.formular[0];\n    const checkIdFunction = (entity) => entity._id === formularEdited._id;\n    const res = this.formulars.findIndex(checkIdFunction);\n    this.formulars[res] = formularEdited;\n  }\n}\n","export const messageDuration = {\r\n    valid: 1000,\r\n    error: 2000\r\n};\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {ErrorService} from '../../services/error.service';\nimport {messageDuration} from '../../constants';\nimport {FormularService} from '../../services/formular.service';\n\n@Component({\n  selector: 'app-delete-formular',\n  templateUrl: './delete-formular.component.html',\n  styleUrls: ['./delete-formular.component.css'],\n  providers: [FormularService, ErrorService]\n})\nexport class DeleteFormularComponent implements OnInit {\n\n  formularId: number;\n\n  constructor(public dialogRef:\n                MatDialogRef<DeleteFormularComponent>,\n              private formularService: FormularService,\n              private errorService: ErrorService,\n              private snackBar: MatSnackBar,\n              @Inject(MAT_DIALOG_DATA) data) {\n    this.formularId = data.id;\n  }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  onYesClick() {\n    this.formularService.deleteFormular(this.formularId).subscribe({\n      next: () => {\n        this.dialogRef.close(true);\n        this.snackBar.open('Formular deleted.', 'Ok', {\n          duration: messageDuration.valid,\n        });\n      },\n      error: error => {\n        this.dialogRef.close();\n        this.snackBar.open(this.errorService.deleteErrorMessage(error.status, 'formular'), 'Ok', {\n          duration: messageDuration.error,\n        });\n      }\n    });\n\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {Router} from '@angular/router';\nimport {Formular} from '../../interfaces/formular';\nimport {DeleteFormularComponent} from '../delete-formular/delete-formular.component';\nimport {EditFormularComponent} from '../edit-formular/edit-formular.component';\n\n@Component({\n  selector: 'app-formular',\n  templateUrl: './formular.component.html',\n  styleUrls: ['./formular.component.scss']\n})\nexport class FormularComponent implements OnInit {\n  @Input() type: string;\n  @Input() formular: Formular;\n  @Output() handleDelete = new EventEmitter<void>();\n  @Output() handleUpdate = new EventEmitter<any>();\n  constructor(public dialog: MatDialog,\n              public router: Router) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  openEditDialog(formular: Formular) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      formular\n    };\n\n    this.dialog.open(EditFormularComponent, dialogConfig).afterClosed()\n      .subscribe((result: Formular) => {\n        if (result) {\n          this.handleUpdate.emit({formular: result});\n        }\n      });\n  }\n\n  openDeleteDialog(id: string) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      id\n    };\n\n    this.dialog.open(DeleteFormularComponent, dialogConfig).afterClosed()\n      .subscribe((result: boolean) => {\n        if (result) {\n          // Update the frontend list instead of refreshing the page.\n          this.handleDelete.emit();\n        }\n      });\n  }\n\n  openView(formular: Formular) {\n    this.router.navigate(['home/formular/view'], {state: {data: {formular}}});\n    // history.state.data\n  }\n\n}\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ConfigurationsComponent} from './pages/configurations/configurations.component';\r\nimport {FormularDashboardComponent} from './pages/formular-dashboard/formular-dashboard.component';\r\nimport {HomeComponent} from './pages/home/home.component';\r\nimport {ImportDashboardComponent} from './pages/import-dashboard/import-dashboard.component';\r\nimport {LoginComponent} from './shared/components/login/login.component';\r\nimport {ParticipantiComponent} from './shared/components/participanti/participanti.component';\r\nimport {RegisterComponent} from './shared/components/register/register.component';\r\nimport {ScenariiComponent} from './shared/components/scenarii/scenarii.component';\r\nimport {SubmitFormComponent} from './shared/components/submit-form/submit-form.component';\r\nimport {SuccessComponent} from './shared/components/success/success.component';\r\nimport {ViewFormularComponent} from './shared/components/view-formular/view-formular.component';\r\nimport {ViewSceneComponent} from './shared/components/view-scene/view-scene.component';\r\nimport {AuthGuard} from './util/auth.guard';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    component: LoginComponent\r\n  },\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'configurations', component: ConfigurationsComponent, canActivate: [AuthGuard]},\r\n  // TODO : {path: 'home', component: HomeComponent, canActivate: [AuthGuard]}\r\n  {path: 'home', component: HomeComponent},\r\n  {path: 'home/formular', component: FormularDashboardComponent},\r\n  {path: 'home/formular/view', component: ViewFormularComponent},\r\n  {path: 'home/participanti', component: ParticipantiComponent},\r\n  {path: 'home/brochure', component: ScenariiComponent},\r\n  {path: 'home/brochure/view', component: ViewSceneComponent},\r\n  {path: 'submit/success', component: SuccessComponent},\r\n  {path: 'submit/:id', component: SubmitFormComponent}\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","\n<div class=\"top-container dashboard\">\n  <h1>{{editedScene.title}}</h1>\n</div>\n<div class=\"top-container dashboard desc\">\n  <h2>Scenarii</h2>\n</div>\n<div class=\"elements-container\">\n  <div class=\"container quest\">\n    <hr>\n      <div class=\"indiv\" *ngFor=\"let formular of editedScene.scenes;let i = index;\">\n        <div class=\"top-container dashboard\">\n          <h2>{{formular.title}}</h2>\n        </div>\n        <div class=\"top-container dashboard desc\">\n          <h3>{{formular.description}}</h3>\n        </div>\n\n        <div class=\"elements-container\">\n          <h1>Intrebari</h1>\n          <div class=\"container quest\">\n            <app-qtype *ngFor=\"let question of formular.questions; let index = index\" [type]=\"'view'\" [question]=\"question\" [index]=\"index\"></app-qtype>\n\n          </div>\n        </div>\n        <hr>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {messageDuration} from '../../constants';\nimport {Formular} from '../../interfaces/formular';\nimport {Question} from '../../interfaces/question';\nimport {Scene} from '../../interfaces/scene';\nimport {ErrorService} from '../../services/error.service';\nimport {FormularService} from '../../services/formular.service';\nimport {SceneService} from '../../services/scene.service';\n\n@Component({\n  selector: 'app-add-scene',\n  templateUrl: './add-scene.component.html',\n  styleUrls: ['./add-scene.component.scss'],\n  providers: [FormularService, ErrorService, SceneService]\n})\nexport class AddSceneComponent implements OnInit {\n  checked: boolean[] = [];\n  scene: Scene = { title: '', scenes: []};\n  formulars: Formular[] = [];\n  private buttonDisabler: BehaviorSubject<boolean>;\n\n  constructor(public dialogRef: MatDialogRef<AddSceneComponent>,\n              private sceneService: SceneService,\n              private errorService: ErrorService,\n              private formularService: FormularService,\n              private snackBar: MatSnackBar) {\n    this.buttonDisabler = new BehaviorSubject<boolean>(false);\n    this.formularService.getFormulars().subscribe(\n      (response) => {\n        this.formulars = [...response.formulars];\n        for ( let j = 0; j < this.formulars.length; j++){\n          this.checked.push(false);\n        }\n      },\n      error => {\n        console.log(error);\n        this.formulars = [];\n      });\n  }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  getValue(): Observable<boolean> {\n    return this.buttonDisabler.asObservable();\n  }\n\n  setValue(newValue): void {\n    this.buttonDisabler.next(newValue);\n  }\n\n  addScene() {\n    this.setValue(true);\n    for ( let j = 0; j < this.formulars.length; j++){\n      if (this.checked[j] === true ) {\n        this.scene.scenes.push(this.formulars[j]);\n      }\n    }\n    this.sceneService.postScene(this.scene).subscribe({\n      next: (result: Scene) => {\n        this.dialogRef.close(result);\n        this.snackBar.open('Brochure added.', 'Ok', {\n          duration: messageDuration.valid\n        });\n      },\n      error: error => {\n        this.setValue(false);\n        this.snackBar.open(this.errorService.modifyErrorMessage(error.status, 'brochure'), 'Ok', {\n          duration: messageDuration.error\n        });\n      }\n    });\n  }\n  onToggle($event: MatCheckboxChange, i: number) {\n    this.checked[i] = $event.checked;\n  }\n\n}\n","<h1 mat-dialog-title> Delete this brochure?</h1>\n<div mat-dialog-actions class=\"delete\">\n  <button mat-button onclick=\"this.blur()\" (click)=\"onYesClick()\">Confirm</button>\n  <button mat-button onclick=\"this.blur()\" (click)=\"onNoClick()\">Cancel</button>\n</div>\n","<!doctype html>\r\n<html>\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <base href=\"/\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\r\n  <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@100;300;400;500;700;900&display=swap\" rel=\"stylesheet\">\r\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\" crossorigin=\"anonymous\">\r\n</head>\r\n<body>\r\n<div class=\"content\" role=\"main\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\" integrity=\"sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI\" crossorigin=\"anonymous\"></script>\r\n</body>\r\n</html>\r\n\r\n\r\n\r\n\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}