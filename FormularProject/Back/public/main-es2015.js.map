{"version":3,"sources":["./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/shared/components/add-scene/add-scene.component.html","./src/app/shared/components/participanti/participanti.component.html","./src/app/app-angular-material.module.ts","./src/app/shared/services/participant.service.ts","./src/environments/environment.ts","./src/app/shared/components/login/login.component.ts","./src/app/shared/services/formular.service.ts","./src/app/shared/components/view-formular/view-formular.component.html","./src/app/shared/services/login.service.ts","./src/app/pages/formular-dashboard/formular-dashboard.component.html","./src/app/shared/components/formular/formular.component.html","./src/app/shared/services/auth.service.ts","./src/app/shared/components/edit-scene/edit-scene.component.ts","./src/app/shared/services/scene.service.ts","./src/app/shared/components/edit-scene/edit-scene.component.html","./src/app/shared/components/success/success.component.html","./src/app/shared/components/empty-list-message/empty-list-message.component.html","./src/app/shared/components/empty-list-message/empty-list-message.component.ts","./src/app/shared/components/participanti/participanti.component.ts","./src/app/shared/components/add-formular/add-formular.component.ts","./src/app/shared/components/add-formular/add-formular.component.html","./src/app/shared/services/error.service.ts","./src/app/shared/components/edit-formular/edit-formular.component.html","./src/app/shared/components/register/register.component.ts","./src/app/shared/services/register.service.ts","./src/app/app.component.ts","./src/app/pages/configurations/configurations.component.ts","./src/app/shared/components/register/register.component.html","./src/app/shared/components/edit-formular/edit-formular.component.ts","./src/app/shared/components/delete-formular/delete-formular.component.html","./src/app/shared/components/link/link.component.ts","./src/app/shared/components/scene/scene.component.ts","./src/app/shared/components/scenarii/scenarii.component.ts","./src/app/shared/components/submit-form/submit-form.component.ts","./src/app/shared/components/submit-form/submit-form.component.html","./src/app/app.module.ts","./src/app/shared/components/delete-scene/delete-scene.component.ts","./src/app/shared/components/success/success.component.ts","./src/app/shared/components/qtype/qtype.component.ts","./src/app/pages/configurations/configurations.component.html","./src/app/shared/components/qtype/qtype.component.html","./src/app/shared/components/link/link.component.html","./src/app/shared/components/scenarii/scenarii.component.html","./src/app/shared/components/view-scene/view-scene.component.ts","./src/app/shared/components/scene/scene.component.html","./src/app/shared/components/view-formular/view-formular.component.ts","./src/app/util/auth.guard.ts","./src/app/shared/services/api.service.ts","./src/app/shared/components/login/login.component.html","./src/app/pages/formular-dashboard/formular-dashboard.component.ts","./src/app/shared/constants.ts","./src/app/shared/components/delete-formular/delete-formular.component.ts","./src/app/shared/components/formular/formular.component.ts","./src/app/app-routing.module.ts","./src/app/shared/components/view-scene/view-scene.component.html","./src/app/shared/components/add-scene/add-scene.component.ts","./src/app/shared/components/delete-scene/delete-scene.component.html","./src/app/app.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA;AAAA;AAAO,MAAM,aAAa;IACxB,YAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,QAAQ;IACR,CAAC;IAED,WAAW;QACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,YAAY;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;IAC1C,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAC9C,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mGC7BD,2JAAqC,KACnC,sHAAI,sFAAS,MAGf,6IAAuB,KACnB,yTAAuE,YAA/D;;wBAAwB;MAAhC,slBAAuE,iFAAQ,MAC/E,yTAAsE,YAA9D;;wBAAuB;MAA/B,slBAAsE,gFAAO,MAC7E,0TAA2E,YAAnE;;wBAA4B;MAApC,ulBAA2E,qFAAY,iCAFvF,iPAAuE,GACvE,iPAAsE,GACtE,oPAA2E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uGCQ3E,0aAC8C,YAAhC;;wBAA8B;MAD5C,orCAC8C,MAC5C,2nBAAU,IACR,kHAAG,gFAAkB,mDAHuC,8BAAsB,iBAAtF,YAC8C,EADkB,SAAsB,2BAAtF,qpBAC8C,GAC5C,wIAAU,GACL,mEAAkB;uGAMvB,4SACkC,YADqC;;wBAAoB;MAA3F,gnBACkC,kFAElC,mDAFQ,oBAAyB,cADjC,YACkC,EAA1B,SAAyB,2BADjC,iPACkC;uGAzBxC,miBAAqB,oGAAwB,MAE7C;;;;;;0wBAAM,IACJ,uWAAgD,IAE9C,w3FAA8B,MAC5B,wSAAW,iFAAK,MAChB,uHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAA2E;MAAvC;;wBAAyB;MAA7D,qxEAA2E,KAI/E,uHAAI,qFAAQ,MAEZ,oJAA6B,KAC7B,qdAC8C,IAO9C,wVAAwB,IACtB,4YACkC,GADZ,uLAAqC,KAI3D,6SAAuD,YAAtB;;wBAAqB;MAAtD,wlBAAuD,+EAAM,mDA5BnE,YAAqB,GAQiD,wBAAY,EAAtC,oBAAyB,cAA7D,aAA2E,EAAb,UAAY,EAAtC,UAAyB,GAA7C,wBAAmB,EAAnC,aAA2E,EAA3D,UAAmB,GAOzB,oBAAiD,YAA/D,aAC8C,EADhC,UAAiD,GASvC,8KAAqC,GAA3D,aACkC,EADZ,UAAqC,2BAxBjE,qGAAqB,GAErB,8sBAAM,GAGF,g6EAA8B,IAG1B,+sDAA2E,IAoB7E,wPAAuD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2GChBzD,6dAAsC,iFAAK;2GAC3C,qcAA2C,kLAAoB;2GAK/D,6dAAsC,kFAAM;2GAC5C,qcAA2C,2LAA6B;2GAKxE,6dAAsC,oFAAQ;2GAC9C,qcAA2C,yMAA2C;2GAKpF,6dAAsC,oFAAQ;2GAChD,qcAA2C,2MAA6C;2GAIxF,6dAAsC,uFAAW;4GACjD,qcAA2C,6MAA+C;4GAI1F,6dAAsC,mFAAO;4GAC7C,qcAA2C,+LAAiC;4GAK5E,6dAAsC,iFAAK;4GAC3C,qcAA2C,kLAAoB;4GAI/D,6dAAsC,kFAAM;4GAC5C,qcAA2C,mLAAqB;4GAIhE,6dAAsC,gFAAI;4GAC1C,qcAA2C,2LAA6B;4GAIxE,6dAAsC,gFAAI;4GAC1C,qcAA2C,4LAA8B;4GAIzE,6dAAsC,gFAAI;4GAC1C,qcAA2C,wLAA0B;4GAKrE,6dAAsC,qFAAS;4GAC/C,qcAA2C,2MAA6C;4GAIxF,6dAAsC,iFAAK;4GAC3C,qcAA2C,0LAA4B;4GAKvE,6dAAsC,4FAAgB;4GACtD,qcAA2C,6LAA+B;4GAI5E,mvBAAuD;4GACvD,usBAA6D;2GAzF/D,2JAAqC,KACnC,sHAAI,yFAAY,MAElB,mMAA8C,YAAtC;;wBAAoB;MAA5B,wBAA8C,0FAAa,MAE3D,2rDAAsE,KAMpE,k+BAAsC,KACpC,qiBAAsC,KACtC,mhBAA2C,KAI7C,m+BAAkC,KAChC,qiBAAsC,KACtC,mhBAA2C,KAI7C,q+BAAoC,KAClC,siBAAsC,KACtC,ohBAA2C,KAI7C,q+BAAoC,KAChC,siBAAsC,KACxC,ohBAA2C,KAG7C,q+BAAuC,KACrC,siBAAsC,KACtC,qhBAA2C,KAG7C,q+BAAmC,KACjC,uiBAAsC,KACtC,qhBAA2C,KAI7C,q+BAAiC,KAC/B,uiBAAsC,KACtC,shBAA2C,KAG7C,u+BAAkC,KAChC,wiBAAsC,KACtC,shBAA2C,KAG7C,u+BAAgC,KAC9B,wiBAAsC,KACtC,shBAA2C,KAG7C,u+BAAgC,KAC9B,wiBAAsC,KACtC,shBAA2C,KAG7C,u+BAAgC,KAC9B,wiBAAsC,KACtC,shBAA2C,KAI7C,u+BAAqC,KACnC,wiBAAsC,KACtC,shBAA2C,KAG7C,u+BAAiC,KAC/B,wiBAAsC,KACtC,shBAA2C,KAI7C,u+BAAiC,KAC/B,wiBAAsC,KACtC,shBAA2C,KAI7C,8rBAAuD,KACvD,4qBAA6D,kDApF9C,mBAA2B,eAA5C,YAAsE,EAArD,SAA2B,GAM5B,0BAAuB,EAArC,aAAsC,EAAxB,SAAuB,GAMvB,sBAAmB,EAAjC,aAAkC,EAApB,SAAmB,GAMnB,wBAAqB,EAAnC,aAAoC,EAAtB,SAAqB,GAMrB,wBAAqB,EAAnC,aAAoC,EAAtB,SAAqB,GAKrB,2BAAwB,EAAtC,aAAuC,EAAzB,SAAwB,GAKxB,uBAAoB,EAAlC,aAAmC,EAArB,SAAoB,GAMpB,qBAAkB,EAAhC,aAAiC,EAAnB,SAAkB,GAKlB,sBAAmB,EAAjC,cAAkC,EAApB,SAAmB,GAKnB,oBAAiB,EAA/B,cAAgC,EAAlB,SAAiB,GAKjB,qBAAiB,EAA/B,cAAgC,EAAlB,UAAiB,GAKjB,qBAAiB,EAA/B,cAAgC,EAAlB,UAAiB,GAMjB,0BAAsB,EAApC,cAAqC,EAAvB,UAAsB,GAKtB,sBAAkB,EAAhC,cAAiC,EAAnB,UAAkB,GAMlB,sBAAkB,EAAhC,cAAiC,EAAnB,UAAkB,GAMb,oBAAmC,mBAAtD,cAAuD,EAApC,UAAmC,GAC1C,oBAAgD,mBAA5D,cAA6D,EAAjD,UAAgD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxF9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;AACJ;AACI;AACO;AACX;AACE;AACF;AACM;AACF;AACI;AACC;AACC;AACK;AACb;AACQ;AAE/D,MAAM,oBAAoB,GAAG;IAC3B,wEAAe;IACf,oEAAa;IACb,sEAAc;IACd,oEAAa;IACb,+EAAkB;IAClB,wEAAe;IACf,0EAAgB;IAChB,oEAAa;IACb,wEAAe;IACf,4EAAiB;IACjB,8EAAiB;IACjB,+EAAkB;IAClB,oFAAoB;IACpB,uEAAc;IACd,+EAAkB;CACnB,CAAC;AAMK,MAAM,wBAAwB;CACpC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BD;AAAA;AAAO,MAAM,kBAAkB;IAC7B,YAAoB,IAAgB,EAAU,UAAsB;QAAhD,SAAI,GAAJ,IAAI,CAAY;QAAU,eAAU,GAAV,UAAU,CAAY;IACpE,CAAC;IACD,eAAe;QACb,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;YAC3B,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,qBAAqB;SAC3B,CACF,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,WAAwB,EAAE,OAAmB,EAAE,QAAe;QAC3E,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;YAC3B,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,qBAAqB;YAC1B,OAAO,EAAE,EAAC,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAC;SAC1C,CACF,CAAC;IACJ,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;YAC7B,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,0BAA0B;SAChC,CAAC,CAAC;IACL,CAAC;CACF;;;;;;;;;;;;;ACrCD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,WAAW,EAAE,wBAAwB;CACtC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLnE;AAAA;AAAO,MAAM,cAAc;IAGzB,YAAoB,MAAc,EACd,YAA0B;QAD1B,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAHrC,SAAI,GAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC;IAIxD,CAAC;IAED,QAAQ;IACR,CAAC;IAED,KAAK;QACH,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;YAC/C,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAE;gBACjB,IAAI,QAAQ,CAAC,KAAK,EAAE;oBAClB,cAAc,CAAC,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;oBACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;iBAChC;YACH,CAAC;YACD,KAAK,EAAE,GAAG,CAAC,EAAE;gBACX,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC;YAChC,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;CAEF;;;;;;;;;;;;;AC9BD;AAAA;AAAO,MAAM,eAAe;IAC1B,YAAoB,IAAgB,EAAU,UAAsB;QAAhD,SAAI,GAAJ,IAAI,CAAY;QAAU,eAAU,GAAV,UAAU,CAAY;IACpE,CAAC;IACD,YAAY;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;YAC3B,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,kBAAkB;SACxB,CACF,CAAC;IACJ,CAAC;IACD,YAAY,CAAC,QAAkB;QAC7B,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;YAC7B,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,kBAAkB;YACvB,OAAO,EAAE,EAAC,QAAQ,EAAC;SACpB,CAAC,CAAC;IACL,CAAC;IAGD,cAAc,CAAC,EAAU;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;YAC7B,MAAM,EAAE,QAAQ;YAChB,GAAG,EAAE,eAAe,GAAG,EAAE;SAC1B,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,QAAkB;QAC5B,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;YAC7B,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,sBAAsB,GAAG,QAAQ,CAAC,GAAG;YAC1C,OAAO,EAAE,EAAC,QAAQ,EAAC;SACpB,CAAC,CAAC;IACL,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2GC/BG,sgBAAsI,yBAAtC,kBAAqB,oBAAC,kBAAe,gBAArD,sBAAe,EAA/F,YAAsI,EAAtC,SAAqB,EAAC,SAAe,EAArD,SAAe;2GAVnG,2JAAqC,KACnC,sHAAI,gFAAwB,MAE9B,gKAA0C,KACxC,sHAAI,gFAA8B,MAGpC,sJAAgC,KAC9B,sHAAI,sFAAS,MACb,mJAA6B,KAC3B,wdAAsI,iDAA3H,mBAAoE,2BAA/E,aAAsI,EAA3H,SAAoE,mDAT7E,iEAAwB,GAGxB,uEAA8B;;;;;;;;;;;;;;;;ACGpC;AAAA;AAAO,MAAM,YAAY;IACvB,YAAoB,IAAgB,EAAU,UAAsB;QAAhD,SAAI,GAAJ,IAAI,CAAY;QAAU,eAAU,GAAV,UAAU,CAAY;IACpE,CAAC;IACD,SAAS,CAAC,IAAU;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;YAC3B,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,iBAAiB;YACtB,OAAO,EAAE,EAAC,IAAI,EAAC;SAChB,CACF,CAAC;IACJ,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gHCNC,uHAAoC,KAClC,snBAAwB;gHAExB,wHAAgE,KAC5D,qOAEkD,YADlC;;wBAA4B;MAC5B;;wBAAiC;MAFjD,4nBAEkD,2BAFtB,kBAAqB,oBAAjD,YAEkD,EAFtB,SAAqB;gHAhBzD,2JAAqC,KACnC,sHAAI,wGAAsB,MAC1B,yZAI8B,YAHtB;;wBAAyB;MADjC,2lDAI8B,yFAC5B,62BAA0B,6FAAoB,MAGlD,uHAAI,KACJ,uJAAgC,KAC9B,qZAAoC,IAGlC,8dAAgE,iDAV1D,uBAA0B,EAD1B,iCAA4B,EAFpC,YAI8B,EADtB,SAA0B,EAD1B,SAA4B,GAGlC,YAA0B,GAKvB,2CAA8B,GAAnC,aAAoC,EAA/B,SAA8B,GAGnB,mBAAiD,YAA/D,aAAgE,EAAlD,SAAiD,2BAbjE,iPAI8B,GAC5B,2XAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uGCN5B,sWAAyC,IACvC,yTAA2E,YAAnE;;wBAA4B;MAApC,slBAA2E,kFAAS,MACpF,yTAAkF,YAA1E;;wBAAkC;MAA1C,slBAAkF,gFAAO,MACzF,oTAAkF,YAA1E;;wBAAwC;MAAhD,slBAAkF,iFAAQ,iCAH5F,oHAAyC,GACvC,iPAA2E,GAC3E,iPAAkF,GAClF,iPAAkF;uGALtF,8nBAAU,IACR,uTAAgB,+EAAkB,MAClC,uYAAyC,iDAAvB,mCAAsB,GAAxC,YAAyC,EAAvB,SAAsB,mDAF1C,wIAAU,GACQ,2DAAkB;;;;;;;;;;;;;;;;ACDpC;AAAA;AAAA;AAAA;AAAA;AAAiD;AAEa;;AAGvD,MAAM,WAAW;IAItB;QACE,IAAI,CAAC,WAAW,GAAG,qEAAW,CAAC,WAAW,CAAC;IAC7C,CAAC;IAED,cAAc;QACZ,OAAO,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,IAAI,CAAC;IACtD,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,WAAW,GAAG,IAAI,gEAAW,EAAE,CAAC;QAErC,IAAI,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE;YAChD,oDAAoD;YACpD,cAAc,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;SAC1C;QAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW;YAClC,6DAA6D;aAC3D,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;aACrE,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC3C,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;;;;;;;;;;;;;;;AC3BH;AAAA;AAAA;AAAA;AAAqC;AACW;AAczC,MAAM,kBAAkB;IAK7B,YAAmB,SAA2C,EAC1C,eAAgC,EAChC,YAA0B,EAC1B,YAA0B,EAC1B,QAAqB,EACJ,IAAI;QALtB,cAAS,GAAT,SAAS,CAAkC;QAC1C,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,aAAQ,GAAR,QAAQ,CAAa;QANzC,kBAAa,GAAe,EAAE,CAAC;QAQ7B,IAAI,CAAC,KAAK,qBAAO,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,IAAI,oDAAe,CAAU,KAAK,CAAC,CAAC;IAC5D,CAAC;IAED,QAAQ;IACR,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;YAC/C,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAE;gBACjB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,EAAE;oBAC5C,QAAQ,EAAE,0DAAe,CAAC,KAAK;iBAChC,CAAC,CAAC;YACL,CAAC;YACD,KAAK,EAAE,KAAK,CAAC,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,EAAE,IAAI,EAAE;oBACtF,QAAQ,EAAE,0DAAe,CAAC,KAAK;iBAChC,CAAC,CAAC;YACL,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,CAAS;QAChB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;YACvB,KAAK,CAAC,sCAAsC,CAAC,CAAC;SAC/C;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAChC;IACH,CAAC;CAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDD;AAAA;AAAO,MAAM,YAAY;IACvB,YAAoB,IAAgB,EAAU,UAAsB;QAAhD,SAAI,GAAJ,IAAI,CAAY;QAAU,eAAU,GAAV,UAAU,CAAY;IACpE,CAAC;IACD,SAAS;QACP,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;YAC3B,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,eAAe;SACrB,CACF,CAAC;IACJ,CAAC;IAED,SAAS,CAAC,KAAY;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;YAC7B,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,eAAe;YACpB,OAAO,EAAE,EAAC,KAAK,EAAC;SACjB,CAAC,CAAC;IACL,CAAC;IAGD,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;YAC7B,MAAM,EAAE,QAAQ;YAChB,GAAG,EAAE,YAAY,GAAG,EAAE;SACvB,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,KAAY;QACnB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;YAC7B,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,mBAAmB,GAAG,KAAK,CAAC,GAAG;YACpC,OAAO,EAAE,EAAC,KAAK,EAAC;SACjB,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,EAAU;QACjB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;YAC7B,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,qBAAqB,GAAG,EAAE;SAChC,CAAC,CAAC;IACL,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;YAC7B,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,oBAAoB,GAAG,EAAE;SAC/B,CAAC,CAAC;IACL,CAAC;CAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wGC5CO,2MAAyI,YAA9B;;wBAA6B;MAAxI,k7BAAyI,2BAA9D,sBAAe,EAAC,kBAAe,oBAA1G,YAAyI,EAA9D,SAAe,EAAC,SAAe;wGAflH,giBAAqB,2FAAe,MACpC;;;;;;0wBAAM,IACJ,sWAAgD,IAC9C,y3FAA8B,MAC5B,wSAAW,qFAAS,MACpB,wHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBACiC;MAA1B;;wBAAyB;MADhC,guFACiC,KAKvC,uJAAgC,KAC9B,uHAAI,4FAAe,MACnB,oJAA6B,KACzB,sdAAyI,IAI/I,uVAAwB,IACtB,6SAAwD,YAAvB;;wBAAsB;MAAvD,4lBAAwD,gFAAO,MAC/D,6SAAuD,YAAtB;;wBAAqB;MAAtD,4lBAAuD,+EAAM,mDArBjE,YAAqB,GAMgB,mBAAQ,EAArC,aACiC,EADJ,UAAQ,GAArB,wBAAY,EACrB,oBAAyB,cADhC,aACiC,EADjB,UAAY,EACrB,UAAyB,GADH,mBAAQ,EAArC,aACiC,EADJ,UAAQ,GASZ,oBAAiD,eAA1E,aAAyI,EAAhH,UAAiD,2BAflF,qGAAqB,GACrB,8sBAAM,GAEF,g6EAA8B,IAG1B,+zDACiC,IAarC,wPAAwD,GACxD,wPAAuD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sGCrB3D,sHAAI,gGAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+GCAvB,uHAAK,KACH,qHAAG,wGAA2B;;;;;;;;;;;;;;;;ACMhC;AAAA;AAAO,MAAM,yBAAyB;CAAG;;;;;;;;;;;;;ACOzC;AAAA;AAAO,MAAM,qBAAqB;IAGhC,YAAoB,kBAAsC,EACvC,MAAiB;QADhB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACvC,WAAM,GAAN,MAAM,CAAW;QAHpC,qBAAgB,GAAa,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QAC/I,iBAAY,GAAkB,EAAE,CAAC;IAEO,CAAC;IAEzC,QAAQ;QACN,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC,SAAS,CACjD,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;YAC1C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACjC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC,SAAS,CAC/C,CAAC,QAAQ,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCD;AAAA;AAAA;AAAA;AAAiD;AACD;AAYzC,MAAM,oBAAoB;IAS/B,YAAmB,SAA6C,EAC5C,eAAgC,EAChC,YAA0B,EAC1B,QAAqB;QAHtB,cAAS,GAAT,SAAS,CAAoC;QAC5C,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,aAAQ,GAAR,QAAQ,CAAa;QAXzC,aAAQ,GAAa,EAAE,CAAC;QACxB,eAAU,GAAG,CAAC,CAAC;QACf,WAAM,GAAG,CAAC,cAAc,EAAE,cAAc,EAAE,cAAc,CAAC,CAAC;QAC1D,cAAS,GAAe,EAAE,CAAC;QAC3B,SAAI,GAAG,cAAc,CAAC;QAQpB,IAAI,CAAC,cAAc,GAAG,IAAI,oDAAe,CAAU,KAAK,CAAC,CAAC;IAC5D,CAAC;IAED,QAAQ;IACR,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAC5C,CAAC;IAED,QAAQ,CAAC,QAAQ;QACf,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACpB,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACzC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC;YACzD,IAAI,EAAE,CAAC,MAAgB,EAAE,EAAE;gBACzB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,EAAE;oBAC1C,QAAQ,EAAE,0DAAe,CAAC,KAAK;iBAChC,CAAC,CAAC;YACL,CAAC;YACD,KAAK,EAAE,KAAK,CAAC,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE,IAAI,EAAE;oBACvF,QAAQ,EAAE,0DAAe,CAAC,KAAK;iBAChC,CAAC,CAAC;YACL,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,SAAS,CAAC,IAAI,CAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QACrE,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC;IAC7B,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0GCrDK,sgBAAsH,yBAArD,kBAAqB,oBAAgB,kBAAe,gBAA9B,qBAAc,EAArG,YAAsH,EAArD,SAAqB,EAAgB,SAAe,EAA9B,SAAc;0GAQzF;;;;;;irBAA0D,8EAE1D,2BAF0C,kBAAe,oBAAzD,YAA0D,EAAhB,SAAe,2BAAzD,uxBAA0D,gEAE1D;0GAYZ,4SAC8D,YADS;;wBAAuB;MAA9F,+mBAC8D,kFAE9D,mDAFQ,4CAAqD,wBAD7D,YAC8D,EAAtD,SAAqD,2BAD7D,iPAC8D;0GA1CpE,miBAAqB,kGAAsB,MAC3C;;;;;;gxBAAM,IACJ,uWAAgD,IAC9C,u3FAA8B,MAC5B,wSAAW,iFAAK,MAChB,uHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAA8E;MAA1C;;wBAA4B;MAAhE,kyEAA8E,KAIlF,g4FAA8B,MAC5B,0SAAW,qFAAS,MACpB,uHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAAgG;MAAtD;;wBAAkC;MAA5E,oyEAAgG,KAIpG,uHAAI,+FAAkB,MACtB,oJAA6B,KAC3B,wdAAsH,IAExH,0IAAkB,KAChB,+IAAwB,mFAAgB,MACxC,+IAAuB,KACrB,+IAAuB,KACnB,wIAAiB,KACb;;;;;;;;wBAA6B;MAAjB;;wBAAgB;MAA5B,k9DAA6B,MAC3B,qdAA0D,IAKlE,wIAAiB,KACf,2MAAwD,YAAxB;;wBAAuB;MAAvD,wBAAwD,yFAAY,MAO5E,wVAAwB,IACtB,+YAC8D,GADxC,uLAAqC,KAI3D,6SAAuD,YAAtB;;wBAAqB;MAAtD,ulBAAuD,+EAAM,mDA7CnE,YAAqB,GAMoD,wBAAY,EAAzC,oBAA4B,iBAAhE,aAA8E,EAAb,UAAY,EAAzC,UAA4B,GAAhD,wBAAmB,EAAnC,aAA8E,EAA9D,UAAmB,GAO0C,8BAAkB,EAArD,oBAAkC,uBAA5E,aAAgG,EAAnB,UAAkB,EAArD,UAAkC,GAA5D,8BAAyB,EAAzC,aAAgG,EAAhF,UAAyB,GAMhC,oBAAqD,YAAhE,aAAsH,EAA3G,UAAqD,GAO1C,qBAAgB,OAA5B,aAA6B,EAAjB,WAAgB,GACb,qBAA4B,SAAzC,aAA0D,EAA7C,WAA4B,GAc/B,+KAAqC,GAA3D,aAC8D,EADxC,WAAqC,mDAzCjE,qGAAqB,GACrB,8sBAAM,GAEF,g6EAA8B,IAG1B,+sDAA8E,IAIlF,o6EAA8B,IAG1B,+sDAAgG,IAS1E,0DAAgB,GAI9B,onDAA6B,IAmBvC,4PAAuD;;;;;;;;;;;;;;;;ACzC7D;AAAA;AAAO,MAAM,YAAY;IAEvB,kBAAkB,CAAC,MAAM,EAAE,OAAe;QACxC,OAAO,0CAA0C,GAAG,OAAO,CAAC;IAC9D,CAAC;IAED,kBAAkB,CAAC,MAAM,EAAE,OAAe;QACxC,QAAQ,MAAM,EAAE;YACd,KAAK,GAAG;gBACN,OAAO,IAAI,GAAG,OAAO,GAAG,gCAAgC,CAAC;YAC3D,KAAK,GAAG;gBACN,OAAO,4CAA4C,CAAC;YACtD,KAAK,GAAG;gBACN,OAAO,cAAc,CAAC;YACxB;gBACE,OAAO,6BAA6B,CAAC;SACxC;IACH,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2GCAK,yLAAyK,YAAlC;;wBAAiC;MAAxK,6bAAyK,2BAAzE,kBAAqB,oBAAC,kBAAe,gBAArD,sBAAe,EAA/F,YAAyK,EAAzE,SAAqB,EAAC,SAAe,EAArD,SAAe;2GAtBrG,giBAAqB,yFAAa,MAClC;;;;;;0wBAAM,IACJ,sWAAgD,IAC9C,i3FAA8B,MAC5B,uSAAW,qFAAS,MACpB,wHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAAyE;MAAnC;;wBAAkC;MAAxE,8tFAAyE,KAI7E,03FAA8B,MAC5B,ySAAW,0FAAc,MACzB,wHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBACgD;MAAzC;;wBAAwC;MAD/C,guFACgD,KAKtD,uJAAgC,KAC9B,uHAAI,gGAAmB,MACvB,oJAA6B,KAC3B,ydAAyK,IAI7K,uVAAwB,IACtB,6SAAwD,YAAvB;;wBAAsB;MAAvD,4lBAAwD,gFAAO,MAC/D,6SAAuD,YAAtB;;wBAAqB;MAAtD,4lBAAuD,+EAAM,mDA5BjE,YAAqB,GAMgB,mBAAQ,EAArC,aAAyE,EAA5C,UAAQ,GAArB,wBAAY,EAAU,oBAAkC,uBAAxE,aAAyE,EAAzD,UAAY,EAAU,UAAkC,GAA3C,mBAAQ,EAArC,aAAyE,EAA5C,UAAQ,GAOF,mBAAQ,EAA3C,aACgD,EADb,UAAQ,GAA3B,8BAAkB,EAC3B,oBAAwC,6BAD/C,aACgD,EADhC,UAAkB,EAC3B,UAAwC,GADZ,mBAAQ,EAA3C,aACgD,EADb,UAAQ,GASlC,oBAAoE,2BAA/E,aAAyK,EAA9J,UAAoE,2BAtBrF,qGAAqB,GACrB,8sBAAM,GAEF,g6EAA8B,IAG1B,+zDAAyE,IAI7E,o6EAA8B,IAG1B,+zDACgD,IAapD,wPAAwD,GACxD,wPAAuD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChB3D;AAAA;AAAO,MAAM,iBAAiB;IAG5B,YAAoB,MAAc,EACd,eAAgC;QADhC,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;QAH3C,SAAI,GAAS,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC;IAIrE,CAAC;IAED,QAAQ;IACR,CAAC;IACD,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;YACrD,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAE;gBACjB,IAAI,QAAQ,CAAC,KAAK,EAAE;oBAClB,cAAc,CAAC,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;oBACpD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;iBAChC;YACH,CAAC;YACD,KAAK,EAAE,GAAG,CAAC,EAAE;gBACX,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC;YAC/B,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;CACF;;;;;;;;;;;;;AC9BD;AAAA;AAAO,MAAM,eAAe;IAC1B,YAAoB,IAAgB,EAAU,UAAsB;QAAhD,SAAI,GAAJ,IAAI,CAAY;QAAU,eAAU,GAAV,UAAU,CAAY;IACpE,CAAC;IACD,YAAY,CAAC,IAAU;QACrB,OAAO,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC;YAC3B,MAAM,EAAE,MAAM;YACd,GAAG,EAAE,WAAW;YAChB,OAAO,EAAE,EAAC,IAAI,EAAC;SAChB,CACF,CAAC;IACJ,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVD;AAAA;AAAO,MAAM,YAAY;IAEvB,YAAoB,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAChC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;YAC5B,IAAI,CAAC,UAAU,GAAG,WAAW,CAAC,cAAc,EAAE,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,cAAc,CAAC,KAAK,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;CACF;;;;;;;;;;;;;ACfD;AAAA;AAAO,MAAM,uBAAuB;IAElC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uGCHS,k3FAAgD,MAC9C,wHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAA4F;MAArD;;wBAA2B;MAAlE,4vFAA4F,kDAAT,mBAAQ,EAA3F,aAA4F,EAAT,UAAQ,GAAxB,2BAAe,EAA3C,oBAA2B,gBAAlE,aAA4F,EAAzB,UAAe,EAA3C,UAA2B,GAAlD,2BAAsB,EAA6C,mBAAQ,EAA3F,aAA4F,EAA5E,UAAsB,EAA6C,UAAQ,2BAF/F,y3EAAgD,IAE5C,+zDAA4F;uGAO9F,23FAAgD,MAC9C,wHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAAmF;MAA/C;;wBAAwB;MAA5D,8vFAAmF,kDAAT,mBAAQ,EAAlF,aAAmF,EAAT,UAAQ,GAArB,wBAAY,EAArC,oBAAwB,aAA5D,aAAmF,EAAtB,UAAY,EAArC,UAAwB,GAA5C,wBAAmB,EAAuC,mBAAQ,EAAlF,aAAmF,EAAnE,UAAmB,EAAuC,UAAQ,2BAFtF,y3EAAgD,IAE5C,+zDAAmF;uGAOvF,23FAAgD,MAC9C,wHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAA4G;MAArE;;wBAA2B;MAAlE,ixFAA4G,kDAAT,mBAAQ,EAA3G,aAA4G,EAAT,UAAQ,GAAxB,2BAAe,EAA3D,oBAA2B,gBAAlE,aAA4G,EAAzB,UAAe,EAA3D,UAA2B,GAAlD,2BAAsB,EAA6D,mBAAQ,EAAxC,2BAAe,EAAlF,aAA4G,EAA5F,UAAsB,EAA6D,UAAQ,EAAxC,UAAe,2BAFtF,y3EAAgD,IAE5C,+zDAA4G;uGA/B5H,6oBAA6B,IAC3B,ygBAAiB,IACf,wTAAgB,sFAEhB,MAEF,+TAAkB,IAChB;;;;;;6wBAAyB,IACvB,kJAA0B,KACxB,uHAAI,KACJ,uHAAI,KACF,4YAAgD,IAOlD,uHAAI,KACF,uHAAI,KACF,4YAAgD,IAOpD,uHAAI,KACF,uHAAI,KACF,4YAAgD,IAQtD,gZAAiC,IAC/B,8RAA8C,YAAtB;;wBAAoB;MAA5C,2lBAA8C,iFAAQ,MACtD,gSAAqD,YAA3B;;wBAAyB;MAAnD,2lBAAqD,wFAAe,mDA5B/B,mBAAY,OAA/C,aAAgD,EAAb,SAAY,GASV,mBAAY,OAA/C,aAAgD,EAAb,SAAY,GASZ,oBAAY,OAA/C,aAAgD,EAAb,UAAY,GAQnC,yBAAc,EAAhC,aAAiC,EAAf,UAAc,2BArCtC,wIAA6B,GAOzB,qtBAAyB,GA8BvB,wHAAiC,GAC/B,wPAA8C,GAC9C,wPAAqD;;;;;;;;;;;;;;;;ACnC7D;AAAA;AAAA;AAAA;AAAiD;AACD;AAYzC,MAAM,qBAAqB;IAKhC,YAAmB,SAA8C,EAC7C,eAAgC,EAChC,YAA0B,EAC1B,QAAqB,EACJ,IAAI;QAJtB,cAAS,GAAT,SAAS,CAAqC;QAC7C,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,aAAQ,GAAR,QAAQ,CAAa;QALzC,kBAAa,GAAe,EAAE,CAAC;QAO7B,IAAI,CAAC,cAAc,qBAAO,IAAI,CAAC,QAAQ,CAAC,CAAC;QACzC,IAAI,CAAC,cAAc,GAAG,IAAI,oDAAe,CAAU,KAAK,CAAC,CAAC;IAC5D,CAAC;IAED,QAAQ;IACR,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC;YAC9D,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAE;gBACjB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,EAAE;oBAC5C,QAAQ,EAAE,0DAAe,CAAC,KAAK;iBAChC,CAAC,CAAC;YACL,CAAC;YACD,KAAK,EAAE,KAAK,CAAC,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE,IAAI,EAAE;oBACvF,QAAQ,EAAE,0DAAe,CAAC,KAAK;iBAChC,CAAC,CAAC;YACL,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IACD,QAAQ,CAAC,CAAS;QAChB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;YACvB,KAAK,CAAC,sCAAsC,CAAC,CAAC;SAC/C;aAAM;YACL,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5C;IACH,CAAC;CAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6GC7DD,giBAAqB,+FAAmB,MACxC,4VAAuC,IACrC,oTAAgE,YAAvB;;wBAAsB;MAA/D,slBAAgE,gFAAO,MACvE,oTAA+D,YAAtB;;wBAAqB;MAA9D,slBAA+D,+EAAM,2BAHvE,4IAAqB,GAEnB,iPAAgE,GAChE,iPAA+D;;;;;;;;;;;;;;;;ACKjE;AAAA;AAAO,MAAM,aAAa;IAExB,YAAsC,IAAI;QACxC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;IAClC,CAAC;IAED,QAAQ;IACR,CAAC;CAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6E;AACT;AAMQ;AAEN;AACjB;AAQ9C,MAAM,cAAc;IAMzB,YAAmB,MAAiB,EACjB,MAAc,EACb,YAA0B;QAF3B,WAAM,GAAN,MAAM,CAAW;QACjB,WAAM,GAAN,MAAM,CAAQ;QACb,iBAAY,GAAZ,YAAY,CAAc;QALpC,iBAAY,GAAG,IAAI,0DAAY,EAAQ,CAAC;QACxC,iBAAY,GAAG,IAAI,0DAAY,EAAO,CAAC;QACvC,kBAAa,GAAG,IAAI,0DAAY,EAAQ,CAAC;IAInD,CAAC;IAED,QAAQ;IACR,CAAC;IAED,cAAc,CAAC,KAAY;QACzB,MAAM,YAAY,GAAG,IAAI,wEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,IAAI,GAAG;YAClB,KAAK;SACN,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mFAAkB,EAAE,YAAY,CAAC,CAAC,WAAW,EAAE;aAC7D,SAAS,CAAC,CAAC,MAAa,EAAE,EAAE;YAC3B,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,EAAC,CAAC,CAAC;aACzC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB,CAAC,EAAU;QACzB,MAAM,YAAY,GAAG,IAAI,wEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,IAAI,GAAG;YAClB,EAAE;SACH,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yFAAoB,EAAE,YAAY,CAAC,CAAC,WAAW,EAAE;aAC/D,SAAS,CAAC,CAAC,MAAe,EAAE,EAAE;YAC7B,IAAI,MAAM,EAAE;gBACV,2DAA2D;gBAC3D,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ,CAAC,KAAY;QACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,EAAE,EAAC,KAAK,EAAE,EAAC,IAAI,EAAE,EAAC,KAAK,EAAC,EAAC,EAAC,CAAC,CAAC;QACvE,qBAAqB;IACvB,CAAC;IAED,YAAY,CAAE,EAAU;QACtB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAE,CAAC,QAAQ,EAAE,EAAE;YACrD,IAAI,QAAQ,EAAE;gBACZ,MAAM,YAAY,GAAG,IAAI,wEAAe,EAAE,CAAC;gBAC3C,YAAY,CAAC,IAAI,GAAG;oBAClB,QAAQ;iBACT,CAAC;gBACF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kEAAa,EAAE,YAAY,CAAC,CAAC;aAC/C;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;CACF;;;;;;;;;;;;;AC9ED;AAAA;AAAA;AAAmE;AAQ5D,MAAM,iBAAiB;IAG5B,YAAoB,YAA0B,EAC3B,MAAiB;QADhB,iBAAY,GAAZ,YAAY,CAAc;QAC3B,WAAM,GAAN,MAAM,CAAW;QAFpC,WAAM,GAAY,EAAE,CAAC;IAEmB,CAAC;IAEzC,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,SAAS,CACrC,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAChC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,aAAa;QACX,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gFAAiB,CAAC,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YAC1E,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;aAChC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,QAAQ,CAAC,CAAS;QAChB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;YACvB,KAAK,CAAC,sCAAsC,CAAC,CAAC;SAC/C;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC1B;IACH,CAAC;IAED;;;;OAIG;IACH,QAAQ,CAAC,MAAW;QAClB,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC1C,MAAM,eAAe,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,KAAK,WAAW,CAAC,GAAG,CAAC;QACnE,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QACnD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC;IACjC,CAAC;CACF;;;;;;;;;;;;;AC7DD;AAAA;AAAA;AAAgD;AAczC,MAAM,mBAAmB;IAK9B,YAAoB,MAAc,EACb,KAAqB,EACrB,kBAAsC,EACtC,YAA0B,EAC1B,YAA0B,EAC1B,QAAqB;QALtB,WAAM,GAAN,MAAM,CAAQ;QACb,UAAK,GAAL,KAAK,CAAgB;QACrB,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,aAAQ,GAAR,QAAQ,CAAa;QAR1C,aAAQ,GAAU,EAAE,CAAC;QACrB,iBAAY,GAAgB,EAAE,CAAC;QAQ7B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACjD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACrB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAC9C,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC;YAClC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAClB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnD,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;gBACrB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAChE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;iBACzB;aACF;YACD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;IACR,CAAC;IAED,QAAQ,CAAC,YAAyB,EAAE,OAAmB,EAAE,QAAe;QACtE,YAAY,CAAC,YAAY,GAAG,YAAY,CAAC,0BAA0B,GAAG,YAAY,CAAC,4BAA4B,GAAG,YAAY,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG,YAAY,CAAC,8BAA8B,CAAC,QAAQ,EAAE,CAAC;QAEpN,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/B,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC;YACrF,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAE;gBACjB,IAAI,QAAQ,EAAC;oBACX,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;iBACvB;gBACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,EAAE;oBAC9C,QAAQ,EAAE,0DAAe,CAAC,KAAK;iBAChC,CAAC,CAAC;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC3C,CAAC;YACD,KAAK,EAAE,KAAK,CAAC,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,CAAC,MAAM,EAAE,aAAa,CAAC,EAAE,IAAI,EAAE;oBAC1F,QAAQ,EAAE,0DAAe,CAAC,KAAK;iBAChC,CAAC,CAAC;YACL,CAAC;SACF,CAAC,CAAC;IACL,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yGCmFG,yIAAgE,KAC9D,8IAAwB,yGAA4B,MACpD,8IAAuB,KACrB,+3FAA8B,MAC5B,wHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAA6E;MAA7D;;wBAAkC;MAAlD,2sFAA6E,kDAAhB,sBAAe,EAA5E,aAA6E,EAAhB,UAAe,GAAzB,qBAAS,EAA5C,oBAAkC,uBAAlD,aAA6E,EAA1B,UAAS,EAA5C,UAAkC,GAAlD,aAA6E,2BAFjF,y3EAA8B,IAE1B,k4DAA6E;yGAqB/E,yIAAiD,KAC/C,8IAAwB,gFAAiB,MACzC,8IAAuB,KACrB,+3FAA8B,MAC5B,wHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAAyE;MAAzD;;wBAA2B;MAA3C,2sFAAyE,kDAAhB,sBAAe,EAAxE,aAAyE,EAAhB,UAAe,GAA5B,wBAAY,EAAxC,+DAA2B,wBAA3C,aAAyE,EAA7B,UAAY,EAAxC,UAA2B,GAA3C,aAAyE,2BAJvD,yEAAiB,GAEvC,23EAA8B,IAE1B,k4DAAyE;yGAYvE;;wBAA+I;MAAjH;;wBAA2B;MAAzD,+oDAA+I,4EAAU,mDAA/F,0BAAc,EAA1C,sEAA2B,+BAAzD,YAA+I,EAArF,UAAc,EAA1C,UAA2B,GAAC,0BAAc,EAAoD,iHAAkB,GAA9I,YAA+I,EAArF,UAAc,EAAoD,UAAkB,2BAA9I,wjDAA+I,mEAAU;yGALnK,yIAAiD,KAC/C,8IAAwB,gFAAiB,MACzC,6IAAuB,KACnB,sHAAI,oFAAO,MACT,8vBAA+C,MAC7C,udAA+I,yBAAtE,6DAAkD,GAA3H,aAA+I,EAAtE,SAAkD,2BAJ3G,yEAAiB;yGAcrC;;wBAA6J;MAAhH;;wBAA2B;MAAxE,+oDAA6J,4EAAU,mDAAzI,0BAAc,EAAC,sEAA2B,+BAAxE,YAA6J,EAA/H,UAAc,EAAC,UAA2B,GAA1C,0BAAc,EAA8F,iHAAkB,GAA5J,YAA6J,EAA/H,UAAc,EAA8F,UAAkB,2BAA5J,wjDAA6J,mEAAU;yGAL7K,yIAAiD,KAC/C,8IAAwB,gFAAiB,MACzC,6IAAuB,KACrB,sHAAI,mFAAM,MACV,8vBAA+C,MAC7C,udAA6J,GAAnF,4JAA+D,GAAzI,aAA6J,EAAnF,SAA+D,2BAJrH,yEAAiB;yGA3BjD,iXAAiH,IAC7G,ihBAA2E,IAGzE,ieAAiD,IAYjD,ieAAiD,IAUjD,keAAiD,yBAzBH,kBAA0B,yBAA1E,YAA2E,EAA3B,SAA0B,GAGtD,8BAA8B,EAAhD,YAAiD,EAA/B,SAA8B,GAY9B,8BAA8B,EAAhD,YAAiD,EAA/B,SAA8B,GAU9B,8BAA8B,EAAhD,aAAiD,EAA/B,SAA8B;yGAhCxD,0IAAwE,KACtE,sHAAI,KACJ,sHAAI,gFAAe,MACnB,sHAAI,gFAAqB,MACzB,qHAAG,gHACH,MACA,sdAAiH,yBAAtD,kBAAqD,8BAAhH,YAAiH,EAAtD,SAAqD,2BAJ5G,mEAAe,GACf,yEAAqB;yGA3K7B;;;;;;0wBAAM,IACJ,qHAAG,8eAAkU,MACrU,6vBAA+C,MAC7C;;wBAA+F;MAAlD;;wBAAgC;MAA7E,gpDAA+F,2EAAE,MACjG;;wBAAgG;MAAnD;;wBAAgC;MAA7E,gpDAAgG,2EAAE,MAIpG,sHAAG,ytCACH,MAEA,0WAAgD,IAC9C,sHAAG,gNAA2F,MAC9F,0IAAmB,KACjB,+IAAwB,mJAA6C,MACrE,+IAAuB,KACrB,g3FAA8B,MAC5B,wHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAA+F;MAA/E;;wBAAqD;MAArE,usFAA+F,KAMvG,0IAAmB,KACjB,+IAAwB,oJAA8C,MACtE,+IAAuB,KACrB,w3FAA8B,MAC5B,wHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAAiG;MAAjF;;wBAAuD;MAAvE,ysFAAiG,KAMzG,0IAAmB,KACjB,+IAAwB,qIAA8C,MACtE,+IAAuB,KACrB,w3FAA8B,MAC5B,wHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAAmG;MAAnF;;wBAAyD;MAAzE,8sFAAmG,KAM3G,2IAAmB,KACjB,gJAAwB,yHAAkC,MAC1D,gJAAuB,KACrB,03FAA8B,MAC5B,yHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAAqF;MAArE;;wBAA2C;MAA3D,8sFAAqF,KAKjG,wHAAI,KACA,wHAAI,uGAAqB,MAEzB,2IAAmB,KACjB,gJAAwB,0FAAQ,MAChC,gJAAuB,KACrB,03FAA8B,MAC5B,yHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAAwE;MAAxD;;wBAA8B;MAA9C,8sFAAwE,KAMhF,2IAAmB,KACjB,gJAAwB,oFAAO,MAC/B,gJAAuB,KACrB,03FAA8B,MAC5B,yHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAAyE;MAAzD;;wBAA+B;MAA/C,8sFAAyE,KAOjF,2IAAmB,KACjB,gJAAwB,8FAAiB,MACzC,gJAAuB,KACrB,03FAA8B,MAC5B,yHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAAiF;MAAjE;;wBAAuC;MAAvD,8sFAAiF,KAOzF,2IAAmB,KACjB,gJAAwB,wGAAsB,MAC9C,gJAAuB,KACrB,03FAA8B,MAC5B,yHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAAkF;MAAlE;;wBAAwC;MAAxD,8sFAAkF,KAO1F,2IAAmB,KACjB,gJAAwB,0HAA8B,MACtD,gJAAuB,KACrB,03FAA8B,MAC5B,yHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAA8E;MAA9D;;wBAAoC;MAApD,8sFAA8E,KAOtF,2IAAmB,KACjB,gJAAwB,2IAA+C,MACvE,gJAAuB,KACrB,03FAA8B,MAC5B,yHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAAkG;MAAlF;;wBAAuD;MAAvE,8sFAAkG,KAO1G,2IAAmB,KACjB,gJAAwB,8GAA4B,MACpD,gJAAuB,KACrB,23FAA8B,MAC5B,yHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAAiF;MAAjE;;wBAAsC;MAAtD,8sFAAiF,KAMzF,2IAAmB,KACjB,gJAAwB,yGAAuB,MAC/C,gJAAuB,KACrB,m4FAA8B,MAC5B,yHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAAoF;MAApE;;wBAAyC;MAAzD,gtFAAoF,KAM5F,+YAAgE,IAclE,wHAAI,kFAAkB,MAEtB,wdAAwE,IA6CxE,4NAAoG,YAA5F;;wBAAmD;MAA3D,wBAAoG,uFAAU,mDAlN9E,0BAAc,EAAC,oBAAgC,qBAA7E,aAA+F,EAAjE,UAAc,EAAC,UAAgC,GAA/C,0BAAc,EAAkC,iGAAgB,GAA9F,aAA+F,EAAjE,UAAc,EAAkC,UAAgB,GAChE,0BAAc,EAAC,oBAAgC,qBAA7E,aAAgG,EAAlE,UAAc,EAAC,UAAgC,GAA/C,0BAAc,EAAkC,kGAAiB,GAA/F,aAAgG,EAAlE,UAAc,EAAkC,UAAiB,GAcR,sBAAe,EAA9F,aAA+F,EAAhB,UAAe,GAAxB,oBAAQ,EAA9D,oBAAqD,0CAArE,aAA+F,EAAzB,UAAQ,EAA9D,UAAqD,GAArE,aAA+F,GAWd,uBAAe,EAAhG,aAAiG,EAAhB,WAAe,GAAxB,qBAAQ,EAAhE,qBAAuD,4CAAvE,aAAiG,EAAzB,WAAQ,EAAhE,WAAuD,GAAvE,aAAiG,GAWd,uBAAe,EAAlG,cAAmG,EAAhB,WAAe,GAAxB,qBAAQ,EAAlE,qBAAyD,8CAAzE,cAAmG,EAAzB,WAAQ,EAAlE,WAAyD,GAAzE,cAAmG,GAW9B,uBAAe,EAApF,cAAqF,EAAhB,WAAe,GAAxB,qBAAQ,EAApD,qBAA2C,gCAA3D,cAAqF,EAAzB,WAAQ,EAApD,WAA2C,GAA3D,cAAqF,GAa7B,uBAAe,EAAvE,cAAwE,EAAhB,WAAe,GAAxB,qBAAQ,EAAvC,qBAA8B,mBAA9C,cAAwE,EAAzB,WAAQ,EAAvC,WAA8B,GAA9C,cAAwE,GAWf,uBAAe,EAAxE,cAAyE,EAAhB,WAAe,GAAxB,qBAAQ,EAAxC,qBAA+B,oBAA/C,cAAyE,EAAzB,WAAQ,EAAxC,WAA+B,GAA/C,cAAyE,GAYR,uBAAe,EAAhF,cAAiF,EAAhB,WAAe,GAAxB,qBAAQ,EAAhD,qBAAuC,4BAAvD,cAAiF,EAAzB,WAAQ,EAAhD,WAAuC,GAAvD,cAAiF,GAYf,uBAAe,EAAjF,cAAkF,EAAhB,WAAe,GAAxB,qBAAQ,EAAjD,qBAAwC,6BAAxD,cAAkF,EAAzB,WAAQ,EAAjD,WAAwC,GAAxD,cAAkF,GAYpB,uBAAe,EAA7E,cAA8E,EAAhB,WAAe,GAAxB,qBAAQ,EAA7C,qBAAoC,yBAApD,cAA8E,EAAzB,WAAQ,EAA7C,WAAoC,GAApD,cAA8E,GAYI,uBAAe,EAAjG,cAAkG,EAAhB,WAAe,GAAzB,sBAAS,EAAjE,qBAAuD,4CAAvE,cAAkG,EAA1B,WAAS,EAAjE,WAAuD,GAAvE,cAAkG,GAYjC,uBAAe,EAAhF,cAAiF,EAAhB,WAAe,GAAzB,sBAAS,EAAhD,qBAAsC,2BAAtD,cAAiF,EAA1B,WAAS,EAAhD,WAAsC,GAAtD,cAAiF,GAWb,uBAAe,EAAnF,cAAoF,EAAhB,WAAe,GAAzB,sBAAS,EAAnD,qBAAyC,8BAAzD,cAAoF,EAA1B,WAAS,EAAnD,WAAyC,GAAzD,cAAoF,GAM1E,2DAA4C,GAA9D,cAAgE,EAA9C,WAA4C,GAgB5C,qBAAmD,kBAAvE,cAAwE,EAApD,WAAmD,mDAxKzE,8sBAAM,GAGF,qlDAA+F,IAC/F,2lDAAgG,IAY5F,o6EAA8B,IAE1B,k4DAA+F,IASnG,k8EAA8B,IAE1B,o6DAAiG,IASrG,g9EAA8B,IAE1B,w7DAAmG,IASvG,u+EAA8B,IAE1B,w7DAAqF,IAWzF,u+EAA8B,IAE1B,w7DAAwE,IAS5E,u+EAA8B,IAE1B,w7DAAyE,IAU7E,u+EAA8B,IAE1B,w7DAAiF,IAUrF,u+EAA8B,IAE1B,w7DAAkF,IAUtF,u+EAA8B,IAE1B,w7DAA8E,IAUlF,u+EAA8B,IAE1B,w7DAAkG,IAUtG,u+EAA8B,IAE1B,w7DAAiF,IASrF,u+EAA8B,IAE1B,w7DAAoF,IAoB1F,iEAAkB;;;;;;;;;;;;;;;;AClFxB;AAAA;AAAO,MAAM,SAAS;CACrB;;;;;;;;;;;;;ACpFD;AAAA;AAAA;AAAgD;AAWzC,MAAM,oBAAoB;IAI/B,YAAmB,SAC6B,EAC5B,YAA0B,EAC1B,YAA0B,EAC1B,QAAqB,EACJ,IAAI;QALtB,cAAS,GAAT,SAAS,CACoB;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,aAAQ,GAAR,QAAQ,CAAa;QAEvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,CAAC;IACzB,CAAC;IAED,QAAQ;IACR,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC;YACpD,IAAI,EAAE,GAAG,EAAE;gBACT,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,EAAE;oBAC5C,QAAQ,EAAE,0DAAe,CAAC,KAAK;iBAChC,CAAC,CAAC;YACL,CAAC;YACD,KAAK,EAAE,KAAK,CAAC,EAAE;gBACb,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE,IAAI,EAAE;oBACvF,QAAQ,EAAE,0DAAe,CAAC,KAAK;iBAChC,CAAC,CAAC;YACL,CAAC;SACF,CAAC,CAAC;IAEL,CAAC;CAEF;;;;;;;;;;;;;AC7CD;AAAA;AAAO,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAA6E;AAStE,MAAM,cAAc;IAKzB;QADU,kBAAa,GAAG,IAAI,0DAAY,EAAQ,CAAC;IACnC,CAAC;IACjB,QAAQ;IACR,CAAC;IAED,cAAc;IACd,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6GCxBD,qHAAG,yFAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oGCGX,yIAAiD,KAC/C,8IAAwB,+FAAgC,MACxD,8IAAuB,KACrB,62FAA8B,MAC5B;;;;;;;;;;;;;;;;;;;;wBAAyE;MAAzD;;wBAA2B;MAA3C,usFAAyE,kDAAhB,sBAAe,EAAxE,aAAyE,EAAhB,UAAe,GAA5B,wBAAY,EAAxC,oBAA2B,gBAA3C,aAAyE,EAA7B,UAAY,EAAxC,UAA2B,GAA3C,aAAyE,mDAHrD,0DAAgC,GAEtD,23EAA8B,IAC5B,k4DAAyE;oGAK/E,yIAAiD,KAC/C,8IAAwB,+FAAgC,MACxD,8IAAuB,KACrB,8IAAuB,KACrB,wIAAiB,KACf,s3FAA8B,MAC5B,ySAAW,IAET;;;;;;;;;;;;;;;;;;;;wBAAyE;MAAzD;;wBAA2B;MAA3C,ysFAAyE,KAI/E,uHAAI,oFAAO,MACX,+IAAuB,KACrB,yIAAiB,KACf,w3FAA8B,MAC5B,ySAAW,IAET;;;;;;;;;;;;;;;;;;;;wBAA8E;MAA9D;;wBAA8B;MAA9C,ysFAA8E,kDAVvB,sBAAe,EAAxE,aAAyE,EAAhB,UAAe,GAA5B,wBAAY,EAAxC,oBAA2B,gBAA3C,aAAyE,EAA7B,UAAY,EAAxC,UAA2B,GAA3C,aAAyE,GAUT,sBAAe,EAA7E,aAA8E,EAAhB,UAAe,GAA9B,0BAAc,EAA7C,oBAA8B,mBAA9C,aAA8E,EAA/B,UAAc,EAA7C,UAA8B,GAA9C,aAA8E,mDAjBlE,0DAAgC,GAIlD,23EAA8B,IAG1B,k4DAAyE,IAO3E,o6EAA8B,IAG1B,k4DAA8E;oGAU5F,yIAAiD,KAC/C,8IAAwB,+FAAgC,MACxD,8IAAuB,KACrB,s3FAA8B,MAE1B;;;;;;;;;;;;;;;;;;;;wBAAyE;MAAzD;;wBAA2B;MAA3C,ysFAAyE,kDAAhB,sBAAe,EAAxE,aAAyE,EAAhB,UAAe,GAA5B,wBAAY,EAAxC,oBAA2B,gBAA3C,aAAyE,EAA7B,UAAY,EAAxC,UAA2B,GAA3C,aAAyE,mDAJvD,0DAAgC,GAEtD,23EAA8B,IAE1B,k4DAAyE;oGAKjF,uHAA4B,KAC1B,ioBAAU,IACR,mWAAkB,IAChB,oTAAsE,YAA9D;;wBAA4B;MAApC,0lBAAsE,iFAAQ,iCAFlF,wIAAU,GACR,oHAAkB,GAChB,iPAAsE;oGArDhF;;;;;;0wBAAM,IACJ,khBAA2E,IAEzE,4dAAiD,IASjD,6dAAiD,IA4BjD,6dAAiD,IAUjD,yYAA4B,iDAjDkB,mBAA0B,gBAA1E,YAA2E,EAA3B,SAA0B,GAEtD,8BAA8B,EAAhD,YAAiD,EAA/B,SAA8B,GAS9B,8BAA8B,EAAhD,aAAiD,EAA/B,SAA8B,GA4B9B,+BAA8B,EAAhD,aAAiD,EAA/B,UAA8B,GAU3C,oCAAsB,GAA3B,aAA4B,EAAvB,UAAsB,2BAlD/B,8sBAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mGCAN,uHAAK,6LAEL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uGCWE,wHAA0D,KACxD,kOAEgD,YADlC;;wBAA4B;MAC5B;;wBAAiC;MAF/C,27BAEgD,2BAFvB,kBAAe,oBAAxC,YAEgD,EAFvB,SAAe;uGAb5C,2JAAqC,KACnC,sHAAI,oFAAO,MACX,4ZAI8B,YAHtB;;wBAAyB;MADjC,4lDAI8B,2FAC5B,62BAA0B,6FAAoB,MAGlD,uHAAI,KACJ,uJAAgC,KAC9B,qdAA0D,iDAPlD,uBAA0B,EAD1B,oCAA+B,EAFvC,YAI8B,EADtB,SAA0B,EAD1B,SAA+B,GAGrC,YAA0B,GAKd,mBAA2C,SAAzD,aAA0D,EAA5C,SAA2C,2BAVzD,iPAI8B,GAC5B,2XAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACI9B;AAAA;AAAO,MAAM,kBAAkB;IAE7B;QADA,gBAAW,GAAU,EAAE,CAAC;QAEtB,IAAI,CAAC,WAAW,qBAAO,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAED,QAAQ;IACR,CAAC;CAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oGCnBC,sWAA0D,IACxD,yTAAgF,YAAxE;;wBAAiC;MAAzC,slBAAgF,sFAAa,MAC7F,yTAAwE,YAAhE;;wBAAyB;MAAjC,slBAAwE,kFAAS,MACjF,yTAA8E,YAAtE;;wBAA+B;MAAvC,slBAA8E,gFAAO,MACrF,qTAA+E,YAAvE;;wBAAqC;MAA7C,ulBAA+E,iFAAQ,iCAJzF,oHAA0D,GACxD,iPAAgF,GAChF,iPAAwE,GACxE,iPAA8E,GAC9E,oPAA+E;oGAG/E,oTAAoE,YAA5D;;wBAA0B;MAAlC,slBAAoE,iFAAQ,iCAA5E,iPAAoE;oGATxE,8nBAAU,IACR,uTAAgB,+EAAe,MAC/B,+ZAA0D,IAM1D,mHAAwB,kDANN,+GAAuC,GAAzD,YAA0D,EAAxC,oBAAuC,mDAF3D,wIAAU,GACQ,wDAAe;;;;;;;;;;;;;;;;ACUjC;AAAA;AAAO,MAAM,qBAAqB;IAEhC;QACE,IAAI,CAAC,cAAc,qBAAO,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACzD,CAAC;IAED,QAAQ;IACR,CAAC;CAEF;;;;;;;;;;;;;ACfD;AAAA;AAAO,MAAM,SAAS;IACpB,YAAoB,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IAClC,CAAC;IAED,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACnE,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;QACrD,IAAI,UAAU,KAAK,KAAK,EAAE;YACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC5B;QACD,OAAO,UAAU,CAAC;IACpB,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8D;;;;AAMvD,MAAM,UAAU;IAGrB,YAAoB,IAAgB,EAAU,WAAwB;QAAlD,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QACpE,IAAI,CAAC,WAAW,GAAG,qEAAW,CAAC,WAAW,CAAC;IAC7C,CAAC;IAED,OAAO,CAAY,aAA6B;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CACtB,aAAa,CAAC,MAAM,EACpB,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,GAAG,EACpC;YACE,IAAI,EAAE,aAAa,CAAC,OAAO;YAC3B,MAAM,EAAE,aAAa,CAAC,MAAM;YAC5B,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE;SAC3C,CACF,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oGCdS,k3FAAgD,MAC9C,wHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAA4F;MAArD;;wBAA2B;MAAlE,4vFAA4F,kDAAT,mBAAQ,EAA3F,aAA4F,EAAT,UAAQ,GAAxB,2BAAe,EAA3C,oBAA2B,gBAAlE,aAA4F,EAAzB,UAAe,EAA3C,UAA2B,GAAlD,2BAAsB,EAA6C,mBAAQ,EAA3F,aAA4F,EAA5E,UAAsB,EAA6C,UAAQ,2BAF/F,y3EAAgD,IAE5C,+zDAA4F;oGAOhG,23FAAgD,MAC9C,wHAAO,KACL;;;;;;;;;;;;;;;;;;;;wBAA4G;MAArE;;wBAA2B;MAAlE,ixFAA4G,kDAAT,mBAAQ,EAA3G,aAA4G,EAAT,UAAQ,GAAxB,2BAAe,EAA3D,oBAA2B,gBAAlE,aAA4G,EAAzB,UAAe,EAA3D,UAA2B,GAAlD,2BAAsB,EAA6D,mBAAQ,EAAxC,2BAAe,EAAlF,aAA4G,EAA5F,UAAsB,EAA6D,UAAQ,EAAxC,UAAe,2BAFtF,y3EAAgD,IAE5C,+zDAA4G;oGAtB5H,6oBAA6B,IAC3B,ygBAAiB,IACf,wTAAgB,mFAEhB,MAEF,+TAAkB,IAChB;;;;;;6wBAAyB,IACvB,iJAA0B,KACxB,uHAAI,KACF,uHAAI,KACF,yYAAgD,IAOpD,uHAAI,KACF,uHAAI,KACF,yYAAgD,IAQtD,gZAAiC,IAC/B,8RAA0C,YAAlB;;wBAAiB;MAAzC,2lBAA0C,8EAAK,MAC/C,gSAAwD,YAA9B;;wBAA4B;MAAtD,2lBAAwD,2FAAkB,mDAnBnC,mBAAY,OAA/C,aAAgD,EAAb,SAAY,GASZ,mBAAY,OAA/C,aAAgD,EAAb,SAAY,GAQnC,yBAAc,EAAhC,aAAiC,EAAf,UAAc,2BA5BtC,wIAA6B,GAOzB,qtBAAyB,GAqBvB,wHAAiC,GAC/B,wPAA0C,GAC1C,wPAAwD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BhE;AAAA;AAAA;AAAiG;AAW1F,MAAM,0BAA0B;IAErC,YAAoB,eAAgC,EACjC,MAAiB;QADhB,oBAAe,GAAf,eAAe,CAAiB;QACjC,WAAM,GAAN,MAAM,CAAW;QAFpC,cAAS,GAAe,EAAE,CAAC;IAEa,CAAC;IAEzC,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,SAAS,CAC3C,CAAC,QAAQ,EAAE,EAAE;YACT,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS,CAAC;QACxC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,aAAa;QACX,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2GAAoB,CAAC,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,MAAW,EAAE,EAAE;YAC7E,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;aACtC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;;OAIG;IACH,QAAQ,CAAC,CAAS;QAChB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE;YACvB,KAAK,CAAC,sCAAsC,CAAC,CAAC;SAC/C;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAC7B;IACH,CAAC;IAED;;;;OAIG;IACH,QAAQ,CAAC,MAAW;QAClB,MAAM,cAAc,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACnD,MAAM,eAAe,GAAG,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,KAAK,cAAc,CAAC,GAAG,CAAC;QACtE,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;QACtD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC;IACvC,CAAC;CACF;;;;;;;;;;;;;AC5DD;AAAA;AAAO,MAAM,eAAe,GAAG;IAC3B,KAAK,EAAE,IAAI;IACX,KAAK,EAAE,IAAI;CACd,CAAC;;;;;;;;;;;;;ACCF;AAAA;AAAA;AAAgD;AASzC,MAAM,uBAAuB;IAIlC,YAAmB,SACgC,EAC/B,eAAgC,EAChC,YAA0B,EAC1B,QAAqB,EACJ,IAAI;QALtB,cAAS,GAAT,SAAS,CACuB;QAC/B,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,aAAQ,GAAR,QAAQ,CAAa;QAEvC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC;IAC5B,CAAC;IAED,QAAQ;IACR,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,UAAU;QACR,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC;YAC7D,IAAI,EAAE,GAAG,EAAE;gBACT,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,EAAE;oBAC5C,QAAQ,EAAE,0DAAe,CAAC,KAAK;iBAChC,CAAC,CAAC;YACL,CAAC;YACD,KAAK,EAAE,KAAK,CAAC,EAAE;gBACb,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACvB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE,IAAI,EAAE;oBACvF,QAAQ,EAAE,0DAAe,CAAC,KAAK;iBAChC,CAAC,CAAC;YACL,CAAC;SACF,CAAC,CAAC;IAEL,CAAC;CAEF;;;;;;;;;;;;;ACnDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6E;AACT;AAGiB;AACN;AAOxE,MAAM,iBAAiB;IAK5B,YAAmB,MAAiB,EACjB,MAAc;QADd,WAAM,GAAN,MAAM,CAAW;QACjB,WAAM,GAAN,MAAM,CAAQ;QAHvB,iBAAY,GAAG,IAAI,0DAAY,EAAQ,CAAC;QACxC,iBAAY,GAAG,IAAI,0DAAY,EAAO,CAAC;IAGjD,CAAC;IAED,QAAQ;IACR,CAAC;IAED,cAAc,CAAC,QAAkB;QAC/B,MAAM,YAAY,GAAG,IAAI,wEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,IAAI,GAAG;YAClB,QAAQ;SACT,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,4FAAqB,EAAE,YAAY,CAAC,CAAC,WAAW,EAAE;aAChE,SAAS,CAAC,CAAC,MAAgB,EAAE,EAAE;YAC9B,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAC,CAAC,CAAC;aAC5C;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gBAAgB,CAAC,EAAU;QACzB,MAAM,YAAY,GAAG,IAAI,wEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,IAAI,GAAG;YAClB,EAAE;SACH,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kGAAuB,EAAE,YAAY,CAAC,CAAC,WAAW,EAAE;aAClE,SAAS,CAAC,CAAC,MAAe,EAAE,EAAE;YAC7B,IAAI,MAAM,EAAE;gBACV,2DAA2D;gBAC3D,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ,CAAC,QAAkB;QACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,EAAE,EAAC,KAAK,EAAE,EAAC,IAAI,EAAE,EAAC,QAAQ,EAAC,EAAC,EAAC,CAAC,CAAC;QAC1E,qBAAqB;IACvB,CAAC;CAEF;;;;;;;;;;;;;ACxDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwF;AACW;AACzC;AAEe;AACqB;AACZ;AACA;AACQ;AACX;AACiB;AACT;AAC3C;AAE5C,MAAM,SAAS,GAAW;IACxB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,MAAM;QACjB,SAAS,EAAE,uFAAc;KAC1B;IACD,EAAC,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,uFAAc,EAAC;IAC1C,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,gGAAiB,EAAC;IAChD,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,sGAAuB,EAAE,WAAW,EAAE,CAAC,2DAAS,CAAC,EAAC;IACtF,4EAA4E;IAC5E,EAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,wEAAa,EAAC;IACxC,EAAC,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,iHAA0B,EAAC;IAC9D,EAAC,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,8GAAqB,EAAC;IAC9D,EAAC,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,4GAAqB,EAAC;IAC7D,EAAC,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,gGAAiB,EAAC;IACrD,EAAC,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAE,sGAAkB,EAAC;IAC3D,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,6FAAgB,EAAC;IACrD,EAAC,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,wGAAmB,EAAC;CAErD,CAAC;AAMK,MAAM,gBAAgB;CAC5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wGCrBW,sgBAAgI,yBAAtC,kBAAqB,oBAAC,kBAAe,gBAArD,sBAAe,EAAzF,YAAgI,EAAtC,SAAqB,EAAC,SAAe,EAArD,SAAe;wGAX/F,0IAA8E,KAC5E,2JAAqC,KACnC,sHAAI,gFAAkB,MAExB,gKAA0C,KACxC,sHAAI,gFAAwB,MAG9B,sJAAgC,KAC9B,sHAAI,sFAAS,MACb,oJAA6B,KAC3B,qdAAgI,IAIpI,uHAAI,0BAJW,kBAA8D,8BAAzE,aAAgI,EAArH,SAA8D,2BATvE,mEAAkB,GAGlB,yEAAwB;wGAdtC,2JAAqC,KACnC,sHAAI,gFAAqB,MAE3B,gKAA0C,KACxC,sHAAI,qFAAQ,MAEd,sJAAgC,KAC9B,mJAA6B,KAC3B,sHAAI,KACF,qdAA8E,iDAA3D,mBAA0D,qBAA7E,aAA8E,EAA3D,SAA0D,mDAR7E,8DAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACE3B;AAAA;AAAA;AAAA;AAAiD;AACD;AAczC,MAAM,iBAAiB;IAM5B,YAAmB,SAA0C,EACzC,YAA0B,EAC1B,YAA0B,EAC1B,eAAgC,EAChC,QAAqB;QAJtB,cAAS,GAAT,SAAS,CAAiC;QACzC,iBAAY,GAAZ,YAAY,CAAc;QAC1B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,aAAQ,GAAR,QAAQ,CAAa;QATzC,YAAO,GAAc,EAAE,CAAC;QACxB,UAAK,GAAU,EAAE,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAC,CAAC;QACxC,cAAS,GAAe,EAAE,CAAC;QAQzB,IAAI,CAAC,cAAc,GAAG,IAAI,oDAAe,CAAU,KAAK,CAAC,CAAC;QAC1D,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,SAAS,CAC3C,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,CAAC,SAAS,GAAG,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;YACzC,KAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aAC1B;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,QAAQ;IACR,CAAC;IAED,SAAS;QACP,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;IAC5C,CAAC;IAED,QAAQ,CAAC,QAAQ;QACf,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACpB,KAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YAC9C,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,EAAG;gBAC7B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3C;SACF;QACD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC;YAChD,IAAI,EAAE,CAAC,MAAa,EAAE,EAAE;gBACtB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,EAAE;oBAC1C,QAAQ,EAAE,0DAAe,CAAC,KAAK;iBAChC,CAAC,CAAC;YACL,CAAC;YACD,KAAK,EAAE,KAAK,CAAC,EAAE;gBACb,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,EAAE,IAAI,EAAE;oBACvF,QAAQ,EAAE,0DAAe,CAAC,KAAK;iBAChC,CAAC,CAAC;YACL,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IACD,QAAQ,CAAC,MAAyB,EAAE,CAAS;QAC3C,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;IACnC,CAAC;CAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0GCrFD,giBAAqB,kGAAsB,MAC3C,4VAAuC,IACrC,oTAAgE,YAAvB;;wBAAsB;MAA/D,slBAAgE,gFAAO,MACvE,oTAA+D,YAAtB;;wBAAqB;MAA9D,slBAA+D,+EAAM,2BAHvE,4IAAqB,GAEnB,iPAAgE,GAChE,iPAA+D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kGCFjE,yHAAM,KACN,wHAAM,KACJ,4IAAsB,KACtB,qIAAe,KACf,gMAAoE,KACpE,0LAAwD,KACxD,wPAA4H,KAC5H,2VAAmN,KAErN,wHAAM,KACN,6JAAiC,KAC/B,imBAAe;;;;;;;;;;;;;;;;ACZjB;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,uBAAgB,CAAC,6EAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {MatDialog} from '@angular/material/dialog';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {ErrorService} from '../../shared/services/error.service';\r\nimport {Formular} from '../../shared/interfaces/formular';\r\nimport {Router} from '@angular/router';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n  providers: [ErrorService]\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openBrosuri() {\r\n    this.router.navigate(['home/brochure']);\r\n  }\r\n\r\n  openScenarii() {\r\n    this.router.navigate(['home/formular']);\r\n  }\r\n\r\n  openParticipanti() {\r\n    this.router.navigate(['home/participanti']);\r\n  }\r\n}\r\n","<div class=\"top-container dashboard\">\r\n  <h1>Dashboard</h1>\r\n\r\n</div>\r\n<div class=\"container\">\r\n    <button (click)=\"openScenarii()\" mat-flat-button onclick=\"this.blur()\">Scenarii</button>\r\n    <button (click)=\"openBrosuri()\" mat-flat-button onclick=\"this.blur()\">Brosuri</button>\r\n    <button (click)=\"openParticipanti()\" mat-flat-button onclick=\"this.blur()\">Participanti</button>\r\n</div>\r\n","<h1 mat-dialog-title> Adaugati o brosura noua</h1>\n\n<form>\n  <div mat-dialog-content class=\"field-container\">\n\n    <mat-form-field class=\"field\">\n      <mat-label>Titlu</mat-label>\n      <label>\n        <input matInput placeholder=\"title\" [(ngModel)]=\"scene.title\" name=\"title\">\n      </label>\n    </mat-form-field>\n\n    <h2>Scenarii</h2>\n\n    <div class=\"container quest\">\n    <mat-checkbox *ngFor=\"let formular of formulars;let i = index;\" [checked]=\"checked[i]\"\n                  (change)=\"onToggle($event, i)\" >\n      <mat-card>\n        <p>{{formular.title}}</p>\n      </mat-card>\n    </mat-checkbox>\n    </div>\n\n    <div mat-dialog-actions>\n      <button type=\"submit\" *ngIf=\"(getValue() | async) == false\" mat-button (click)=\"addScene()\"\n              [disabled]=\"!scene.title\">\n        Confirm\n      </button>\n      <button type=\"button\" mat-button (click)=\"onNoClick()\">Cancel</button>\n    </div>\n  </div>\n</form>\n\n","<div class=\"top-container dashboard\">\n  <h1>Participanti</h1>\n</div>\n<button (click)=\"Download()\" class=\"download\">Download Data</button>\n\n<table mat-table [dataSource]=\"participants\" class=\"mat-elevation-z8\">\n\n  <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.id}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"Code\">\n    <th mat-header-cell *matHeaderCellDef> Code </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.personalCode}}</td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"FLOTTB\">\n    <th mat-header-cell *matHeaderCellDef> FLOTTB </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.firstLetterOfTheTownBornIn}}</td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"FLOTRB\">\n      <th mat-header-cell *matHeaderCellDef> FLOTRB </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.firstLetterOfTheRegionBornIn}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"SOTL2DOBY\">\n    <th mat-header-cell *matHeaderCellDef> SOTL2DOBY </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.sumOfTheLast2DigitsOfBirthYear}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"SODAM\">\n    <th mat-header-cell *matHeaderCellDef> SODAM </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.sumOfDayAndMonth}}</td>\n  </ng-container>\n\n\n  <ng-container matColumnDef=\"age\">\n    <th mat-header-cell *matHeaderCellDef> Age </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.age}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"type\">\n    <th mat-header-cell *matHeaderCellDef> Type </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.type}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"PT\">\n    <th mat-header-cell *matHeaderCellDef> PT </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.personalType}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"MG\">\n    <th mat-header-cell *matHeaderCellDef> MG </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.militaryGrade}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"WF\">\n    <th mat-header-cell *matHeaderCellDef> WF </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.workedFor}}</td>\n  </ng-container>\n\n\n  <ng-container matColumnDef=\"WINTMUF\">\n    <th mat-header-cell *matHeaderCellDef> WINTMUF </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.workedInThisMilitaryUnityFor}}</td>\n  </ng-container>\n\n  <ng-container matColumnDef=\"HPD\">\n    <th mat-header-cell *matHeaderCellDef> HPD </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.hoursPerDay}}</td>\n  </ng-container>\n\n\n  <ng-container matColumnDef=\"WIT\">\n    <th mat-header-cell *matHeaderCellDef> workingInTours </th>\n    <td mat-cell *matCellDef=\"let participant\"> {{participant.workingInTours}}</td>\n  </ng-container>\n\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {NgModule} from '@angular/core';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\n\r\nconst MD_COMPONENT_MODULES = [\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatInputModule,\r\n  MatTabsModule,\r\n  MatFormFieldModule,\r\n  MatDialogModule,\r\n  MatTooltipModule,\r\n  MatIconModule,\r\n  MatSelectModule,\r\n  MatCheckboxModule,\r\n  MatSnackBarModule,\r\n  MatExpansionModule,\r\n  MatProgressBarModule,\r\n  MatTableModule,\r\n  MatPaginatorModule\r\n];\r\n\r\n@NgModule({\r\n  imports: MD_COMPONENT_MODULES,\r\n  exports: MD_COMPONENT_MODULES\r\n})\r\nexport class AppAngularMaterialModule {\r\n}\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Formular} from '../interfaces/formular';\r\nimport {Participant} from '../interfaces/participants';\r\nimport {Scene} from '../interfaces/scene';\r\nimport {User} from '../interfaces/user';\r\nimport {ApiService} from './api.service';\r\n\r\n\r\n@Injectable()\r\nexport class ParticipantService {\r\n  constructor(private http: HttpClient, private apiService: ApiService) {\r\n  }\r\n  getParticipants(): Observable<any> {\r\n    return this.apiService.request({\r\n        method: 'GET',\r\n        url: 'api/participant/all'\r\n      }\r\n    );\r\n  }\r\n\r\n  addParticipant(participant: Participant, answers: string[][], brochure: Scene): Observable<any> {\r\n    return this.apiService.request({\r\n        method: 'POST',\r\n        url: 'api/participant/add',\r\n        payload: {participant, answers, brochure}\r\n      }\r\n    );\r\n  }\r\n\r\n  downloadScene(): Observable<any>{\r\n    return this.apiService.request({\r\n      method: 'GET',\r\n      url: 'api/participant/download'\r\n    });\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiEndpoint: 'http://localhost:8080/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, Input, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {User} from '../../interfaces/user';\r\nimport {LoginService} from '../../services/login.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  providers: [LoginService]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  @Input() user: User = { username: null, password: null};\r\n\r\n  constructor(private router: Router,\r\n              private loginService: LoginService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  login(): void {\r\n    this.loginService.loginUser(this.user).subscribe({\r\n      next: (response) => {\r\n        if (response.token) {\r\n          sessionStorage.setItem('userToken', response.token);\r\n          this.router.navigate(['home']);\r\n        }\r\n      },\r\n      error: err => {\r\n        console.error('Error ' + err);\r\n      }\r\n    });\r\n  }\r\n\r\n  changeToRegister(): void {\r\n    this.router.navigate(['register']);\r\n  }\r\n\r\n}\r\n\r\n\r\n","import {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Formular} from '../interfaces/formular';\r\nimport {User} from '../interfaces/user';\r\nimport {ApiService} from './api.service';\r\n\r\n\r\n@Injectable()\r\nexport class FormularService {\r\n  constructor(private http: HttpClient, private apiService: ApiService) {\r\n  }\r\n  getFormulars(): Observable<any> {\r\n    return this.apiService.request({\r\n        method: 'GET',\r\n        url: 'api/formular/all'\r\n      }\r\n    );\r\n  }\r\n  postFormular(formular: Formular): Observable<any>{\r\n    return this.apiService.request({\r\n      method: 'POST',\r\n      url: 'api/formular/add',\r\n      payload: {formular}\r\n    });\r\n  }\r\n\r\n\r\n  deleteFormular(id: number): Observable<any> {\r\n    return this.apiService.request({\r\n      method: 'DELETE',\r\n      url: 'api/formular/' + id\r\n    });\r\n  }\r\n\r\n  putFormular(formular: Formular): Observable<Formular> {\r\n    return this.apiService.request({\r\n      method: 'PUT',\r\n      url: 'api/formular/update/' + formular._id,\r\n      payload: {formular}\r\n    });\r\n  }\r\n}\r\n","\n<div class=\"top-container dashboard\">\n  <h1>{{editedFormular.title}}</h1>\n</div>\n<div class=\"top-container dashboard desc\">\n  <h3>{{editedFormular.description}}</h3>\n</div>\n\n<div class=\"elements-container\">\n  <h1>Intrebari</h1>\n  <div class=\"container quest\">\n    <app-qtype *ngFor=\"let question of editedFormular.questions; let index = index\" [type]=\"'view'\" [question]=\"question\" [index]=\"index\"></app-qtype>\n\n  </div>\n\n</div>\n","import {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {User} from '../interfaces/user';\r\nimport {ApiService} from './api.service';\r\n\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n  constructor(private http: HttpClient, private apiService: ApiService) {\r\n  }\r\n  loginUser(user: User): Observable<any> {\r\n    return this.apiService.request({\r\n        method: 'POST',\r\n        url: 'api/users/login',\r\n        payload: {user}\r\n      }\r\n    );\r\n  }\r\n}\r\n","\n<div class=\"top-container dashboard\">\n  <h1> Situații Conflictuale</h1>\n  <button id=\"addButton\" mat-icon-button\n          (click)=\"openAddDialog()\"\n          matTooltip=\"Add a new scene\"\n          matTooltipPosition=\"right\"\n          onclick=\"this.blur()\"> Adaugati Scene\n    <mat-icon class=\"addshit\"> add_circle_outline </mat-icon>\n  </button>\n</div>\n<hr>\n<div class=\"elements-container\">\n  <div *ngIf=\"formulars.length === 0\">\n    <app-empty-list-message></app-empty-list-message>\n  </div>\n    <ng-container *ngFor=\"let formular of formulars;let i = index;\">\n        <app-formular class=\"indiv\" [formular]=\"formular\"\n                        (handleDelete)=\"onDelete(i)\"\n                        (handleUpdate)=\"onUpdate($event)\">\n        </app-formular>\n    </ng-container>\n\n</div>\n","<mat-card>\n  <mat-card-title>{{formular.title}}</mat-card-title>\n  <mat-card-actions *ngIf=\"type !== 'add'\">\n    <button (click)=\"openView(formular)\" mat-flat-button onclick=\"this.blur()\">Vizionati</button>\n    <button (click)=\"openEditDialog(formular)\"  mat-flat-button onclick=\"this.blur()\">Editare</button>\n    <button (click)=\"openDeleteDialog(formular._id)\" mat-button onclick=\"this.blur()\">Stergere</button>\n  </mat-card-actions>\n</mat-card>\n\n","import {HttpHeaders} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {environment} from '../../../environments/environment';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthService {\r\n  private endpointURL: string;\r\n  private authHeaders: HttpHeaders;\r\n\r\n  constructor() {\r\n    this.endpointURL = environment.apiEndpoint;\r\n  }\r\n\r\n  getLoginStatus(): boolean {\r\n    return sessionStorage.getItem('userToken') !== null;\r\n  }\r\n\r\n  getAuthHeaders() {\r\n    this.authHeaders = new HttpHeaders();\r\n\r\n    if (sessionStorage.getItem('userToken') === null) {\r\n      // It must not be null, otherwise an error is thrown\r\n      sessionStorage.setItem('userToken', ' ');\r\n    }\r\n\r\n    this.authHeaders = this.authHeaders\r\n     // .set('Authorization', sessionStorage.getItem('userToken'))\r\n      .set('Authorization', 'Bearer ' + sessionStorage.getItem('userToken'))\r\n      .set('Content-Type', 'application/json');\r\n    return this.authHeaders;\r\n  }\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {BehaviorSubject} from 'rxjs';\nimport {messageDuration} from '../../constants';\nimport {Formular} from '../../interfaces/formular';\nimport {Question} from '../../interfaces/question';\nimport {Scene} from '../../interfaces/scene';\nimport {ErrorService} from '../../services/error.service';\nimport {FormularService} from '../../services/formular.service';\nimport {SceneService} from '../../services/scene.service';\n\n@Component({\n  selector: 'app-edit-scene',\n  templateUrl: './edit-scene.component.html',\n  styleUrls: ['./edit-scene.component.scss'],\n  providers: [FormularService, ErrorService, SceneService]\n})\nexport class EditSceneComponent implements OnInit {\n\n  private buttonDisabler: BehaviorSubject<boolean>;\n  questionsList: Question[] = [];\n  scene: Scene;\n  constructor(public dialogRef: MatDialogRef<EditSceneComponent>,\n              private formularService: FormularService,\n              private errorService: ErrorService,\n              private sceneService: SceneService,\n              private snackBar: MatSnackBar,\n              @Inject(MAT_DIALOG_DATA) data) {\n    this.scene = {...data.scene};\n    this.buttonDisabler = new BehaviorSubject<boolean>(false);\n  }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  onYesClick() {\n    this.sceneService.putScene(this.scene).subscribe({\n      next: (response) => {\n        this.dialogRef.close(response);\n        this.snackBar.open('Brosura updatata.', 'Ok', {\n          duration: messageDuration.valid\n        });\n      },\n      error: error => {\n        this.snackBar.open(this.errorService.modifyErrorMessage(error.status, 'brosura'), 'Ok', {\n          duration: messageDuration.error\n        });\n      }\n    });\n  }\n\n  onDelete(i: number) {\n    if (i === null || i < 0) {\n      alert('Error! Index from delete is invalid.');\n    } else {\n      this.scene.scenes.splice(i, 1);\n    }\n  }\n\n}\n\n","import {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Formular} from '../interfaces/formular';\r\nimport {Scene} from '../interfaces/scene';\r\nimport {User} from '../interfaces/user';\r\nimport {ApiService} from './api.service';\r\n\r\n\r\n@Injectable()\r\nexport class SceneService {\r\n  constructor(private http: HttpClient, private apiService: ApiService) {\r\n  }\r\n  getScenes(): Observable<any> {\r\n    return this.apiService.request({\r\n        method: 'GET',\r\n        url: 'api/scene/all'\r\n      }\r\n    );\r\n  }\r\n\r\n  postScene(scene: Scene): Observable<any>{\r\n    return this.apiService.request({\r\n      method: 'POST',\r\n      url: 'api/scene/add',\r\n      payload: {scene}\r\n    });\r\n  }\r\n\r\n\r\n  deleteScene(id: string): Observable<any> {\r\n    return this.apiService.request({\r\n      method: 'DELETE',\r\n      url: 'api/scene/' + id\r\n    });\r\n  }\r\n\r\n  putScene(scene: Scene): Observable<Scene> {\r\n    return this.apiService.request({\r\n      method: 'PUT',\r\n      url: 'api/scene/update/' + scene._id,\r\n      payload: {scene}\r\n    });\r\n  }\r\n\r\n  postLink(id: string): Observable<string> {\r\n    return this.apiService.request({\r\n      method: 'POST',\r\n      url: 'api/scene/generate/' + id,\r\n    });\r\n  }\r\n\r\n  getFormById(id: string): Observable<any> {\r\n    return this.apiService.request({\r\n      method: 'POST',\r\n      url: 'api/scene/getForm/' + id,\r\n    });\r\n  }\r\n\r\n}\r\n","<h1 mat-dialog-title>Editare Brosura</h1>\n<form>\n  <div mat-dialog-content class=\"field-container\">\n    <mat-form-field class=\"field\">\n      <mat-label>Titlu nou</mat-label>\n      <label>\n        <input matInput name=\"Title\" required\n               [(ngModel)]=\"scene.title\">\n      </label>\n    </mat-form-field>\n  </div>\n\n  <div class=\"elements-container\">\n    <h2>Schimbare Scene</h2>\n    <div class=\"container quest\">\n        <app-scene class=\"indiv\" *ngFor=\"let scene of scene.scenes;let i = index;\" [type]=\"'edit'\" [scene]=\"scene\" (handleDeleteS)=\"onDelete(i)\"></app-scene>\n    </div>\n  </div>\n\n  <div mat-dialog-actions>\n    <button type=\"submit\" mat-button (click)=\"onYesClick()\">Confirm</button>\n    <button type=\"button\" mat-button (click)=\"onNoClick()\">Cancel</button>\n  </div>\n</form>\n\n","<h1>Formular submited !</h1>\n","<div>\r\n  <p>There is nothing to display</p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-empty-list-message',\r\n  templateUrl: './empty-list-message.component.html',\r\n  styleUrls: ['./empty-list-message.component.scss']\r\n})\r\nexport class EmptyListMessageComponent {}\r\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {Formular} from '../../interfaces/formular';\nimport {Participant} from '../../interfaces/participants';\nimport {FormularService} from '../../services/formular.service';\nimport {ParticipantService} from '../../services/participant.service';\n\n\n@Component({\n  selector: 'app-participanti',\n  templateUrl: './participanti.component.html',\n  styleUrls: ['./participanti.component.scss'],\n  providers: [ParticipantService]\n})\nexport class ParticipantiComponent implements OnInit {\n  displayedColumns: string[] = ['position', 'Code', 'FLOTTB', 'FLOTRB', 'SOTL2DOBY', 'SODAM', 'age', 'type', 'PT', 'MG', 'WF', 'WINTMUF', 'WIT'];\n  participants: Participant[] = [];\n  constructor(private participantService: ParticipantService,\n              public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.participantService.getParticipants().subscribe(\n      (response) => {\n        this.participants = response.participants;\n        console.log(this.participants);\n      },\n      error => {\n        console.log(error);\n        this.participants = [];\n      });\n  }\n\n  Download() {\n    this.participantService.downloadScene().subscribe(\n      (response) => {\n        console.log(response);\n      },\n      error => {\n        console.log(error);\n      });\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {messageDuration} from '../../constants';\nimport {Formular} from '../../interfaces/formular';\nimport {Question} from '../../interfaces/question';\nimport {ErrorService} from '../../services/error.service';\nimport {FormularService} from '../../services/formular.service';\n\n@Component({\n  selector: 'app-add-formular',\n  templateUrl: './add-formular.component.html',\n  styleUrls: ['./add-formular.component.scss'],\n  providers: [FormularService, ErrorService]\n})\nexport class AddFormularComponent implements OnInit {\n  formular: Formular = {};\n  questionNr = 0;\n  qtypes = ['short-answer', 'check-answer', 'grade-answer'];\n  questions: Question[] = [];\n  type = 'short-answer';\n\n  private buttonDisabler: BehaviorSubject<boolean>;\n\n  constructor(public dialogRef: MatDialogRef<AddFormularComponent>,\n              private formularService: FormularService,\n              private errorService: ErrorService,\n              private snackBar: MatSnackBar) {\n    this.buttonDisabler = new BehaviorSubject<boolean>(false);\n  }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  getValue(): Observable<boolean> {\n    return this.buttonDisabler.asObservable();\n  }\n\n  setValue(newValue): void {\n    this.buttonDisabler.next(newValue);\n  }\n\n  addFormular() {\n    this.setValue(true);\n    this.formular.questions = this.questions;\n    this.formularService.postFormular(this.formular).subscribe({\n      next: (result: Formular) => {\n        this.dialogRef.close(result);\n        this.snackBar.open('Formular added.', 'Ok', {\n          duration: messageDuration.valid\n        });\n      },\n      error: error => {\n        this.setValue(false);\n        this.snackBar.open(this.errorService.modifyErrorMessage(error.status, 'formular'), 'Ok', {\n          duration: messageDuration.error\n        });\n      }\n    });\n  }\n\n  addQuestion() {\n    this.questions.push( { text: null, type: this.type, answers: null });\n    this.questionNr++;\n    this.type = 'short-answer';\n  }\n}\n","<h1 mat-dialog-title> Adaugati o scena noua</h1>\n<form>\n  <div mat-dialog-content class=\"field-container\">\n    <mat-form-field class=\"field\">\n      <mat-label>Titlu</mat-label>\n      <label>\n        <input matInput placeholder=\"title\" [(ngModel)]=\"formular.title\" name=\"title\">\n      </label>\n    </mat-form-field>\n\n    <mat-form-field class=\"field\">\n      <mat-label>Descriere</mat-label>\n      <label>\n        <input matInput placeholder=\"description\" [(ngModel)]=\"formular.description\" name=\"description\">\n      </label>\n    </mat-form-field>\n\n    <h2>Adaugati Intrebari</h2>\n    <div class=\"container quest\">\n      <app-qtype *ngFor=\"let question of questions; let index = index\" [question]=\"question\" [type]=\"'add'\" [index]=\"index\"></app-qtype>\n    </div>\n    <div class=\"card\">\n      <h5 class=\"card-header\">Q {{questionNr}}</h5>\n      <div class=\"card-body\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <mat-select [(value)]=\"type\">\n                  <mat-option  *ngFor=\"let otype of qtypes\" [value]=\"otype\">\n                    {{otype}}\n                  </mat-option>\n                </mat-select>\n            </div>\n          <div class=\"row\">\n            <button class=\"btn btn-warning\" (click)=\"addQuestion()\">Add question</button>\n          </div>\n        </div>\n      </div>\n    </div>\n\n\n    <div mat-dialog-actions>\n      <button type=\"submit\" *ngIf=\"(getValue() | async) == false\" mat-button (click)=\"addFormular()\"\n              [disabled]=\"!formular.title || !formular.description\">\n        Confirm\n      </button>\n      <button type=\"button\" mat-button (click)=\"onNoClick()\">Cancel</button>\n    </div>\n  </div>\n</form>\n\n","import {Injectable} from '@angular/core';\r\n\r\n\r\n@Injectable()\r\nexport class ErrorService {\r\n\r\n  deleteErrorMessage(status, element: string) {\r\n    return 'Something went wrong - could not delete ' + element;\r\n  }\r\n\r\n  modifyErrorMessage(status, element: string) {\r\n    switch (status) {\r\n      case 409:\r\n        return 'A ' + element + ' with this name already exists';\r\n      case 400:\r\n        return 'Wrong input - fields do not match criteria';\r\n      case 401:\r\n        return 'Unauthorized';\r\n      default:\r\n        return 'Something went wrong, sorry';\r\n    }\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Editare Scena</h1>\n<form>\n  <div mat-dialog-content class=\"field-container\">\n    <mat-form-field class=\"field\">\n      <mat-label>Titlu nou</mat-label>\n      <label>\n        <input matInput name=\"Title\" required [(ngModel)]=\"editedFormular.title\">\n      </label>\n    </mat-form-field>\n\n    <mat-form-field class=\"field\">\n      <mat-label>Descriere noua</mat-label>\n      <label>\n        <input matInput name=\"Description\" required\n               [(ngModel)]=\"editedFormular.description\">\n      </label>\n    </mat-form-field>\n  </div>\n\n  <div class=\"elements-container\">\n    <h2>Schimbare Intrebari</h2>\n    <div class=\"container quest\">\n      <app-qtype *ngFor=\"let question of editedFormular.questions; let index = index\" [type]=\"'edit'\" [question]=\"question\" [index]=\"index\"  (handleDeleteQ)=\"onDelete(index)\"></app-qtype>\n    </div>\n  </div>\n\n  <div mat-dialog-actions>\n    <button type=\"submit\" mat-button (click)=\"onYesClick()\">Confirm</button>\n    <button type=\"button\" mat-button (click)=\"onNoClick()\">Cancel</button>\n  </div>\n</form>\n\n","import {Component, Input, OnInit, ViewEncapsulation} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {User} from '../../interfaces/user';\nimport {LoginService} from '../../services/login.service';\nimport {RegisterService} from '../../services/register.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n  providers: [RegisterService]\n})\nexport class RegisterComponent implements OnInit {\n  @Input() user: User = { username: null, email: null, password: null};\n\n  constructor(private router: Router,\n              private registerService: RegisterService) {\n  }\n\n  ngOnInit(): void {\n  }\n  register(): void {\n    this.registerService.registerUser(this.user).subscribe({\n      next: (response) => {\n        if (response.token) {\n          sessionStorage.setItem('userToken', response.token);\n          this.router.navigate(['home']);\n        }\n      },\n      error: err => {\n        console.error('Error' + err);\n      }\n    });\n  }\n\n  changeToLogin(): void {\n    this.router.navigate(['login']);\n  }\n}\n","import {HttpClient} from '@angular/common/http';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {User} from '../interfaces/user';\r\nimport {ApiService} from './api.service';\r\n\r\n\r\n@Injectable()\r\nexport class RegisterService {\r\n  constructor(private http: HttpClient, private apiService: ApiService) {\r\n  }\r\n  registerUser(user: User): Observable<any> {\r\n    return this.apiService.request({\r\n        method: 'POST',\r\n        url: 'api/users',\r\n        payload: {user}\r\n      }\r\n    );\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {AuthService} from './shared/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  isLoggedIn: boolean;\r\n  constructor(private authService: AuthService,\r\n              private router: Router) {\r\n    router.events.subscribe(val => {\r\n      this.isLoggedIn = authService.getLoginStatus();\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    sessionStorage.clear();\r\n    this.router.navigate(['']);\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-configurations',\r\n  templateUrl: './configurations.component.html',\r\n  styleUrls: ['./configurations.component.scss']\r\n})\r\nexport class ConfigurationsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-card class=\"login_card\">\n  <mat-card-header>\n    <mat-card-title>\n      Register\n    </mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <form class=\"login_form\">\n      <table class=\"full-width\">\n        <tr>\n        <td>\n          <mat-form-field class=\"full-width\" *ngIf=\"user\">\n            <label>\n              <input matInput placeholder=\"Username\" [(ngModel)]=\"user.username\" name=\"username\" required>\n            </label>\n          </mat-form-field>\n        </td>\n      </tr>\n        <tr>\n          <td>\n            <mat-form-field class=\"full-width\" *ngIf=\"user\">\n              <label>\n                <input matInput placeholder=\"Email\" [(ngModel)]=\"user.email\" name=\"email\" required>\n              </label>\n            </mat-form-field>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <mat-form-field class=\"full-width\" *ngIf=\"user\">\n              <label>\n                <input matInput placeholder=\"Password\" [(ngModel)]=\"user.password\" type=\"password\" name=\"password\" required>\n              </label>\n            </mat-form-field>\n          </td>\n        </tr>\n      </table>\n      <mat-card-actions align=\"middle\">\n        <button mat-flat-button (click)=\"register()\" >Register</button>\n        <button mat-raised-button (click)=\"changeToLogin()\" >Change to Login</button>\n      </mat-card-actions>\n    </form>\n  </mat-card-content>\n\n</mat-card>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {messageDuration} from '../../constants';\nimport {Formular} from '../../interfaces/formular';\nimport {Question} from '../../interfaces/question';\nimport {ErrorService} from '../../services/error.service';\nimport {FormularService} from '../../services/formular.service';\n\n@Component({\n  selector: 'app-edit-formular',\n  templateUrl: './edit-formular.component.html',\n  styleUrls: ['./edit-formular.component.scss'],\n  providers: [FormularService, ErrorService]\n})\nexport class EditFormularComponent implements OnInit {\n\n  private buttonDisabler: BehaviorSubject<boolean>;\n  questionsList: Question[] = [];\n  editedFormular: Formular;\n  constructor(public dialogRef: MatDialogRef<EditFormularComponent>,\n              private formularService: FormularService,\n              private errorService: ErrorService,\n              private snackBar: MatSnackBar,\n              @Inject(MAT_DIALOG_DATA) data) {\n    this.editedFormular = {...data.formular};\n    this.buttonDisabler = new BehaviorSubject<boolean>(false);\n  }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  onYesClick() {\n    this.formularService.putFormular(this.editedFormular).subscribe({\n      next: (response) => {\n        this.dialogRef.close(response);\n        this.snackBar.open('Formular updated.', 'Ok', {\n          duration: messageDuration.valid\n        });\n      },\n      error: error => {\n        this.snackBar.open(this.errorService.modifyErrorMessage(error.status, 'formular'), 'Ok', {\n          duration: messageDuration.error\n        });\n      }\n    });\n  }\n  onDelete(i: number) {\n    if (i === null || i < 0) {\n      alert('Error! Index from delete is invalid.');\n    } else {\n      this.editedFormular.questions.splice(i, 1);\n    }\n  }\n\n}\n","<h1 mat-dialog-title> Delete this scene?</h1>\n<div mat-dialog-actions class=\"delete\">\n  <button mat-button onclick=\"this.blur()\" (click)=\"onYesClick()\">Confirm</button>\n  <button mat-button onclick=\"this.blur()\" (click)=\"onNoClick()\">Cancel</button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-link',\n  templateUrl: './link.component.html',\n  styleUrls: ['./link.component.css']\n})\nexport class LinkComponent implements OnInit {\n  link: string;\n  constructor( @Inject(MAT_DIALOG_DATA) data) {\n    console.log(data);\n    this.link = data.response.token;\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {Router} from '@angular/router';\nimport {Formular} from '../../interfaces/formular';\nimport {Scene} from '../../interfaces/scene';\nimport {SceneService} from '../../services/scene.service';\nimport {DeleteFormularComponent} from '../delete-formular/delete-formular.component';\nimport {DeleteSceneComponent} from '../delete-scene/delete-scene.component';\nimport {EditFormularComponent} from '../edit-formular/edit-formular.component';\nimport {EditSceneComponent} from '../edit-scene/edit-scene.component';\nimport {LinkComponent} from '../link/link.component';\n\n@Component({\n  selector: 'app-scene',\n  templateUrl: './scene.component.html',\n  styleUrls: ['./scene.component.scss'],\n  providers: [SceneService]\n})\nexport class SceneComponent implements OnInit {\n  @Input() type: string;\n  @Input() scene: Scene;\n  @Output() handleDelete = new EventEmitter<void>();\n  @Output() handleUpdate = new EventEmitter<any>();\n  @Output() handleDeleteS = new EventEmitter<void>();\n  constructor(public dialog: MatDialog,\n              public router: Router,\n              private sceneService: SceneService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  openEditDialog(scene: Scene) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      scene\n    };\n\n    this.dialog.open(EditSceneComponent, dialogConfig).afterClosed()\n      .subscribe((result: Scene) => {\n        if (result) {\n          this.handleUpdate.emit({scene: result});\n        }\n      });\n  }\n\n  openDeleteDialog(id: string) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      id\n    };\n\n    this.dialog.open(DeleteSceneComponent, dialogConfig).afterClosed()\n      .subscribe((result: boolean) => {\n        if (result) {\n          // Update the frontend list instead of refreshing the page.\n          this.handleDelete.emit();\n        }\n      });\n  }\n\n  openView(scene: Scene) {\n    this.router.navigate(['home/brochure/view'], {state: {data: {scene}}});\n    // history.state.data\n  }\n\n  generateLink( id: string) {\n    this.sceneService.postLink(id).subscribe( (response) => {\n      if (response) {\n        const dialogConfig = new MatDialogConfig();\n        dialogConfig.data = {\n          response\n        };\n        this.dialog.open(LinkComponent, dialogConfig);\n      }\n    },\n    error => {\n      console.log(error);\n    });\n\n  }\n\n  openDeleteEdit() {\n    this.handleDeleteS.emit();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {Formular} from '../../interfaces/formular';\nimport {Scene} from '../../interfaces/scene';\nimport {FormularService} from '../../services/formular.service';\nimport {SceneService} from '../../services/scene.service';\nimport {AddFormularComponent} from '../add-formular/add-formular.component';\nimport {AddSceneComponent} from '../add-scene/add-scene.component';\n\n@Component({\n  selector: 'app-scenarii',\n  templateUrl: './scenarii.component.html',\n  styleUrls: ['./scenarii.component.scss'],\n  providers: [SceneService]\n})\nexport class ScenariiComponent implements OnInit {\n\n  scenes: Scene[] = [];\n  constructor(private sceneService: SceneService,\n              public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.sceneService.getScenes().subscribe(\n      (response) => {\n        this.scenes = response.scenes;\n      },\n      error => {\n        console.log(error);\n        this.scenes = [];\n      });\n  }\n\n  openAddDialog() {\n    this.dialog.open(AddSceneComponent).afterClosed().subscribe((result: any) => {\n      if (result) {\n        this.scenes.push(result.scene);\n      }\n    });\n  }\n\n  /**\n   * Delete one element on index i from the departments list.\n   * (handleDelete) Output from DepartmentComponent can call this function.\n   * @param i - index of the list\n   */\n  onDelete(i: number) {\n    if (i === null || i < 0) {\n      alert('Error! Index from delete is invalid.');\n    } else {\n      this.scenes.splice(i, 1);\n    }\n  }\n\n  /**\n   * Updates an element from the list with a new object passed by $event.\n   * (handleUpdate) Output from DepartmentComponent can call this function.\n   * @param $event contains the new updated object\n   */\n  onUpdate($event: any) {\n    const sceneEdited = $event.scene.scene[0];\n    const checkIdFunction = (entity) => entity._id === sceneEdited._id;\n    const res = this.scenes.findIndex(checkIdFunction);\n    this.scenes[res] = sceneEdited;\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {messageDuration} from '../../constants';\nimport {Participant} from '../../interfaces/participants';\nimport {Scene} from '../../interfaces/scene';\nimport {ErrorService} from '../../services/error.service';\nimport {ParticipantService} from '../../services/participant.service';\nimport {SceneService} from '../../services/scene.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-submit-form',\n  templateUrl: './submit-form.component.html',\n  styleUrls: ['./submit-form.component.scss'],\n  providers: [SceneService, ErrorService, ParticipantService]\n})\nexport class SubmitFormComponent implements OnInit {\n  id: string;\n  brochure: Scene = {};\n  personalInfo: Participant = {};\n  answers: string[][];\n  constructor( public router: Router,\n               private route: ActivatedRoute,\n               private participantService: ParticipantService,\n               private errorService: ErrorService,\n               private sceneService: SceneService,\n               private snackBar: MatSnackBar) {\n    this.id = this.route.snapshot.paramMap.get('id');\n    console.log(this.id);\n    this.sceneService.getFormById(this.id).subscribe(\n      (response) => {\n        this.brochure = response.brochure;\n        this.answers = [];\n        for(let i = 0; i < this.brochure.scenes.length; i++) {\n          this.answers[i] = [];\n          for(let j = 0; j < this.brochure.scenes[i].questions.length; j++) {\n            this.answers[i][j] = '';\n          }\n        }\n        console.log(this.brochure);\n      },\n      error => {\n        console.log(error);\n      });\n  }\n\n  ngOnInit(): void {\n  }\n\n  sendData(personalInfo: Participant, answers: string[][], brochure: Scene) {\n    personalInfo.personalCode = personalInfo.firstLetterOfTheTownBornIn + personalInfo.firstLetterOfTheRegionBornIn + personalInfo.sumOfDayAndMonth.toString() + personalInfo.sumOfTheLast2DigitsOfBirthYear.toString();\n\n    console.log(this.personalInfo);\n    this.participantService.addParticipant(this.personalInfo, answers, brochure).subscribe({\n      next: (response) => {\n        if (response){\n          console.log(response);\n        }\n        this.snackBar.open('Participant adaugat', 'Ok', {\n          duration: messageDuration.valid\n        });\n        this.router.navigate(['submit/success']);\n      },\n      error: error => {\n        this.snackBar.open(this.errorService.modifyErrorMessage(error.status, 'participant'), 'Ok', {\n          duration: messageDuration.error\n        });\n      }\n    });\n  }\n}\n","\n\n<form>\n  <p>Studiul este derulat de către Centrul de Cercetare în Psihologia Muncii și Organizațională din cadrul Universității Babeș-Bolyai, de către doctorand Maria Telecan. Acest studiu vizează modul în care angajații percep situațiile existente de la locul de muncă. Bifaţi DA, dacă sunteţi de acord să participaţi la acest studiu</p>\n  <mat-radio-group aria-label=\"Select an option\">\n    <mat-radio-button class=\"rdn\" name=\"yesOrNo\" [(ngModel)]=\"personalInfo.agree\" value=\"{{true}}\">Da</mat-radio-button>\n    <mat-radio-button class=\"rdn\" name=\"yesOrNo\" [(ngModel)]=\"personalInfo.agree\" value=\"{{false}}\">Nu</mat-radio-button>\n  </mat-radio-group>\n\n\n  <p>În acest instrument, sunt prezentate o serie de scenarii care descriu situații de muncă. Fiecare scenariu descrie o situație de muncă și vă solicită să faceți parte din situația de muncă descrisă. Citiți cu atenție fiecare scenariu și imaginați-vă cât mai bine în situația respectivă. Fiecare scenariu este urmat de o serie de enunțuri de evaluat. Astfel că, pornind de la descrierea situației din fiecare scenariu, vă rugăm să evaluați fiecare enunț completând spațiile libere sau, atunci când este cazul, să încercuiți varianta de răspuns care corespunde cel mai bine opiniei Dumneavoastră. Este important să știți că nu există răspuns corect sau greșit, iar răspunsurile oferite la evaluarea acestor scenarii sunt anonime și confidențiale. Opinia dumneavoastră onestă ne va ajuta să înțelegem mai bine modul în care angajații percep situațiile existente de la locul de muncă.\n  </p>\n\n  <div mat-dialog-content class=\"field-container\">\n    <p>Vă rugăm să completați codul personal răspunzând întrebărilor de mai jos conform exemplului</p>\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Prima literă a orașului în care v-ați născut </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.firstLetterOfTheTownBornIn\" name=\"1\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Prima literă a județului în care v-ați născut </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.firstLetterOfTheRegionBornIn\" name=\"2\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Suma ultimelor două cifre ale anului nașterii </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.sumOfTheLast2DigitsOfBirthYear\" name=\"3\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Suma dintre ziua și luna nașterii </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.sumOfDayAndMonth\" name=\"4\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n<hr>\n    <h1>Despre dumneavoastră:</h1>\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Vârsta: </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.age\" name=\"5\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Genul: </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.type\" name=\"6\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Tip de personal: </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.personalType\" name=\"7\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Deţin gradul militar: </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.militaryGrade\" name=\"8\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Lucrez în această funcție de: </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.workedFor\" name=\"9\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Lucrez în cadrul unității militare actuale de: </h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.workedInThisMilitaryUnityFor\" name=\"10\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Lucrez în medie X ore pe zi:</h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.hoursPerDay\" name=\"11\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"card\" >\n      <h2 class=\"card-header\">Lucrez în ture: (da/nu)</h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.workingInTours\" name=\"12\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"card\" *ngIf=\"personalInfo.workingInTours === 'da'\" >\n      <h2 class=\"card-header\">Care este programul turelor:</h2>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <label>\n            <input matInput [(ngModel)]=\"personalInfo.program\" name=\"13\" maxlength=\"200\">\n          </label>\n        </mat-form-field>\n      </div>\n    </div>\n\n\n  </div>\n\n  <h1>{{brochure.title}}</h1>\n\n  <div class=\"scenes\" *ngFor=\"let scene of brochure.scenes;let i = index\">\n    <hr>\n    <h2>{{scene.title}}</h2>\n    <h3>{{scene.description}}</h3>\n    <p>Pornind de la scenariul prezentat:\n    </p>\n    <div  mat-dialog-content class=\"field-container questions\" *ngFor=\"let question of scene.questions; let j=index\">\n        <div mat-dialog-content class=\"field-container\" [ngSwitch]=\"question.type\">\n\n\n          <div class=\"card\" *ngSwitchCase=\"'short-answer'\">\n            <h2 class=\"card-header\">{{question.text}}</h2>\n            <div class=\"card-body\">\n              <mat-form-field class=\"field\">\n                <label>\n                  <input matInput [(ngModel)]=\"answers[i][j]\" name=\"title\" maxlength=\"200\">\n                </label>\n              </mat-form-field>\n            </div>\n          </div>\n\n\n          <div class=\"card\" *ngSwitchCase=\"'check-answer'\">\n            <h2 class=\"card-header\">{{question.text}}</h2>\n            <div class=\"card-body\">\n                <h3>Options</h3>\n                  <mat-radio-group aria-label=\"Select an option\">\n                    <mat-radio-button class=\"rdn\" [(ngModel)]=\"answers[i][j]\" name=\"optionC\" *ngFor=\"let option of question.answers.split(';')\" value=\"{{option}}\">{{option}}</mat-radio-button>\n                  </mat-radio-group>\n            </div>\n          </div>\n\n          <div class=\"card\" *ngSwitchCase=\"'grade-answer'\">\n            <h2 class=\"card-header\">{{question.text}}</h2>\n            <div class=\"card-body\">\n              <h3>Grades</h3>\n              <mat-radio-group aria-label=\"Select an option\">\n                <mat-radio-button class=\"rdn\" name=\"optionG\" [(ngModel)]=\"answers[i][j]\"  *ngFor=\"let option of ['1=Deloc',2,3,4,5,6,'7=In mare masura']\" value=\"{{option}}\">{{option}}</mat-radio-button>\n              </mat-radio-group>\n            </div>\n          </div>\n        </div>\n\n    </div>\n  </div>\n  <button (click)=\"sendData(personalInfo, answers, brochure)\" class=\"btn btn-danger btn-lg btn-block\">Trimiteti!</button>\n</form>\n","import {HttpClientModule} from '@angular/common/http';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {AppAngularMaterialModule} from './app-angular-material.module';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {ConfigurationsComponent} from './pages/configurations/configurations.component';\r\nimport {HomeComponent} from './pages/home/home.component';\r\nimport {EmptyListMessageComponent} from './shared/components/empty-list-message/empty-list-message.component';\r\nimport {LoginComponent} from './shared/components/login/login.component';\r\nimport {AuthGuard} from './util/auth.guard';\r\nimport { RegisterComponent } from './shared/components/register/register.component';\r\nimport { FormularDashboardComponent } from './pages/formular-dashboard/formular-dashboard.component';\r\nimport { ImportDashboardComponent } from './pages/import-dashboard/import-dashboard.component';\r\nimport { AddFormularComponent } from './shared/components/add-formular/add-formular.component';\r\nimport { EditFormularComponent } from './shared/components/edit-formular/edit-formular.component';\r\nimport { DeleteFormularComponent } from './shared/components/delete-formular/delete-formular.component';\r\nimport { FormularComponent } from './shared/components/formular/formular.component';\r\nimport { QtypeComponent } from './shared/components/qtype/qtype.component';\r\nimport { ParticipantiComponent } from './shared/components/participanti/participanti.component';\r\nimport { ScenariiComponent } from './shared/components/scenarii/scenarii.component';\r\nimport { ViewFormularComponent } from './shared/components/view-formular/view-formular.component';\r\nimport { SceneComponent } from './shared/components/scene/scene.component';\r\nimport { DeleteSceneComponent } from './shared/components/delete-scene/delete-scene.component';\r\nimport { EditSceneComponent } from './shared/components/edit-scene/edit-scene.component';\r\nimport { ViewSceneComponent } from './shared/components/view-scene/view-scene.component';\r\nimport { AddSceneComponent } from './shared/components/add-scene/add-scene.component';\r\nimport { LinkComponent } from './shared/components/link/link.component';\r\nimport { SubmitFormComponent } from './shared/components/submit-form/submit-form.component';\nimport { SuccessComponent } from './shared/components/success/success.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ConfigurationsComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    EmptyListMessageComponent,\r\n    RegisterComponent,\r\n    FormularDashboardComponent,\r\n    ImportDashboardComponent,\r\n    AddFormularComponent,\r\n    EditFormularComponent,\r\n    DeleteFormularComponent,\r\n    FormularComponent,\r\n    QtypeComponent,\r\n    ParticipantiComponent,\r\n    ScenariiComponent,\r\n    ViewFormularComponent,\r\n    SceneComponent,\r\n    DeleteSceneComponent,\r\n    EditSceneComponent,\r\n    ViewSceneComponent,\r\n    AddSceneComponent,\r\n    LinkComponent,\r\n    SubmitFormComponent,\r\n    SuccessComponent\r\n  ],\r\n  entryComponents: [\r\n    AddFormularComponent,\r\n    EditFormularComponent,\r\n    DeleteFormularComponent,\r\n    AddSceneComponent,\r\n    DeleteSceneComponent,\r\n    EditSceneComponent,\r\n    LinkComponent\r\n  ],\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    AppAngularMaterialModule,\r\n    MatRadioModule\r\n  ],\r\n  exports: [\r\n    AppAngularMaterialModule,\r\n  ],\r\n  providers: [AuthGuard],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {messageDuration} from '../../constants';\nimport {ErrorService} from '../../services/error.service';\nimport {FormularService} from '../../services/formular.service';\nimport {SceneService} from '../../services/scene.service';\n\n@Component({\n  selector: 'app-delete-scene',\n  templateUrl: './delete-scene.component.html',\n  styleUrls: ['./delete-scene.component.css'],\n  providers: [FormularService, ErrorService, SceneService]\n})\nexport class DeleteSceneComponent implements OnInit {\n\n  sceneId: string;\n\n  constructor(public dialogRef:\n                MatDialogRef<DeleteSceneComponent>,\n              private sceneService: SceneService,\n              private errorService: ErrorService,\n              private snackBar: MatSnackBar,\n              @Inject(MAT_DIALOG_DATA) data) {\n    this.sceneId = data.id;\n  }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  onYesClick() {\n    this.sceneService.deleteScene(this.sceneId).subscribe({\n      next: () => {\n        this.dialogRef.close(true);\n        this.snackBar.open('Brochure deleted.', 'Ok', {\n          duration: messageDuration.valid,\n        });\n      },\n      error: error => {\n        this.dialogRef.close();\n        this.snackBar.open(this.errorService.deleteErrorMessage(error.status, 'brochure'), 'Ok', {\n          duration: messageDuration.error,\n        });\n      }\n    });\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.css']\n})\nexport class SuccessComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {Question} from '../../interfaces/question';\n\n@Component({\n  selector: 'app-qtype',\n  templateUrl: './qtype.component.html',\n  styleUrls: ['./qtype.component.scss']\n})\nexport class QtypeComponent implements OnInit {\n  @Input() question: Question;\n  @Input() index: number;\n  @Input() type: string;\n  @Output() handleDeleteQ = new EventEmitter<void>();\n  constructor() { }\n  ngOnInit(): void {\n  }\n\n  openEditDialog() {\n  }\n\n  openDeleteDialog() {\n    this.handleDeleteQ.emit();\n  }\n}\n","<p>Config works</p>\r\n","<form>\n  <div mat-dialog-content class=\"field-container\" [ngSwitch]=\"question.type\">\n\n    <div class=\"card\" *ngSwitchCase=\"'short-answer'\">\n      <h5 class=\"card-header\">Tip intrebare: {{question.type}}</h5>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n          <input matInput [(ngModel)]=\"question.text\" name=\"title\" maxlength=\"400\">\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"card\" *ngSwitchCase=\"'check-answer'\">\n      <h5 class=\"card-header\">Tip intrebare: {{question.type}}</h5>\n      <div class=\"card-body\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <mat-form-field class=\"field\">\n              <mat-label></mat-label>\n\n                <input matInput [(ngModel)]=\"question.text\" name=\"title\" maxlength=\"400\">\n\n            </mat-form-field>\n          </div>\n          <h3>Options</h3>\n          <div class=\"container\">\n            <div class=\"row\">\n              <mat-form-field class=\"field\">\n                <mat-label></mat-label>\n\n                  <input matInput [(ngModel)]=\"question.answers\" name=\"answers\" maxlength=\"400\">\n\n              </mat-form-field>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"card\" *ngSwitchCase=\"'grade-answer'\">\n      <h5 class=\"card-header\">Tip intrebare: {{question.type}}</h5>\n      <div class=\"card-body\">\n        <mat-form-field class=\"field\">\n\n            <input matInput [(ngModel)]=\"question.text\" name=\"title\" maxlength=\"400\">\n\n        </mat-form-field>\n      </div>\n    </div>\n    <div *ngIf=\"type == 'edit'\">\n      <mat-card>\n        <mat-card-actions>\n          <button (click)=\"openDeleteDialog()\" mat-button onclick=\"this.blur()\">Stergere</button>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n\n  </div>\n</form>\n","<div>\n  {{link}}\n</div>\n","\n<div class=\"top-container dashboard\">\n  <h1>Brosuri</h1>\n  <button id=\"addButton\" mat-icon-button\n          (click)=\"openAddDialog()\"\n          matTooltip=\"Add a new brochure\"\n          matTooltipPosition=\"right\"\n          onclick=\"this.blur()\"> Adaugati brosura\n    <mat-icon class=\"addshit\"> add_circle_outline </mat-icon>\n  </button>\n</div>\n<hr>\n<div class=\"elements-container\">\n  <ng-container *ngFor=\"let scene of scenes;let i = index;\">\n    <app-scene class=\"indiv\" [scene]=\"scene\"\n                  (handleDelete)=\"onDelete(i)\"\n                  (handleUpdate)=\"onUpdate($event)\">\n    </app-scene>\n  </ng-container>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Formular} from '../../interfaces/formular';\nimport {Scene} from '../../interfaces/scene';\nimport {ErrorService} from '../../services/error.service';\nimport {FormularService} from '../../services/formular.service';\n\n@Component({\n  selector: 'app-view-scene',\n  templateUrl: './view-scene.component.html',\n  styleUrls: ['./view-scene.component.scss'],\n  providers: [FormularService, ErrorService]\n})\nexport class ViewSceneComponent implements OnInit {\n  editedScene: Scene = {};\n  constructor() {\n    this.editedScene = {...history.state.data.scene};\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n  <mat-card-title>{{scene.title}}</mat-card-title>\n  <mat-card-actions *ngIf=\"type !== 'edit'; else elseBlock\">\n    <button (click)=\"generateLink(scene._id)\" mat-flat-button onclick=\"this.blur()\">Generate Link</button>\n    <button (click)=\"openView(scene)\" mat-flat-button onclick=\"this.blur()\">Vizionati</button>\n    <button (click)=\"openEditDialog(scene)\" mat-flat-button onclick=\"this.blur()\">Editare</button>\n    <button (click)=\"openDeleteDialog(scene._id)\" mat-button onclick=\"this.blur()\">Stergere</button>\n  </mat-card-actions>\n  <ng-template #elseBlock>\n    <button (click)=\"openDeleteEdit()\" mat-button onclick=\"this.blur()\">Stergere</button>\n  </ng-template>\n</mat-card>\n\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {Formular} from '../../interfaces/formular';\nimport {ErrorService} from '../../services/error.service';\nimport {FormularService} from '../../services/formular.service';\n\n@Component({\n  selector: 'app-view-formular',\n  templateUrl: './view-formular.component.html',\n  styleUrls: ['./view-formular.component.scss'],\n  providers: [FormularService, ErrorService]\n})\nexport class ViewFormularComponent implements OnInit {\n  editedFormular: Formular;\n  constructor() {\n    this.editedFormular = {...history.state.data.formular};\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","import {Injectable} from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\r\nimport {AuthService} from '../shared/services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService,\r\n              private router: Router) {\r\n  }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const isLoggedIn = this.authService.getLoginStatus();\r\n    if (isLoggedIn === false) {\r\n      this.router.navigate(['']);\r\n    }\r\n    return isLoggedIn;\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {environment} from '../../../environments/environment';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {IRequestParams} from '../interfaces/IRequestParams';\r\nimport {AuthService} from './auth.service';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ApiService {\r\n  private endpointURL: string;\r\n\r\n  constructor(private http: HttpClient, private authService: AuthService) {\r\n    this.endpointURL = environment.apiEndpoint;\r\n  }\r\n\r\n  request<TResponse>(requestParams: IRequestParams): Observable<any> {\r\n    return this.http.request(\r\n      requestParams.method,\r\n      this.endpointURL + requestParams.url,\r\n      {\r\n        body: requestParams.payload,\r\n        params: requestParams.params,\r\n        headers: this.authService.getAuthHeaders()\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-card class=\"login_card\">\r\n  <mat-card-header>\r\n    <mat-card-title>\r\n      Login\r\n    </mat-card-title>\r\n  </mat-card-header>\r\n  <mat-card-content>\r\n    <form class=\"login_form\">\r\n      <table class=\"full-width\">\r\n        <tr>\r\n          <td>\r\n            <mat-form-field class=\"full-width\" *ngIf=\"user\">\r\n              <label>\r\n                <input matInput placeholder=\"Username\" [(ngModel)]=\"user.username\" name=\"username\" required>\r\n              </label>\r\n            </mat-form-field>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <mat-form-field class=\"full-width\" *ngIf=\"user\">\r\n              <label>\r\n                <input matInput placeholder=\"Password\" [(ngModel)]=\"user.password\" type=\"password\" name=\"password\" required>\r\n              </label>\r\n            </mat-form-field>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n      <mat-card-actions align=\"middle\">\r\n        <button mat-flat-button (click)=\"login()\">Login</button>\r\n        <button mat-raised-button (click)=\"changeToRegister()\" >Change to Register</button>\r\n      </mat-card-actions>\r\n    </form>\r\n  </mat-card-content>\r\n\r\n</mat-card>\r\n","import { Component, OnInit } from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {AddFormularComponent} from '../../shared/components/add-formular/add-formular.component';\nimport {FormularComponent} from '../../shared/components/formular/formular.component';\nimport {Formular} from '../../shared/interfaces/formular';\nimport {FormularService} from '../../shared/services/formular.service';\n\n@Component({\n  selector: 'app-formular-dashboard',\n  templateUrl: './formular-dashboard.component.html',\n  styleUrls: ['./formular-dashboard.component.scss'],\n  providers: [FormularService]\n})\nexport class FormularDashboardComponent implements OnInit {\n  formulars: Formular[] = [];\n  constructor(private formularService: FormularService,\n              public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.formularService.getFormulars().subscribe(\n      (response) => {\n          this.formulars = response.formulars;\n      },\n      error => {\n        this.formulars = [];\n      });\n  }\n\n  openAddDialog() {\n    this.dialog.open(AddFormularComponent).afterClosed().subscribe((result: any) => {\n      if (result) {\n        this.formulars.push(result.formular);\n      }\n    });\n  }\n\n  /**\n   * Delete one element on index i from the departments list.\n   * (handleDelete) Output from DepartmentComponent can call this function.\n   * @param i - index of the list\n   */\n  onDelete(i: number) {\n    if (i === null || i < 0) {\n      alert('Error! Index from delete is invalid.');\n    } else {\n      this.formulars.splice(i, 1);\n    }\n  }\n\n  /**\n   * Updates an element from the list with a new object passed by $event.\n   * (handleUpdate) Output from DepartmentComponent can call this function.\n   * @param $event contains the new updated object\n   */\n  onUpdate($event: any) {\n    const formularEdited = $event.formular.formular[0];\n    const checkIdFunction = (entity) => entity._id === formularEdited._id;\n    const res = this.formulars.findIndex(checkIdFunction);\n    this.formulars[res] = formularEdited;\n  }\n}\n","export const messageDuration = {\r\n    valid: 1000,\r\n    error: 2000\r\n};\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {ErrorService} from '../../services/error.service';\nimport {messageDuration} from '../../constants';\nimport {FormularService} from '../../services/formular.service';\n\n@Component({\n  selector: 'app-delete-formular',\n  templateUrl: './delete-formular.component.html',\n  styleUrls: ['./delete-formular.component.css'],\n  providers: [FormularService, ErrorService]\n})\nexport class DeleteFormularComponent implements OnInit {\n\n  formularId: number;\n\n  constructor(public dialogRef:\n                MatDialogRef<DeleteFormularComponent>,\n              private formularService: FormularService,\n              private errorService: ErrorService,\n              private snackBar: MatSnackBar,\n              @Inject(MAT_DIALOG_DATA) data) {\n    this.formularId = data.id;\n  }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick() {\n    this.dialogRef.close();\n  }\n\n  onYesClick() {\n    this.formularService.deleteFormular(this.formularId).subscribe({\n      next: () => {\n        this.dialogRef.close(true);\n        this.snackBar.open('Formular deleted.', 'Ok', {\n          duration: messageDuration.valid,\n        });\n      },\n      error: error => {\n        this.dialogRef.close();\n        this.snackBar.open(this.errorService.deleteErrorMessage(error.status, 'formular'), 'Ok', {\n          duration: messageDuration.error,\n        });\n      }\n    });\n\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\nimport {Router} from '@angular/router';\nimport {Formular} from '../../interfaces/formular';\nimport {DeleteFormularComponent} from '../delete-formular/delete-formular.component';\nimport {EditFormularComponent} from '../edit-formular/edit-formular.component';\n\n@Component({\n  selector: 'app-formular',\n  templateUrl: './formular.component.html',\n  styleUrls: ['./formular.component.scss']\n})\nexport class FormularComponent implements OnInit {\n  @Input() type: string;\n  @Input() formular: Formular;\n  @Output() handleDelete = new EventEmitter<void>();\n  @Output() handleUpdate = new EventEmitter<any>();\n  constructor(public dialog: MatDialog,\n              public router: Router) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  openEditDialog(formular: Formular) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      formular\n    };\n\n    this.dialog.open(EditFormularComponent, dialogConfig).afterClosed()\n      .subscribe((result: Formular) => {\n        if (result) {\n          this.handleUpdate.emit({formular: result});\n        }\n      });\n  }\n\n  openDeleteDialog(id: string) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      id\n    };\n\n    this.dialog.open(DeleteFormularComponent, dialogConfig).afterClosed()\n      .subscribe((result: boolean) => {\n        if (result) {\n          // Update the frontend list instead of refreshing the page.\n          this.handleDelete.emit();\n        }\n      });\n  }\n\n  openView(formular: Formular) {\n    this.router.navigate(['home/formular/view'], {state: {data: {formular}}});\n    // history.state.data\n  }\n\n}\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ConfigurationsComponent} from './pages/configurations/configurations.component';\r\nimport {FormularDashboardComponent} from './pages/formular-dashboard/formular-dashboard.component';\r\nimport {HomeComponent} from './pages/home/home.component';\r\nimport {ImportDashboardComponent} from './pages/import-dashboard/import-dashboard.component';\r\nimport {LoginComponent} from './shared/components/login/login.component';\r\nimport {ParticipantiComponent} from './shared/components/participanti/participanti.component';\r\nimport {RegisterComponent} from './shared/components/register/register.component';\r\nimport {ScenariiComponent} from './shared/components/scenarii/scenarii.component';\r\nimport {SubmitFormComponent} from './shared/components/submit-form/submit-form.component';\r\nimport {SuccessComponent} from './shared/components/success/success.component';\r\nimport {ViewFormularComponent} from './shared/components/view-formular/view-formular.component';\r\nimport {ViewSceneComponent} from './shared/components/view-scene/view-scene.component';\r\nimport {AuthGuard} from './util/auth.guard';\r\n\r\nconst appRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    component: LoginComponent\r\n  },\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'configurations', component: ConfigurationsComponent, canActivate: [AuthGuard]},\r\n  // TODO : {path: 'home', component: HomeComponent, canActivate: [AuthGuard]}\r\n  {path: 'home', component: HomeComponent},\r\n  {path: 'home/formular', component: FormularDashboardComponent},\r\n  {path: 'home/formular/view', component: ViewFormularComponent},\r\n  {path: 'home/participanti', component: ParticipantiComponent},\r\n  {path: 'home/brochure', component: ScenariiComponent},\r\n  {path: 'home/brochure/view', component: ViewSceneComponent},\r\n  {path: 'submit/success', component: SuccessComponent},\r\n  {path: 'submit/:id', component: SubmitFormComponent}\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","\n<div class=\"top-container dashboard\">\n  <h1>{{editedScene.title}}</h1>\n</div>\n<div class=\"top-container dashboard desc\">\n  <h2>Scenarii</h2>\n</div>\n<div class=\"elements-container\">\n  <div class=\"container quest\">\n    <hr>\n      <div class=\"indiv\" *ngFor=\"let formular of editedScene.scenes;let i = index;\">\n        <div class=\"top-container dashboard\">\n          <h2>{{formular.title}}</h2>\n        </div>\n        <div class=\"top-container dashboard desc\">\n          <h3>{{formular.description}}</h3>\n        </div>\n\n        <div class=\"elements-container\">\n          <h1>Intrebari</h1>\n          <div class=\"container quest\">\n            <app-qtype *ngFor=\"let question of formular.questions; let index = index\" [type]=\"'view'\" [question]=\"question\" [index]=\"index\"></app-qtype>\n\n          </div>\n        </div>\n        <hr>\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {MatCheckboxChange} from '@angular/material/checkbox';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {messageDuration} from '../../constants';\nimport {Formular} from '../../interfaces/formular';\nimport {Question} from '../../interfaces/question';\nimport {Scene} from '../../interfaces/scene';\nimport {ErrorService} from '../../services/error.service';\nimport {FormularService} from '../../services/formular.service';\nimport {SceneService} from '../../services/scene.service';\n\n@Component({\n  selector: 'app-add-scene',\n  templateUrl: './add-scene.component.html',\n  styleUrls: ['./add-scene.component.scss'],\n  providers: [FormularService, ErrorService, SceneService]\n})\nexport class AddSceneComponent implements OnInit {\n  checked: boolean[] = [];\n  scene: Scene = { title: '', scenes: []};\n  formulars: Formular[] = [];\n  private buttonDisabler: BehaviorSubject<boolean>;\n\n  constructor(public dialogRef: MatDialogRef<AddSceneComponent>,\n              private sceneService: SceneService,\n              private errorService: ErrorService,\n              private formularService: FormularService,\n              private snackBar: MatSnackBar) {\n    this.buttonDisabler = new BehaviorSubject<boolean>(false);\n    this.formularService.getFormulars().subscribe(\n      (response) => {\n        this.formulars = [...response.formulars];\n        for ( let j = 0; j < this.formulars.length; j++){\n          this.checked.push(false);\n        }\n      },\n      error => {\n        console.log(error);\n        this.formulars = [];\n      });\n  }\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  getValue(): Observable<boolean> {\n    return this.buttonDisabler.asObservable();\n  }\n\n  setValue(newValue): void {\n    this.buttonDisabler.next(newValue);\n  }\n\n  addScene() {\n    this.setValue(true);\n    for ( let j = 0; j < this.formulars.length; j++){\n      if (this.checked[j] === true ) {\n        this.scene.scenes.push(this.formulars[j]);\n      }\n    }\n    this.sceneService.postScene(this.scene).subscribe({\n      next: (result: Scene) => {\n        this.dialogRef.close(result);\n        this.snackBar.open('Brochure added.', 'Ok', {\n          duration: messageDuration.valid\n        });\n      },\n      error: error => {\n        this.setValue(false);\n        this.snackBar.open(this.errorService.modifyErrorMessage(error.status, 'brochure'), 'Ok', {\n          duration: messageDuration.error\n        });\n      }\n    });\n  }\n  onToggle($event: MatCheckboxChange, i: number) {\n    this.checked[i] = $event.checked;\n  }\n\n}\n","<h1 mat-dialog-title> Delete this brochure?</h1>\n<div mat-dialog-actions class=\"delete\">\n  <button mat-button onclick=\"this.blur()\" (click)=\"onYesClick()\">Confirm</button>\n  <button mat-button onclick=\"this.blur()\" (click)=\"onNoClick()\">Cancel</button>\n</div>\n","<!doctype html>\r\n<html>\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <base href=\"/\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"favicon.ico\">\r\n  <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@100;300;400;500;700;900&display=swap\" rel=\"stylesheet\">\r\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\" crossorigin=\"anonymous\">\r\n</head>\r\n<body>\r\n<div class=\"content\" role=\"main\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\" integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\" integrity=\"sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo\" crossorigin=\"anonymous\"></script>\r\n<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\" integrity=\"sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI\" crossorigin=\"anonymous\"></script>\r\n</body>\r\n</html>\r\n\r\n\r\n\r\n\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}